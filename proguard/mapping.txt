android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.a:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> b
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> b
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.b:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.f:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.g:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.h:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> a
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.i:
    boolean mHasMirroring -> b
    android.graphics.Rect mTmpRect -> c
    float mPosition -> d
    float mOffset -> e
    android.support.v4.app.ActionBarDrawerToggle this$0 -> a
    void setPosition(float) -> a
    float getPosition() -> a
    void setOffset(float) -> b
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.j:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.k:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.l:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.m:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.o:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.p:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.q:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.r:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.s:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.t:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.u:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.v:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.w:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.y:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.z:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.aa:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.ab:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.ac:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.ad:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.ae:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.af:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ag:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ah:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.ai:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.aj:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ak:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.al:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.am:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.an:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bf:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bg:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bh:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bi:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.bj:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bk:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bm:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bn:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bo:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bp:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.br:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bs:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bt:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bu:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bv:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bw:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bx:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.by:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    void setFocusable(boolean) -> a
    boolean isFocused() -> f
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> g
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> h
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> i
    void setSelected(boolean) -> e
    boolean isClickable() -> j
    void setClickable(boolean) -> f
    boolean isLongClickable() -> k
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> l
    void setEnabled(boolean) -> h
    boolean isPassword() -> m
    boolean isScrollable() -> n
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> o
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> p
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> q
    java.lang.CharSequence getContentDescription() -> r
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> s
    java.lang.String getViewIdResourceName() -> t
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> r
    boolean isAccessibilityFocused(java.lang.Object) -> s
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.i:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.j:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.w:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.x:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.y:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.z:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.aa:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ab:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ad:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    java.lang.CharSequence mTitleLeft -> v
    java.lang.CharSequence mTitleRight -> w
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> a
    void setDrawerShadow(int,int) -> a
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> b
    int getDrawerLockMode(android.view.View) -> a
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> d
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> e
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> f
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> g
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.c:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.d:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.e:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.f:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.l:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.m:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.n:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.p:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.q:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.r:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.s:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.t:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.u:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.v:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.w:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.y:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.aa:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ab:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ac:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ad:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.artifex.mupdfdemo.Annotation -> com.artifex.mupdfdemo.Annotation:
    com.artifex.mupdfdemo.Annotation$Type type -> type
com.artifex.mupdfdemo.Annotation$Type -> com.artifex.mupdfdemo.Annotation$Type:
    com.artifex.mupdfdemo.Annotation$Type TEXT -> TEXT
    com.artifex.mupdfdemo.Annotation$Type LINK -> LINK
    com.artifex.mupdfdemo.Annotation$Type FREETEXT -> FREETEXT
    com.artifex.mupdfdemo.Annotation$Type LINE -> LINE
    com.artifex.mupdfdemo.Annotation$Type SQUARE -> SQUARE
    com.artifex.mupdfdemo.Annotation$Type CIRCLE -> CIRCLE
    com.artifex.mupdfdemo.Annotation$Type POLYGON -> POLYGON
    com.artifex.mupdfdemo.Annotation$Type POLYLINE -> POLYLINE
    com.artifex.mupdfdemo.Annotation$Type HIGHLIGHT -> HIGHLIGHT
    com.artifex.mupdfdemo.Annotation$Type UNDERLINE -> UNDERLINE
    com.artifex.mupdfdemo.Annotation$Type SQUIGGLY -> SQUIGGLY
    com.artifex.mupdfdemo.Annotation$Type STRIKEOUT -> STRIKEOUT
    com.artifex.mupdfdemo.Annotation$Type STAMP -> STAMP
    com.artifex.mupdfdemo.Annotation$Type CARET -> CARET
    com.artifex.mupdfdemo.Annotation$Type INK -> INK
    com.artifex.mupdfdemo.Annotation$Type POPUP -> POPUP
    com.artifex.mupdfdemo.Annotation$Type FILEATTACHMENT -> FILEATTACHMENT
    com.artifex.mupdfdemo.Annotation$Type SOUND -> SOUND
    com.artifex.mupdfdemo.Annotation$Type MOVIE -> MOVIE
    com.artifex.mupdfdemo.Annotation$Type WIDGET -> WIDGET
    com.artifex.mupdfdemo.Annotation$Type SCREEN -> SCREEN
    com.artifex.mupdfdemo.Annotation$Type PRINTERMARK -> PRINTERMARK
    com.artifex.mupdfdemo.Annotation$Type TRAPNET -> TRAPNET
    com.artifex.mupdfdemo.Annotation$Type WATERMARK -> WATERMARK
    com.artifex.mupdfdemo.Annotation$Type A3D -> A3D
    com.artifex.mupdfdemo.Annotation$Type UNKNOWN -> UNKNOWN
    com.artifex.mupdfdemo.Annotation$Type[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.Annotation$Type[] values() -> values
    com.artifex.mupdfdemo.Annotation$Type valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.ArrayDeque -> com.artifex.mupdfdemo.ArrayDeque:
    java.lang.Object[] elements -> elements
    int head -> head
    int tail -> tail
    int MIN_INITIAL_CAPACITY -> MIN_INITIAL_CAPACITY
    long serialVersionUID -> serialVersionUID
    void allocateElements(int) -> allocateElements
    void doubleCapacity() -> doubleCapacity
    java.lang.Object[] copyElements(java.lang.Object[]) -> copyElements
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    void checkInvariants() -> checkInvariants
    boolean delete(int) -> delete
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.artifex.mupdfdemo.ArrayDeque clone() -> clone
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object clone() -> clone
    int access$1(com.artifex.mupdfdemo.ArrayDeque) -> access$1
    int access$2(com.artifex.mupdfdemo.ArrayDeque) -> access$2
    java.lang.Object[] access$3(com.artifex.mupdfdemo.ArrayDeque) -> access$3
    boolean access$4(com.artifex.mupdfdemo.ArrayDeque,int) -> access$4
com.artifex.mupdfdemo.ArrayDeque$DeqIterator -> com.artifex.mupdfdemo.ArrayDeque$DeqIterator:
    int cursor -> cursor
    int fence -> fence
    int lastRet -> lastRet
    com.artifex.mupdfdemo.ArrayDeque this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.artifex.mupdfdemo.ArrayDeque$DescendingIterator -> com.artifex.mupdfdemo.ArrayDeque$DescendingIterator:
    int cursor -> cursor
    int fence -> fence
    int lastRet -> lastRet
    com.artifex.mupdfdemo.ArrayDeque this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.artifex.mupdfdemo.AsyncTask -> com.artifex.mupdfdemo.AsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    java.util.concurrent.Executor SERIAL_EXECUTOR -> SERIAL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.artifex.mupdfdemo.AsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.artifex.mupdfdemo.AsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    com.artifex.mupdfdemo.AsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status -> $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    com.artifex.mupdfdemo.AsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.artifex.mupdfdemo.AsyncTask execute(java.lang.Object[]) -> execute
    com.artifex.mupdfdemo.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    void access$0(com.artifex.mupdfdemo.AsyncTask,java.lang.Object) -> access$0
    java.util.concurrent.atomic.AtomicBoolean access$1(com.artifex.mupdfdemo.AsyncTask) -> access$1
    java.lang.Object access$2(com.artifex.mupdfdemo.AsyncTask,java.lang.Object) -> access$2
    void access$3(com.artifex.mupdfdemo.AsyncTask,java.lang.Object) -> access$3
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status() -> $SWITCH_TABLE$com$artifex$mupdfdemo$AsyncTask$Status
com.artifex.mupdfdemo.AsyncTask$1 -> com.artifex.mupdfdemo.AsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.artifex.mupdfdemo.AsyncTask$2 -> com.artifex.mupdfdemo.AsyncTask$2:
    com.artifex.mupdfdemo.AsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.artifex.mupdfdemo.AsyncTask$3 -> com.artifex.mupdfdemo.AsyncTask$3:
    com.artifex.mupdfdemo.AsyncTask this$0 -> this$0
    void done() -> done
com.artifex.mupdfdemo.AsyncTask$AsyncTaskResult -> com.artifex.mupdfdemo.AsyncTask$AsyncTaskResult:
    com.artifex.mupdfdemo.AsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.artifex.mupdfdemo.AsyncTask$InternalHandler -> com.artifex.mupdfdemo.AsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.artifex.mupdfdemo.AsyncTask$SerialExecutor -> com.artifex.mupdfdemo.AsyncTask$SerialExecutor:
    com.artifex.mupdfdemo.ArrayDeque mTasks -> mTasks
    java.lang.Runnable mActive -> mActive
    void execute(java.lang.Runnable) -> execute
    void scheduleNext() -> scheduleNext
com.artifex.mupdfdemo.AsyncTask$SerialExecutor$1 -> com.artifex.mupdfdemo.AsyncTask$SerialExecutor$1:
    com.artifex.mupdfdemo.AsyncTask$SerialExecutor this$1 -> this$1
    java.lang.Runnable val$r -> val$r
    void run() -> run
com.artifex.mupdfdemo.AsyncTask$Status -> com.artifex.mupdfdemo.AsyncTask$Status:
    com.artifex.mupdfdemo.AsyncTask$Status PENDING -> PENDING
    com.artifex.mupdfdemo.AsyncTask$Status RUNNING -> RUNNING
    com.artifex.mupdfdemo.AsyncTask$Status FINISHED -> FINISHED
    com.artifex.mupdfdemo.AsyncTask$Status[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.AsyncTask$Status[] values() -> values
    com.artifex.mupdfdemo.AsyncTask$Status valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.AsyncTask$WorkerRunnable -> com.artifex.mupdfdemo.AsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.artifex.mupdfdemo.Deque -> com.artifex.mupdfdemo.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.artifex.mupdfdemo.FilePicker -> com.artifex.mupdfdemo.FilePicker:
    com.artifex.mupdfdemo.FilePicker$FilePickerSupport support -> support
    void pick() -> pick
    void onPick(android.net.Uri) -> onPick
com.artifex.mupdfdemo.FilePicker$FilePickerSupport -> com.artifex.mupdfdemo.FilePicker$FilePickerSupport:
    void performPickFor(com.artifex.mupdfdemo.FilePicker) -> performPickFor
com.artifex.mupdfdemo.Hit -> com.artifex.mupdfdemo.Hit:
    com.artifex.mupdfdemo.Hit Nothing -> Nothing
    com.artifex.mupdfdemo.Hit Widget -> Widget
    com.artifex.mupdfdemo.Hit Annotation -> Annotation
    com.artifex.mupdfdemo.Hit[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.Hit[] values() -> values
    com.artifex.mupdfdemo.Hit valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.LinkInfo -> com.artifex.mupdfdemo.LinkInfo:
    android.graphics.RectF rect -> rect
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoExternal -> com.artifex.mupdfdemo.LinkInfoExternal:
    java.lang.String url -> url
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoInternal -> com.artifex.mupdfdemo.LinkInfoInternal:
    int pageNumber -> pageNumber
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoRemote -> com.artifex.mupdfdemo.LinkInfoRemote:
    java.lang.String fileSpec -> fileSpec
    int pageNumber -> pageNumber
    boolean newWindow -> newWindow
    void acceptVisitor(com.artifex.mupdfdemo.LinkInfoVisitor) -> acceptVisitor
com.artifex.mupdfdemo.LinkInfoVisitor -> com.artifex.mupdfdemo.LinkInfoVisitor:
    void visitInternal(com.artifex.mupdfdemo.LinkInfoInternal) -> visitInternal
    void visitExternal(com.artifex.mupdfdemo.LinkInfoExternal) -> visitExternal
    void visitRemote(com.artifex.mupdfdemo.LinkInfoRemote) -> visitRemote
com.artifex.mupdfdemo.MuPDFAlert -> com.artifex.mupdfdemo.MuPDFAlert:
    java.lang.String message -> message
    com.artifex.mupdfdemo.MuPDFAlert$IconType iconType -> iconType
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType buttonGroupType -> buttonGroupType
    java.lang.String title -> title
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed buttonPressed -> buttonPressed
com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType -> com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType:
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType Ok -> Ok
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType OkCancel -> OkCancel
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType YesNo -> YesNo
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType YesNoCancel -> YesNoCancel
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType[] values() -> values
    com.artifex.mupdfdemo.MuPDFAlert$ButtonGroupType valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed -> com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed:
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed None -> None
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed Ok -> Ok
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed Cancel -> Cancel
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed No -> No
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed Yes -> Yes
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed[] values() -> values
    com.artifex.mupdfdemo.MuPDFAlert$ButtonPressed valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFAlert$IconType -> com.artifex.mupdfdemo.MuPDFAlert$IconType:
    com.artifex.mupdfdemo.MuPDFAlert$IconType Error -> Error
    com.artifex.mupdfdemo.MuPDFAlert$IconType Warning -> Warning
    com.artifex.mupdfdemo.MuPDFAlert$IconType Question -> Question
    com.artifex.mupdfdemo.MuPDFAlert$IconType Status -> Status
    com.artifex.mupdfdemo.MuPDFAlert$IconType[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFAlert$IconType[] values() -> values
    com.artifex.mupdfdemo.MuPDFAlert$IconType valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFAlertInternal -> com.artifex.mupdfdemo.MuPDFAlertInternal:
    java.lang.String message -> message
    int iconType -> iconType
    int buttonGroupType -> buttonGroupType
    java.lang.String title -> title
    int buttonPressed -> buttonPressed
    com.artifex.mupdfdemo.MuPDFAlert toAlert() -> toAlert
com.artifex.mupdfdemo.MuPDFCore -> com.artifex.mupdfdemo.MuPDFCore:
    int numPages -> numPages
    float pageWidth -> pageWidth
    float pageHeight -> pageHeight
    long globals -> globals
    byte[] fileBuffer -> fileBuffer
    java.lang.String file_format -> file_format
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType -> $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType
    long openFile(java.lang.String) -> openFile
    long openBuffer() -> openBuffer
    java.lang.String fileFormatInternal() -> fileFormatInternal
    int countPagesInternal() -> countPagesInternal
    void gotoPageInternal(int) -> gotoPageInternal
    float getPageWidth() -> getPageWidth
    float getPageHeight() -> getPageHeight
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> drawPage
    void updatePageInternal(android.graphics.Bitmap,int,int,int,int,int,int,int) -> updatePageInternal
    android.graphics.RectF[] searchPage(java.lang.String) -> searchPage
    com.artifex.mupdfdemo.TextChar[][][][] text() -> text
    byte[] textAsHtml() -> textAsHtml
    void addMarkupAnnotationInternal(android.graphics.PointF[],int) -> addMarkupAnnotationInternal
    void addInkAnnotationInternal(android.graphics.PointF[][]) -> addInkAnnotationInternal
    void deleteAnnotationInternal(int) -> deleteAnnotationInternal
    int passClickEventInternal(int,float,float) -> passClickEventInternal
    void setFocusedWidgetChoiceSelectedInternal(java.lang.String[]) -> setFocusedWidgetChoiceSelectedInternal
    java.lang.String[] getFocusedWidgetChoiceSelected() -> getFocusedWidgetChoiceSelected
    java.lang.String[] getFocusedWidgetChoiceOptions() -> getFocusedWidgetChoiceOptions
    int getFocusedWidgetSignatureState() -> getFocusedWidgetSignatureState
    java.lang.String checkFocusedSignatureInternal() -> checkFocusedSignatureInternal
    boolean signFocusedSignatureInternal(java.lang.String,java.lang.String) -> signFocusedSignatureInternal
    int setFocusedWidgetTextInternal(java.lang.String) -> setFocusedWidgetTextInternal
    java.lang.String getFocusedWidgetTextInternal() -> getFocusedWidgetTextInternal
    int getFocusedWidgetTypeInternal() -> getFocusedWidgetTypeInternal
    com.artifex.mupdfdemo.LinkInfo[] getPageLinksInternal(int) -> getPageLinksInternal
    android.graphics.RectF[] getWidgetAreasInternal(int) -> getWidgetAreasInternal
    com.artifex.mupdfdemo.Annotation[] getAnnotationsInternal(int) -> getAnnotationsInternal
    com.artifex.mupdfdemo.OutlineItem[] getOutlineInternal() -> getOutlineInternal
    boolean hasOutlineInternal() -> hasOutlineInternal
    boolean needsPasswordInternal() -> needsPasswordInternal
    boolean authenticatePasswordInternal(java.lang.String) -> authenticatePasswordInternal
    com.artifex.mupdfdemo.MuPDFAlertInternal waitForAlertInternal() -> waitForAlertInternal
    void replyToAlertInternal(com.artifex.mupdfdemo.MuPDFAlertInternal) -> replyToAlertInternal
    void startAlertsInternal() -> startAlertsInternal
    void stopAlertsInternal() -> stopAlertsInternal
    void destroying() -> destroying
    boolean hasChangesInternal() -> hasChangesInternal
    void saveInternal() -> saveInternal
    boolean javascriptSupported() -> javascriptSupported
    int countPages() -> countPages
    java.lang.String fileFormat() -> fileFormat
    int countPagesSynchronized() -> countPagesSynchronized
    void gotoPage(int) -> gotoPage
    android.graphics.PointF getPageSize(int) -> getPageSize
    com.artifex.mupdfdemo.MuPDFAlert waitForAlert() -> waitForAlert
    void replyToAlert(com.artifex.mupdfdemo.MuPDFAlert) -> replyToAlert
    void stopAlerts() -> stopAlerts
    void startAlerts() -> startAlerts
    void onDestroy() -> onDestroy
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int,int) -> drawPage
    void updatePage(android.graphics.Bitmap,int,int,int,int,int,int,int) -> updatePage
    com.artifex.mupdfdemo.PassClickResult passClickEvent(int,float,float) -> passClickEvent
    boolean setFocusedWidgetText(int,java.lang.String) -> setFocusedWidgetText
    void setFocusedWidgetChoiceSelected(java.lang.String[]) -> setFocusedWidgetChoiceSelected
    java.lang.String checkFocusedSignature() -> checkFocusedSignature
    boolean signFocusedSignature(java.lang.String,java.lang.String) -> signFocusedSignature
    com.artifex.mupdfdemo.LinkInfo[] getPageLinks(int) -> getPageLinks
    android.graphics.RectF[] getWidgetAreas(int) -> getWidgetAreas
    com.artifex.mupdfdemo.Annotation[] getAnnoations(int) -> getAnnoations
    android.graphics.RectF[] searchPage(int,java.lang.String) -> searchPage
    byte[] html(int) -> html
    com.artifex.mupdfdemo.TextWord[][] textLines(int) -> textLines
    void addMarkupAnnotation(int,android.graphics.PointF[],com.artifex.mupdfdemo.Annotation$Type) -> addMarkupAnnotation
    void addInkAnnotation(int,android.graphics.PointF[][]) -> addInkAnnotation
    void deleteAnnotation(int,int) -> deleteAnnotation
    boolean hasOutline() -> hasOutline
    com.artifex.mupdfdemo.OutlineItem[] getOutline() -> getOutline
    boolean needsPassword() -> needsPassword
    boolean authenticatePassword(java.lang.String) -> authenticatePassword
    boolean hasChanges() -> hasChanges
    void save() -> save
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType() -> $SWITCH_TABLE$com$artifex$mupdfdemo$WidgetType
com.artifex.mupdfdemo.MuPDFPageAdapter -> com.artifex.mupdfdemo.MuPDFPageAdapter:
    android.content.Context mContext -> mContext
    com.artifex.mupdfdemo.FilePicker$FilePickerSupport mFilePickerSupport -> mFilePickerSupport
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    android.util.SparseArray mPageSizes -> mPageSizes
    android.graphics.Bitmap mSharedHqBm -> mSharedHqBm
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.artifex.mupdfdemo.MuPDFCore access$0(com.artifex.mupdfdemo.MuPDFPageAdapter) -> access$0
    android.util.SparseArray access$1(com.artifex.mupdfdemo.MuPDFPageAdapter) -> access$1
com.artifex.mupdfdemo.MuPDFPageAdapter$1 -> com.artifex.mupdfdemo.MuPDFPageAdapter$1:
    com.artifex.mupdfdemo.MuPDFPageAdapter this$0 -> this$0
    int val$position -> val$position
    com.artifex.mupdfdemo.MuPDFPageView val$pageView -> val$pageView
    android.graphics.PointF doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.PointF) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView -> com.artifex.mupdfdemo.MuPDFPageView:
    com.artifex.mupdfdemo.FilePicker$FilePickerSupport mFilePickerSupport -> mFilePickerSupport
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    com.artifex.mupdfdemo.AsyncTask mPassClick -> mPassClick
    android.graphics.RectF[] mWidgetAreas -> mWidgetAreas
    com.artifex.mupdfdemo.Annotation[] mAnnotations -> mAnnotations
    int mSelectedAnnotationIndex -> mSelectedAnnotationIndex
    com.artifex.mupdfdemo.AsyncTask mLoadWidgetAreas -> mLoadWidgetAreas
    com.artifex.mupdfdemo.AsyncTask mLoadAnnotations -> mLoadAnnotations
    android.app.AlertDialog$Builder mTextEntryBuilder -> mTextEntryBuilder
    android.app.AlertDialog$Builder mChoiceEntryBuilder -> mChoiceEntryBuilder
    android.app.AlertDialog$Builder mSigningDialogBuilder -> mSigningDialogBuilder
    android.app.AlertDialog$Builder mSignatureReportBuilder -> mSignatureReportBuilder
    android.app.AlertDialog$Builder mPasswordEntryBuilder -> mPasswordEntryBuilder
    android.widget.EditText mPasswordText -> mPasswordText
    android.app.AlertDialog mTextEntry -> mTextEntry
    android.app.AlertDialog mPasswordEntry -> mPasswordEntry
    android.widget.EditText mEditText -> mEditText
    com.artifex.mupdfdemo.AsyncTask mSetWidgetText -> mSetWidgetText
    com.artifex.mupdfdemo.AsyncTask mSetWidgetChoice -> mSetWidgetChoice
    com.artifex.mupdfdemo.AsyncTask mAddStrikeOut -> mAddStrikeOut
    com.artifex.mupdfdemo.AsyncTask mAddInk -> mAddInk
    com.artifex.mupdfdemo.AsyncTask mDeleteAnnotation -> mDeleteAnnotation
    com.artifex.mupdfdemo.AsyncTask mCheckSignature -> mCheckSignature
    com.artifex.mupdfdemo.AsyncTask mSign -> mSign
    java.lang.Runnable changeReporter -> changeReporter
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type -> $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type
    void signWithKeyFile(android.net.Uri) -> signWithKeyFile
    void signWithKeyFileAndPassword(android.net.Uri,java.lang.String) -> signWithKeyFileAndPassword
    com.artifex.mupdfdemo.LinkInfo hitLink(float,float) -> hitLink
    void invokeTextDialog(java.lang.String) -> invokeTextDialog
    void invokeChoiceDialog(java.lang.String[]) -> invokeChoiceDialog
    void invokeSignatureCheckingDialog() -> invokeSignatureCheckingDialog
    void invokeSigningDialog() -> invokeSigningDialog
    void warnNoSignatureSupport() -> warnNoSignatureSupport
    void setChangeReporter(java.lang.Runnable) -> setChangeReporter
    com.artifex.mupdfdemo.Hit passClickEvent(float,float) -> passClickEvent
    boolean copySelection() -> copySelection
    boolean markupSelection(com.artifex.mupdfdemo.Annotation$Type) -> markupSelection
    void deleteSelectedAnnotation() -> deleteSelectedAnnotation
    void deselectAnnotation() -> deselectAnnotation
    boolean saveDraw() -> saveDraw
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> drawPage
    void updatePage(android.graphics.Bitmap,int,int,int,int,int,int) -> updatePage
    com.artifex.mupdfdemo.LinkInfo[] getLinkInfo() -> getLinkInfo
    com.artifex.mupdfdemo.TextWord[][] getText() -> getText
    void addMarkup(android.graphics.PointF[],com.artifex.mupdfdemo.Annotation$Type) -> addMarkup
    void loadAnnotations() -> loadAnnotations
    void setPage(int,android.graphics.PointF) -> setPage
    void setScale(float) -> setScale
    void releaseResources() -> releaseResources
    com.artifex.mupdfdemo.MuPDFCore access$0(com.artifex.mupdfdemo.MuPDFPageView) -> access$0
    java.lang.Runnable access$1(com.artifex.mupdfdemo.MuPDFPageView) -> access$1
    android.widget.EditText access$2(com.artifex.mupdfdemo.MuPDFPageView) -> access$2
    void access$3(com.artifex.mupdfdemo.MuPDFPageView,java.lang.String) -> access$3
    void access$4(com.artifex.mupdfdemo.MuPDFPageView,com.artifex.mupdfdemo.AsyncTask) -> access$4
    com.artifex.mupdfdemo.AsyncTask access$5(com.artifex.mupdfdemo.MuPDFPageView) -> access$5
    com.artifex.mupdfdemo.FilePicker$FilePickerSupport access$6(com.artifex.mupdfdemo.MuPDFPageView) -> access$6
    void access$7(com.artifex.mupdfdemo.MuPDFPageView,android.net.Uri) -> access$7
    android.widget.EditText access$8(com.artifex.mupdfdemo.MuPDFPageView) -> access$8
    void access$9(com.artifex.mupdfdemo.MuPDFPageView,android.net.Uri,java.lang.String) -> access$9
    void access$10(com.artifex.mupdfdemo.MuPDFPageView,com.artifex.mupdfdemo.AsyncTask) -> access$10
    com.artifex.mupdfdemo.AsyncTask access$11(com.artifex.mupdfdemo.MuPDFPageView) -> access$11
    android.app.AlertDialog$Builder access$12(com.artifex.mupdfdemo.MuPDFPageView) -> access$12
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type() -> $SWITCH_TABLE$com$artifex$mupdfdemo$Annotation$Type
    void access$14(com.artifex.mupdfdemo.MuPDFPageView,java.lang.String[]) -> access$14
    void access$15(com.artifex.mupdfdemo.MuPDFPageView) -> access$15
    void access$16(com.artifex.mupdfdemo.MuPDFPageView) -> access$16
    void access$17(com.artifex.mupdfdemo.MuPDFPageView) -> access$17
    void access$18(com.artifex.mupdfdemo.MuPDFPageView) -> access$18
    void access$19(com.artifex.mupdfdemo.MuPDFPageView,com.artifex.mupdfdemo.Annotation[]) -> access$19
    void access$20(com.artifex.mupdfdemo.MuPDFPageView,android.graphics.RectF[]) -> access$20
com.artifex.mupdfdemo.MuPDFPageView$1 -> com.artifex.mupdfdemo.MuPDFPageView$1:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFPageView$10 -> com.artifex.mupdfdemo.MuPDFPageView$10:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$11 -> com.artifex.mupdfdemo.MuPDFPageView$11:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    float val$docRelX -> val$docRelX
    float val$docRelY -> val$docRelY
    com.artifex.mupdfdemo.PassClickResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.PassClickResult) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.artifex.mupdfdemo.MuPDFPageView access$2(com.artifex.mupdfdemo.MuPDFPageView$11) -> access$2
com.artifex.mupdfdemo.MuPDFPageView$11$1 -> com.artifex.mupdfdemo.MuPDFPageView$11$1:
    com.artifex.mupdfdemo.MuPDFPageView$11 this$1 -> this$1
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$SignatureState -> $SWITCH_TABLE$com$artifex$mupdfdemo$SignatureState
    void visitText(com.artifex.mupdfdemo.PassClickResultText) -> visitText
    void visitChoice(com.artifex.mupdfdemo.PassClickResultChoice) -> visitChoice
    void visitSignature(com.artifex.mupdfdemo.PassClickResultSignature) -> visitSignature
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$SignatureState() -> $SWITCH_TABLE$com$artifex$mupdfdemo$SignatureState
com.artifex.mupdfdemo.MuPDFPageView$12 -> com.artifex.mupdfdemo.MuPDFPageView$12:
    java.lang.StringBuilder line -> line
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.StringBuilder val$text -> val$text
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.MuPDFPageView$13 -> com.artifex.mupdfdemo.MuPDFPageView$13:
    android.graphics.RectF rect -> rect
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.util.ArrayList val$quadPoints -> val$quadPoints
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.MuPDFPageView$14 -> com.artifex.mupdfdemo.MuPDFPageView$14:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    com.artifex.mupdfdemo.Annotation$Type val$type -> val$type
    java.lang.Void doInBackground(android.graphics.PointF[][]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$15 -> com.artifex.mupdfdemo.MuPDFPageView$15:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Integer[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$16 -> com.artifex.mupdfdemo.MuPDFPageView$16:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.Void doInBackground(android.graphics.PointF[][][]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$17 -> com.artifex.mupdfdemo.MuPDFPageView$17:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    com.artifex.mupdfdemo.Annotation[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.Annotation[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$18 -> com.artifex.mupdfdemo.MuPDFPageView$18:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    int val$page -> val$page
    android.graphics.RectF[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(android.graphics.RectF[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$2 -> com.artifex.mupdfdemo.MuPDFPageView$2:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
    com.artifex.mupdfdemo.MuPDFPageView access$0(com.artifex.mupdfdemo.MuPDFPageView$2) -> access$0
com.artifex.mupdfdemo.MuPDFPageView$2$1 -> com.artifex.mupdfdemo.MuPDFPageView$2$1:
    com.artifex.mupdfdemo.MuPDFPageView$2 this$1 -> this$1
    java.lang.Boolean doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$3 -> com.artifex.mupdfdemo.MuPDFPageView$3:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFPageView$4 -> com.artifex.mupdfdemo.MuPDFPageView$4:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
    com.artifex.mupdfdemo.MuPDFPageView access$0(com.artifex.mupdfdemo.MuPDFPageView$4) -> access$0
com.artifex.mupdfdemo.MuPDFPageView$4$1 -> com.artifex.mupdfdemo.MuPDFPageView$4$1:
    com.artifex.mupdfdemo.MuPDFPageView$4 this$1 -> this$1
    void onPick(android.net.Uri) -> onPick
com.artifex.mupdfdemo.MuPDFPageView$5 -> com.artifex.mupdfdemo.MuPDFPageView$5:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFPageView$6 -> com.artifex.mupdfdemo.MuPDFPageView$6:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFPageView$7 -> com.artifex.mupdfdemo.MuPDFPageView$7:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    android.net.Uri val$uri -> val$uri
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdfdemo.MuPDFPageView$8 -> com.artifex.mupdfdemo.MuPDFPageView$8:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    android.net.Uri val$uri -> val$uri
    java.lang.String val$password -> val$password
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFPageView$9 -> com.artifex.mupdfdemo.MuPDFPageView$9:
    com.artifex.mupdfdemo.MuPDFPageView this$0 -> this$0
    java.lang.String[] val$options -> val$options
    void onClick(android.content.DialogInterface,int) -> onClick
    com.artifex.mupdfdemo.MuPDFPageView access$0(com.artifex.mupdfdemo.MuPDFPageView$9) -> access$0
com.artifex.mupdfdemo.MuPDFPageView$9$1 -> com.artifex.mupdfdemo.MuPDFPageView$9$1:
    com.artifex.mupdfdemo.MuPDFPageView$9 this$1 -> this$1
    java.lang.Void doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFReaderView -> com.artifex.mupdfdemo.MuPDFReaderView:
    android.content.Context mContext -> mContext
    boolean mLinksEnabled -> mLinksEnabled
    com.artifex.mupdfdemo.MuPDFReaderView$Mode mMode -> mMode
    boolean tapDisabled -> tapDisabled
    int tapPageMargin -> tapPageMargin
    float mX -> mX
    float mY -> mY
    float TOUCH_TOLERANCE -> TOUCH_TOLERANCE
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode
    void onTapMainDocArea() -> onTapMainDocArea
    void onDocMotion() -> onDocMotion
    void onHit(com.artifex.mupdfdemo.Hit) -> onHit
    void setLinksEnabled(boolean) -> setLinksEnabled
    void setMode(com.artifex.mupdfdemo.MuPDFReaderView$Mode) -> setMode
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void touch_start(float,float) -> touch_start
    void touch_move(float,float) -> touch_move
    void touch_up() -> touch_up
    void onChildSetup(int,android.view.View) -> onChildSetup
    void onMoveToChild(int) -> onMoveToChild
    void onMoveOffChild(int) -> onMoveOffChild
    void onSettle(android.view.View) -> onSettle
    void onUnsettle(android.view.View) -> onUnsettle
    void onNotInUse(android.view.View) -> onNotInUse
    void onScaleChild(android.view.View,java.lang.Float) -> onScaleChild
    android.content.Context access$0(com.artifex.mupdfdemo.MuPDFReaderView) -> access$0
    int[] $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode() -> $SWITCH_TABLE$com$artifex$mupdfdemo$MuPDFReaderView$Mode
com.artifex.mupdfdemo.MuPDFReaderView$1 -> com.artifex.mupdfdemo.MuPDFReaderView$1:
    com.artifex.mupdfdemo.MuPDFReaderView this$0 -> this$0
    void visitInternal(com.artifex.mupdfdemo.LinkInfoInternal) -> visitInternal
    void visitExternal(com.artifex.mupdfdemo.LinkInfoExternal) -> visitExternal
    void visitRemote(com.artifex.mupdfdemo.LinkInfoRemote) -> visitRemote
com.artifex.mupdfdemo.MuPDFReaderView$2 -> com.artifex.mupdfdemo.MuPDFReaderView$2:
    com.artifex.mupdfdemo.MuPDFReaderView this$0 -> this$0
    void run() -> run
com.artifex.mupdfdemo.MuPDFReaderView$2$1 -> com.artifex.mupdfdemo.MuPDFReaderView$2$1:
    com.artifex.mupdfdemo.MuPDFReaderView$2 this$1 -> this$1
    void applyToView(android.view.View) -> applyToView
com.artifex.mupdfdemo.MuPDFReaderView$Mode -> com.artifex.mupdfdemo.MuPDFReaderView$Mode:
    com.artifex.mupdfdemo.MuPDFReaderView$Mode Viewing -> Viewing
    com.artifex.mupdfdemo.MuPDFReaderView$Mode Selecting -> Selecting
    com.artifex.mupdfdemo.MuPDFReaderView$Mode Drawing -> Drawing
    com.artifex.mupdfdemo.MuPDFReaderView$Mode[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.MuPDFReaderView$Mode[] values() -> values
    com.artifex.mupdfdemo.MuPDFReaderView$Mode valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.MuPDFReflowAdapter -> com.artifex.mupdfdemo.MuPDFReflowAdapter:
    android.content.Context mContext -> mContext
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.artifex.mupdfdemo.MuPDFReflowView -> com.artifex.mupdfdemo.MuPDFReflowView:
    com.artifex.mupdfdemo.MuPDFCore mCore -> mCore
    android.os.Handler mHandler -> mHandler
    android.graphics.Point mParentSize -> mParentSize
    int mPage -> mPage
    float mScale -> mScale
    int mContentHeight -> mContentHeight
    com.artifex.mupdfdemo.AsyncTask mLoadHTML -> mLoadHTML
    void requestHeight() -> requestHeight
    void setPage(int,android.graphics.PointF) -> setPage
    int getPage() -> getPage
    void setScale(float) -> setScale
    void blank(int) -> blank
    com.artifex.mupdfdemo.Hit passClickEvent(float,float) -> passClickEvent
    com.artifex.mupdfdemo.LinkInfo hitLink(float,float) -> hitLink
    void selectText(float,float,float,float) -> selectText
    void deselectText() -> deselectText
    boolean copySelection() -> copySelection
    boolean markupSelection(com.artifex.mupdfdemo.Annotation$Type) -> markupSelection
    void startDraw(float,float) -> startDraw
    void continueDraw(float,float) -> continueDraw
    void cancelDraw() -> cancelDraw
    boolean saveDraw() -> saveDraw
    void setSearchBoxes(android.graphics.RectF[]) -> setSearchBoxes
    void setLinkHighlighting(boolean) -> setLinkHighlighting
    void deleteSelectedAnnotation() -> deleteSelectedAnnotation
    void deselectAnnotation() -> deselectAnnotation
    void setChangeReporter(java.lang.Runnable) -> setChangeReporter
    void update() -> update
    void updateHq(boolean) -> updateHq
    void removeHq() -> removeHq
    void releaseResources() -> releaseResources
    void releaseBitmaps() -> releaseBitmaps
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void access$0(com.artifex.mupdfdemo.MuPDFReflowView,int) -> access$0
    android.os.Handler access$1(com.artifex.mupdfdemo.MuPDFReflowView) -> access$1
    float access$2(com.artifex.mupdfdemo.MuPDFReflowView) -> access$2
    com.artifex.mupdfdemo.MuPDFCore access$3(com.artifex.mupdfdemo.MuPDFReflowView) -> access$3
    int access$4(com.artifex.mupdfdemo.MuPDFReflowView) -> access$4
com.artifex.mupdfdemo.MuPDFReflowView$1 -> com.artifex.mupdfdemo.MuPDFReflowView$1:
    com.artifex.mupdfdemo.MuPDFReflowView this$0 -> this$0
    void reportContentHeight(java.lang.String) -> reportContentHeight
    com.artifex.mupdfdemo.MuPDFReflowView access$0(com.artifex.mupdfdemo.MuPDFReflowView$1) -> access$0
com.artifex.mupdfdemo.MuPDFReflowView$1$1 -> com.artifex.mupdfdemo.MuPDFReflowView$1$1:
    com.artifex.mupdfdemo.MuPDFReflowView$1 this$1 -> this$1
    void run() -> run
com.artifex.mupdfdemo.MuPDFReflowView$2 -> com.artifex.mupdfdemo.MuPDFReflowView$2:
    com.artifex.mupdfdemo.MuPDFReflowView this$0 -> this$0
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.artifex.mupdfdemo.MuPDFReflowView$3 -> com.artifex.mupdfdemo.MuPDFReflowView$3:
    com.artifex.mupdfdemo.MuPDFReflowView this$0 -> this$0
    byte[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(byte[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.MuPDFView -> com.artifex.mupdfdemo.MuPDFView:
    void setPage(int,android.graphics.PointF) -> setPage
    void setScale(float) -> setScale
    int getPage() -> getPage
    void blank(int) -> blank
    com.artifex.mupdfdemo.Hit passClickEvent(float,float) -> passClickEvent
    com.artifex.mupdfdemo.LinkInfo hitLink(float,float) -> hitLink
    void selectText(float,float,float,float) -> selectText
    void deselectText() -> deselectText
    boolean copySelection() -> copySelection
    boolean markupSelection(com.artifex.mupdfdemo.Annotation$Type) -> markupSelection
    void deleteSelectedAnnotation() -> deleteSelectedAnnotation
    void setSearchBoxes(android.graphics.RectF[]) -> setSearchBoxes
    void setLinkHighlighting(boolean) -> setLinkHighlighting
    void deselectAnnotation() -> deselectAnnotation
    void startDraw(float,float) -> startDraw
    void continueDraw(float,float) -> continueDraw
    void cancelDraw() -> cancelDraw
    boolean saveDraw() -> saveDraw
    void setChangeReporter(java.lang.Runnable) -> setChangeReporter
    void update() -> update
    void updateHq(boolean) -> updateHq
    void removeHq() -> removeHq
    void releaseResources() -> releaseResources
    void releaseBitmaps() -> releaseBitmaps
com.artifex.mupdfdemo.OpaqueImageView -> com.artifex.mupdfdemo.OpaqueImageView:
    boolean isOpaque() -> isOpaque
com.artifex.mupdfdemo.OutlineActivityData -> com.artifex.mupdfdemo.OutlineActivityData:
    com.artifex.mupdfdemo.OutlineItem[] items -> items
    int position -> position
    com.artifex.mupdfdemo.OutlineActivityData singleton -> singleton
    void set(com.artifex.mupdfdemo.OutlineActivityData) -> set
    com.artifex.mupdfdemo.OutlineActivityData get() -> get
com.artifex.mupdfdemo.OutlineItem -> com.artifex.mupdfdemo.OutlineItem:
    int level -> level
    java.lang.String title -> title
    int page -> page
com.artifex.mupdfdemo.PageView -> com.artifex.mupdfdemo.PageView:
    int HIGHLIGHT_COLOR -> HIGHLIGHT_COLOR
    int LINK_COLOR -> LINK_COLOR
    int BOX_COLOR -> BOX_COLOR
    int INK_COLOR -> INK_COLOR
    float INK_THICKNESS -> INK_THICKNESS
    int BACKGROUND_COLOR -> BACKGROUND_COLOR
    int PROGRESS_DIALOG_DELAY -> PROGRESS_DIALOG_DELAY
    android.content.Context mContext -> mContext
    int mPageNumber -> mPageNumber
    android.graphics.Point mParentSize -> mParentSize
    android.graphics.Point mSize -> mSize
    float mSourceScale -> mSourceScale
    android.widget.ImageView mEntire -> mEntire
    android.graphics.Bitmap mEntireBm -> mEntireBm
    android.graphics.Matrix mEntireMat -> mEntireMat
    com.artifex.mupdfdemo.AsyncTask mGetText -> mGetText
    com.artifex.mupdfdemo.AsyncTask mGetLinkInfo -> mGetLinkInfo
    com.artifex.mupdfdemo.AsyncTask mDrawEntire -> mDrawEntire
    android.graphics.Point mPatchViewSize -> mPatchViewSize
    android.graphics.Rect mPatchArea -> mPatchArea
    android.widget.ImageView mPatch -> mPatch
    android.graphics.Bitmap mPatchBm -> mPatchBm
    com.artifex.mupdfdemo.AsyncTask mDrawPatch -> mDrawPatch
    android.graphics.RectF[] mSearchBoxes -> mSearchBoxes
    com.artifex.mupdfdemo.LinkInfo[] mLinks -> mLinks
    android.graphics.RectF mSelectBox -> mSelectBox
    com.artifex.mupdfdemo.TextWord[][] mText -> mText
    android.graphics.RectF mItemSelectBox -> mItemSelectBox
    java.util.ArrayList mDrawing -> mDrawing
    android.view.View mSearchView -> mSearchView
    boolean mIsBlank -> mIsBlank
    boolean mHighlightLinks -> mHighlightLinks
    android.widget.ProgressBar mBusyIndicator -> mBusyIndicator
    android.os.Handler mHandler -> mHandler
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> drawPage
    void updatePage(android.graphics.Bitmap,int,int,int,int,int,int) -> updatePage
    com.artifex.mupdfdemo.LinkInfo[] getLinkInfo() -> getLinkInfo
    com.artifex.mupdfdemo.TextWord[][] getText() -> getText
    void addMarkup(android.graphics.PointF[],com.artifex.mupdfdemo.Annotation$Type) -> addMarkup
    void reinit() -> reinit
    void releaseResources() -> releaseResources
    void releaseBitmaps() -> releaseBitmaps
    void blank(int) -> blank
    void setPage(int,android.graphics.PointF) -> setPage
    void setSearchBoxes(android.graphics.RectF[]) -> setSearchBoxes
    void setLinkHighlighting(boolean) -> setLinkHighlighting
    void deselectText() -> deselectText
    void selectText(float,float,float,float) -> selectText
    void startDraw(float,float) -> startDraw
    void continueDraw(float,float) -> continueDraw
    void cancelDraw() -> cancelDraw
    android.graphics.PointF[][] getDraw() -> getDraw
    void processSelectedText(com.artifex.mupdfdemo.TextProcessor) -> processSelectedText
    void setItemSelectBox(android.graphics.RectF) -> setItemSelectBox
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void updateHq(boolean) -> updateHq
    void update() -> update
    void removeHq() -> removeHq
    int getPage() -> getPage
    boolean isOpaque() -> isOpaque
    android.view.View access$0(com.artifex.mupdfdemo.PageView) -> access$0
    android.graphics.Bitmap access$1(com.artifex.mupdfdemo.PageView) -> access$1
    android.widget.ImageView access$2(com.artifex.mupdfdemo.PageView) -> access$2
    android.widget.ProgressBar access$3(com.artifex.mupdfdemo.PageView) -> access$3
    void access$4(com.artifex.mupdfdemo.PageView,android.widget.ProgressBar) -> access$4
    android.os.Handler access$5(com.artifex.mupdfdemo.PageView) -> access$5
    boolean access$6(com.artifex.mupdfdemo.PageView) -> access$6
    android.graphics.RectF[] access$7(com.artifex.mupdfdemo.PageView) -> access$7
    boolean access$8(com.artifex.mupdfdemo.PageView) -> access$8
    android.graphics.RectF access$9(com.artifex.mupdfdemo.PageView) -> access$9
    com.artifex.mupdfdemo.TextWord[][] access$10(com.artifex.mupdfdemo.PageView) -> access$10
    android.graphics.RectF access$11(com.artifex.mupdfdemo.PageView) -> access$11
    void access$12(com.artifex.mupdfdemo.PageView,com.artifex.mupdfdemo.TextWord[][]) -> access$12
    android.graphics.Bitmap access$13(com.artifex.mupdfdemo.PageView) -> access$13
    void access$14(com.artifex.mupdfdemo.PageView,android.graphics.Point) -> access$14
    void access$15(com.artifex.mupdfdemo.PageView,android.graphics.Rect) -> access$15
    android.widget.ImageView access$16(com.artifex.mupdfdemo.PageView) -> access$16
    android.graphics.Rect access$17(com.artifex.mupdfdemo.PageView) -> access$17
com.artifex.mupdfdemo.PageView$1 -> com.artifex.mupdfdemo.PageView$1:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    com.artifex.mupdfdemo.LinkInfo[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.LinkInfo[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PageView$2 -> com.artifex.mupdfdemo.PageView$2:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.artifex.mupdfdemo.PageView access$2(com.artifex.mupdfdemo.PageView$2) -> access$2
com.artifex.mupdfdemo.PageView$2$1 -> com.artifex.mupdfdemo.PageView$2$1:
    com.artifex.mupdfdemo.PageView$2 this$1 -> this$1
    void run() -> run
com.artifex.mupdfdemo.PageView$3 -> com.artifex.mupdfdemo.PageView$3:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    void onDraw(android.graphics.Canvas) -> onDraw
com.artifex.mupdfdemo.PageView$3$1 -> com.artifex.mupdfdemo.PageView$3$1:
    android.graphics.RectF rect -> rect
    com.artifex.mupdfdemo.PageView$3 this$1 -> this$1
    android.graphics.Canvas val$canvas -> val$canvas
    float val$scale -> val$scale
    android.graphics.Paint val$paint -> val$paint
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.PageView$4 -> com.artifex.mupdfdemo.PageView$4:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    com.artifex.mupdfdemo.TextWord[][] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.TextWord[][]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PageView$5 -> com.artifex.mupdfdemo.PageView$5:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    com.artifex.mupdfdemo.PatchInfo doInBackground(com.artifex.mupdfdemo.PatchInfo[]) -> doInBackground
    void onPostExecute(com.artifex.mupdfdemo.PatchInfo) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PageView$6 -> com.artifex.mupdfdemo.PageView$6:
    com.artifex.mupdfdemo.PageView this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdfdemo.PassClickResult -> com.artifex.mupdfdemo.PassClickResult:
    boolean changed -> changed
    void acceptVisitor(com.artifex.mupdfdemo.PassClickResultVisitor) -> acceptVisitor
com.artifex.mupdfdemo.PassClickResultChoice -> com.artifex.mupdfdemo.PassClickResultChoice:
    java.lang.String[] options -> options
    java.lang.String[] selected -> selected
    void acceptVisitor(com.artifex.mupdfdemo.PassClickResultVisitor) -> acceptVisitor
com.artifex.mupdfdemo.PassClickResultSignature -> com.artifex.mupdfdemo.PassClickResultSignature:
    com.artifex.mupdfdemo.SignatureState state -> state
    void acceptVisitor(com.artifex.mupdfdemo.PassClickResultVisitor) -> acceptVisitor
com.artifex.mupdfdemo.PassClickResultText -> com.artifex.mupdfdemo.PassClickResultText:
    java.lang.String text -> text
    void acceptVisitor(com.artifex.mupdfdemo.PassClickResultVisitor) -> acceptVisitor
com.artifex.mupdfdemo.PassClickResultVisitor -> com.artifex.mupdfdemo.PassClickResultVisitor:
    void visitText(com.artifex.mupdfdemo.PassClickResultText) -> visitText
    void visitChoice(com.artifex.mupdfdemo.PassClickResultChoice) -> visitChoice
    void visitSignature(com.artifex.mupdfdemo.PassClickResultSignature) -> visitSignature
com.artifex.mupdfdemo.PatchInfo -> com.artifex.mupdfdemo.PatchInfo:
    android.graphics.Point patchViewSize -> patchViewSize
    android.graphics.Rect patchArea -> patchArea
    boolean completeRedraw -> completeRedraw
com.artifex.mupdfdemo.ReaderView -> com.artifex.mupdfdemo.ReaderView:
    int MOVING_DIAGONALLY -> MOVING_DIAGONALLY
    int MOVING_LEFT -> MOVING_LEFT
    int MOVING_RIGHT -> MOVING_RIGHT
    int MOVING_UP -> MOVING_UP
    int MOVING_DOWN -> MOVING_DOWN
    int FLING_MARGIN -> FLING_MARGIN
    int GAP -> GAP
    float MIN_SCALE -> MIN_SCALE
    float MAX_SCALE -> MAX_SCALE
    float REFLOW_SCALE_FACTOR -> REFLOW_SCALE_FACTOR
    android.widget.Adapter mAdapter -> mAdapter
    int mCurrent -> mCurrent
    boolean mResetLayout -> mResetLayout
    android.util.SparseArray mChildViews -> mChildViews
    java.util.LinkedList mViewCache -> mViewCache
    boolean mUserInteracting -> mUserInteracting
    boolean mScaling -> mScaling
    float mScale -> mScale
    int mXScroll -> mXScroll
    int mYScroll -> mYScroll
    boolean mReflow -> mReflow
    boolean mReflowChanged -> mReflowChanged
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    android.view.ScaleGestureDetector mScaleGestureDetector -> mScaleGestureDetector
    android.widget.Scroller mScroller -> mScroller
    com.artifex.mupdfdemo.Stepper mStepper -> mStepper
    int mScrollerLastX -> mScrollerLastX
    int mScrollerLastY -> mScrollerLastY
    boolean mScrollDisabled -> mScrollDisabled
    int getDisplayedViewIndex() -> getDisplayedViewIndex
    void setDisplayedViewIndex(int) -> setDisplayedViewIndex
    void moveToNext() -> moveToNext
    void moveToPrevious() -> moveToPrevious
    int smartAdvanceAmount(int,int) -> smartAdvanceAmount
    void smartMoveForwards() -> smartMoveForwards
    void smartMoveBackwards() -> smartMoveBackwards
    void resetupChildren() -> resetupChildren
    void applyToChildren(com.artifex.mupdfdemo.ReaderView$ViewMapper) -> applyToChildren
    void refresh(boolean) -> refresh
    void onChildSetup(int,android.view.View) -> onChildSetup
    void onMoveToChild(int) -> onMoveToChild
    void onMoveOffChild(int) -> onMoveOffChild
    void onSettle(android.view.View) -> onSettle
    void onUnsettle(android.view.View) -> onUnsettle
    void onNotInUse(android.view.View) -> onNotInUse
    void onScaleChild(android.view.View,java.lang.Float) -> onScaleChild
    android.view.View getView(int) -> getView
    android.view.View getDisplayedView() -> getDisplayedView
    void run() -> run
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.Adapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setSelection(int) -> setSelection
    android.view.View getCached() -> getCached
    android.view.View getOrCreateChild(int) -> getOrCreateChild
    void addAndMeasureChild(int,android.view.View) -> addAndMeasureChild
    void measureView(android.view.View) -> measureView
    android.graphics.Rect getScrollBounds(int,int,int,int) -> getScrollBounds
    android.graphics.Rect getScrollBounds(android.view.View) -> getScrollBounds
    android.graphics.Point getCorrection(android.graphics.Rect) -> getCorrection
    void postSettle(android.view.View) -> postSettle
    void postUnsettle(android.view.View) -> postUnsettle
    void slideViewOntoScreen(android.view.View) -> slideViewOntoScreen
    android.graphics.Point subScreenSizeOffset(android.view.View) -> subScreenSizeOffset
    int directionOfTravel(float,float) -> directionOfTravel
    boolean withinBoundsInDirectionOfTravel(android.graphics.Rect,float,float) -> withinBoundsInDirectionOfTravel
    float access$0(com.artifex.mupdfdemo.ReaderView) -> access$0
com.artifex.mupdfdemo.ReaderView$1 -> com.artifex.mupdfdemo.ReaderView$1:
    com.artifex.mupdfdemo.ReaderView this$0 -> this$0
    void applyToView(android.view.View) -> applyToView
com.artifex.mupdfdemo.ReaderView$2 -> com.artifex.mupdfdemo.ReaderView$2:
    com.artifex.mupdfdemo.ReaderView this$0 -> this$0
    android.view.View val$v -> val$v
    void run() -> run
com.artifex.mupdfdemo.ReaderView$3 -> com.artifex.mupdfdemo.ReaderView$3:
    com.artifex.mupdfdemo.ReaderView this$0 -> this$0
    android.view.View val$v -> val$v
    void run() -> run
com.artifex.mupdfdemo.ReaderView$ViewMapper -> com.artifex.mupdfdemo.ReaderView$ViewMapper:
    void applyToView(android.view.View) -> applyToView
com.artifex.mupdfdemo.SearchTaskResult -> com.artifex.mupdfdemo.SearchTaskResult:
    java.lang.String txt -> txt
    int pageNumber -> pageNumber
    android.graphics.RectF[] searchBoxes -> searchBoxes
    com.artifex.mupdfdemo.SearchTaskResult singleton -> singleton
    com.artifex.mupdfdemo.SearchTaskResult get() -> get
    void set(com.artifex.mupdfdemo.SearchTaskResult) -> set
com.artifex.mupdfdemo.SignatureState -> com.artifex.mupdfdemo.SignatureState:
    com.artifex.mupdfdemo.SignatureState NoSupport -> NoSupport
    com.artifex.mupdfdemo.SignatureState Unsigned -> Unsigned
    com.artifex.mupdfdemo.SignatureState Signed -> Signed
    com.artifex.mupdfdemo.SignatureState[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.SignatureState[] values() -> values
    com.artifex.mupdfdemo.SignatureState valueOf(java.lang.String) -> valueOf
com.artifex.mupdfdemo.Stepper -> com.artifex.mupdfdemo.Stepper:
    android.view.View mPoster -> mPoster
    java.lang.Runnable mTask -> mTask
    boolean mPending -> mPending
    void prod() -> prod
com.artifex.mupdfdemo.Stepper$1 -> com.artifex.mupdfdemo.Stepper$1:
    com.artifex.mupdfdemo.Stepper this$0 -> this$0
    void run() -> run
com.artifex.mupdfdemo.Stepper$2 -> com.artifex.mupdfdemo.Stepper$2:
    com.artifex.mupdfdemo.Stepper this$0 -> this$0
    void run() -> run
com.artifex.mupdfdemo.TextChar -> com.artifex.mupdfdemo.TextChar:
    char c -> c
com.artifex.mupdfdemo.TextProcessor -> com.artifex.mupdfdemo.TextProcessor:
    void onStartLine() -> onStartLine
    void onWord(com.artifex.mupdfdemo.TextWord) -> onWord
    void onEndLine() -> onEndLine
com.artifex.mupdfdemo.TextSelector -> com.artifex.mupdfdemo.TextSelector:
    com.artifex.mupdfdemo.TextWord[][] mText -> mText
    android.graphics.RectF mSelectBox -> mSelectBox
    void select(com.artifex.mupdfdemo.TextProcessor) -> select
com.artifex.mupdfdemo.TextWord -> com.artifex.mupdfdemo.TextWord:
    java.lang.String w -> w
    void Add(com.artifex.mupdfdemo.TextChar) -> Add
com.artifex.mupdfdemo.WidgetType -> com.artifex.mupdfdemo.WidgetType:
    com.artifex.mupdfdemo.WidgetType NONE -> NONE
    com.artifex.mupdfdemo.WidgetType TEXT -> TEXT
    com.artifex.mupdfdemo.WidgetType LISTBOX -> LISTBOX
    com.artifex.mupdfdemo.WidgetType COMBOBOX -> COMBOBOX
    com.artifex.mupdfdemo.WidgetType SIGNATURE -> SIGNATURE
    com.artifex.mupdfdemo.WidgetType[] ENUM$VALUES -> ENUM$VALUES
    com.artifex.mupdfdemo.WidgetType[] values() -> values
    com.artifex.mupdfdemo.WidgetType valueOf(java.lang.String) -> valueOf
com.crashlytics.android.A -> com.a.a.a:
    com.crashlytics.android.v a -> a
    java.lang.Object call() -> call
com.crashlytics.android.B -> com.a.a.b:
    com.crashlytics.android.v a -> a
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.crashlytics.android.C -> com.a.a.c:
    com.crashlytics.android.v a -> a
    java.lang.Object call() -> call
com.crashlytics.android.Crashlytics -> com.a.a.d:
    long a -> a
    java.util.concurrent.ConcurrentHashMap b -> b
    com.crashlytics.android.CrashlyticsListener c -> c
    com.crashlytics.android.v d -> d
    com.crashlytics.android.internal.ao e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    android.content.ContextWrapper j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    boolean r -> r
    com.crashlytics.android.PinningInfoProvider s -> s
    com.crashlytics.android.internal.av t -> t
    float u -> u
    com.crashlytics.android.Crashlytics v -> v
    void start(android.content.Context) -> a
    void start(android.content.Context,float) -> a
    com.crashlytics.android.Crashlytics getInstance() -> a
    void b(java.lang.String) -> a
    java.util.Map a() -> b
    java.lang.String getCrashlyticsVersion() -> c
    com.crashlytics.android.internal.ao b() -> d
    void c() -> e
    java.lang.String getVersion() -> f
    java.lang.String d() -> g
    java.lang.String e() -> h
    java.lang.String f() -> i
    java.lang.String g() -> j
    java.lang.String h() -> k
    java.lang.String i() -> l
    boolean j() -> m
    boolean k() -> n
    void a(boolean) -> a
    com.crashlytics.android.v l() -> o
    java.lang.String m() -> p
    java.lang.String n() -> q
    java.lang.String o() -> r
    boolean p() -> s
    com.crashlytics.android.V q() -> t
    com.crashlytics.android.internal.aR r() -> u
    void a(java.lang.String,android.content.Context,float) -> a
    boolean a(android.content.Context,float) -> b
    com.crashlytics.android.b a(com.crashlytics.android.Y) -> a
    boolean a(com.crashlytics.android.Crashlytics,android.app.Activity,com.crashlytics.android.internal.aQ) -> a
    com.crashlytics.android.internal.av s() -> v
    int a(com.crashlytics.android.Crashlytics,float,int) -> a
    boolean a(com.crashlytics.android.Crashlytics,android.content.Context,float) -> a
    com.crashlytics.android.v a(com.crashlytics.android.Crashlytics) -> a
com.crashlytics.android.CrashlyticsListener -> com.a.a.e:
    void crashlyticsDidDetectCrashDuringPreviousExecution() -> a
com.crashlytics.android.CrashlyticsMissingDependencyException -> com.a.a.f:
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.crashlytics.android.D -> com.a.a.g:
    java.io.File a -> a
    void a() -> a
com.crashlytics.android.E -> com.a.a.h:
    com.crashlytics.android.v a -> a
    void run() -> run
com.crashlytics.android.F -> com.a.a.i:
    java.lang.String a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.G -> com.a.a.j:
    java.lang.Runnable a -> a
    void run() -> run
com.crashlytics.android.H -> com.a.a.k:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.crashlytics.android.I -> com.a.a.l:
    java.util.concurrent.Callable a -> a
    java.lang.Object call() -> call
com.crashlytics.android.J -> com.a.a.m:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.crashlytics.android.K -> com.a.a.n:
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.L -> com.a.a.o:
    com.crashlytics.android.v a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.crashlytics.android.M -> com.a.a.p:
    com.crashlytics.android.v a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.crashlytics.android.N -> com.a.a.q:
    java.util.Date a -> a
    java.lang.Thread b -> b
    java.lang.Throwable c -> c
    com.crashlytics.android.v d -> d
    java.lang.Object call() -> call
com.crashlytics.android.O -> com.a.a.r:
    com.crashlytics.android.v a -> a
    java.lang.Object call() -> call
com.crashlytics.android.PinningInfoProvider -> com.a.a.s:
com.crashlytics.android.Q -> com.a.a.t:
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.R -> com.a.a.u:
    java.lang.String a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.S -> com.a.a.v:
    java.lang.String a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.T -> com.a.a.w:
com.crashlytics.android.U -> com.a.a.x:
    java.lang.String a -> a
    com.crashlytics.android.Z b -> b
com.crashlytics.android.V -> com.a.a.y:
    boolean a(com.crashlytics.android.U) -> a
com.crashlytics.android.W -> com.a.a.z:
    boolean a(com.crashlytics.android.U) -> a
com.crashlytics.android.X -> com.a.a.aa:
    android.content.Context a -> a
    com.crashlytics.android.internal.aQ b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.crashlytics.android.Y -> com.a.a.ab:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    com.crashlytics.android.Y a(android.content.Context,java.lang.String) -> a
com.crashlytics.android.Z -> com.a.a.ac:
    java.io.File a -> a
    java.util.Map b -> b
    boolean a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.io.File d() -> d
    java.util.Map e() -> e
com.crashlytics.android.a -> com.a.a.ad:
    boolean a(com.crashlytics.android.b) -> a
    com.crashlytics.android.internal.ay a(com.crashlytics.android.internal.ay,com.crashlytics.android.b) -> a
com.crashlytics.android.aa -> com.a.a.ae:
    java.io.FilenameFilter b -> b
    java.util.Map a -> a
    short[] c -> c
    java.lang.Object d -> d
    com.crashlytics.android.V e -> e
    java.lang.Thread f -> f
    void a(float) -> a
    boolean a(com.crashlytics.android.Z) -> a
    java.util.List a() -> a
    java.lang.Thread a(com.crashlytics.android.aa,java.lang.Thread) -> a
    short[] b() -> b
com.crashlytics.android.ab -> com.a.a.af:
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.ac -> com.a.a.ag:
    float a -> a
    com.crashlytics.android.aa b -> b
    void a() -> a
com.crashlytics.android.ad -> com.a.a.ah:
com.crashlytics.android.ae -> com.a.a.ai:
    int a(int,int) -> a
com.crashlytics.android.b -> com.a.a.aj:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    com.crashlytics.android.Y j -> j
    void a(java.io.File,java.io.FilenameFilter,int,java.util.Comparator) -> a
com.crashlytics.android.c -> com.a.a.ak:
    java.lang.String a -> a
    boolean b -> b
    void a(java.lang.String,java.lang.String) -> a
com.crashlytics.android.d -> com.a.a.al:
    byte[] a -> a
    int b -> b
    int a() -> a
    com.crashlytics.android.d a(byte[],int,int) -> a
    com.crashlytics.android.d a(java.lang.String) -> a
    void a(byte[],int,int,int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.io.InputStream b() -> b
com.crashlytics.android.e -> com.a.a.am:
    java.util.concurrent.atomic.AtomicLong a -> a
    java.lang.String b -> b
    byte[] a(long) -> a
    java.lang.String toString() -> toString
com.crashlytics.android.f -> com.a.a.an:
    java.lang.String b -> b
    java.io.File c -> c
    boolean d -> d
    java.io.FilenameFilter a -> a
    void close() -> close
    void a() -> a
com.crashlytics.android.g -> com.a.a.ao:
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.h -> com.a.a.ap:
    byte[] a -> a
    int b -> b
    int c -> c
    java.io.OutputStream d -> d
    com.crashlytics.android.h a(java.io.OutputStream) -> a
    void a(int,float) -> a
    void a(int,long) -> a
    void a(int,boolean) -> a
    void a(int,java.lang.String) -> a
    void a(int,com.crashlytics.android.d) -> a
    void a(int,int) -> a
    void b(int,int) -> b
    void c(int,int) -> c
    int b(int,float) -> b
    int b(int,long) -> b
    int b(int,boolean) -> b
    int b(int,com.crashlytics.android.d) -> b
    int d(int,int) -> d
    int e(int,int) -> e
    int f(int,int) -> f
    void a() -> a
    void flush() -> flush
    void d(int) -> d
    void a(byte[]) -> a
    void g(int,int) -> g
    int a(int) -> a
    void b(int) -> b
    int c(int) -> c
    void a(long) -> a
    int e(int) -> e
com.crashlytics.android.i -> com.a.a.aq:
com.crashlytics.android.internal.A -> com.a.a.a.a:
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void a(int,java.lang.String,java.lang.String) -> a
com.crashlytics.android.internal.B -> com.a.a.a.b:
    android.os.Handler b -> a
com.crashlytics.android.internal.D -> com.a.a.a.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.crashlytics.android.internal.ao d -> d
    com.crashlytics.android.internal.aJ e -> e
    long f -> f
    com.crashlytics.android.internal.av g -> g
    com.crashlytics.android.internal.O h -> h
    com.crashlytics.android.internal.D a() -> a
    void c() -> e
    java.lang.String b() -> b
    void a(com.crashlytics.android.internal.af) -> a
    void a(com.crashlytics.android.internal.D) -> a
com.crashlytics.android.internal.E -> com.a.a.a.d:
    com.crashlytics.android.internal.D a -> a
    void a() -> a
com.crashlytics.android.internal.F -> com.a.a.a.e:
    android.app.Application b -> b
    android.app.Application$ActivityLifecycleCallbacks c -> c
    void a() -> a
com.crashlytics.android.internal.G -> com.a.a.a.f:
    com.crashlytics.android.internal.F a -> a
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityStopped(android.app.Activity) -> onActivityStopped
com.crashlytics.android.internal.H -> com.a.a.a.g:
    boolean a(java.lang.String,java.util.List) -> a
com.crashlytics.android.internal.I -> com.a.a.a.h:
    void a() -> a
    void a(com.crashlytics.android.internal.aK,java.lang.String) -> a
    void b() -> b
    void a(com.crashlytics.android.internal.V) -> a
    void c() -> c
    void d() -> d
com.crashlytics.android.internal.J -> com.a.a.a.i:
    java.util.concurrent.ScheduledExecutorService a -> a
    com.crashlytics.android.internal.K b -> b
    com.crashlytics.android.internal.av c -> c
    java.util.concurrent.ScheduledFuture d -> d
    int e -> e
    com.crashlytics.android.internal.N f -> f
    void a() -> a
    void a(int,int) -> a
    void c() -> c
    void a(com.crashlytics.android.internal.aK,java.lang.String) -> a
    void b() -> b
    void a(com.crashlytics.android.internal.V) -> a
    void d() -> d
com.crashlytics.android.internal.K -> com.a.a.a.j:
    com.crashlytics.android.internal.X a -> a
    com.crashlytics.android.internal.ah b -> b
    com.crashlytics.android.internal.aK c -> c
    com.crashlytics.android.internal.aj d -> d
    int e -> e
    java.util.List f -> f
    void a(com.crashlytics.android.internal.V) -> a
    void a(com.crashlytics.android.internal.ak) -> a
    boolean a() -> a
    int e() -> e
    void a(com.crashlytics.android.internal.aK) -> a
    void a(java.lang.String) -> a
    java.util.List b() -> b
    void a(java.util.List) -> a
    void c() -> c
    void d() -> d
    long b(java.lang.String) -> b
com.crashlytics.android.internal.L -> com.a.a.a.k:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.crashlytics.android.internal.M -> com.a.a.a.l:
    java.io.File a -> a
    long b -> b
com.crashlytics.android.internal.N -> com.a.a.a.m:
    boolean a(java.lang.String,java.util.List) -> a
com.crashlytics.android.internal.O -> com.a.a.a.n:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.concurrent.ScheduledExecutorService j -> j
    com.crashlytics.android.internal.U a -> a
    void a(java.lang.String) -> a
    void b() -> b
    void a(android.app.Activity) -> a
    void b(android.app.Activity) -> b
    void c(android.app.Activity) -> c
    void d(android.app.Activity) -> d
    void e(android.app.Activity) -> e
    void f(android.app.Activity) -> f
    void g(android.app.Activity) -> g
    void a(com.crashlytics.android.internal.W,android.app.Activity,boolean) -> a
    void a(com.crashlytics.android.internal.V,boolean) -> a
    void a(com.crashlytics.android.internal.aK,java.lang.String) -> a
    void c() -> c
    void a() -> a
    void a(java.lang.Runnable) -> a
    java.lang.String a(com.crashlytics.android.internal.O) -> a
    java.lang.String b(com.crashlytics.android.internal.O) -> b
    java.lang.String c(com.crashlytics.android.internal.O) -> c
    java.lang.String d(com.crashlytics.android.internal.O) -> d
    java.lang.String e(com.crashlytics.android.internal.O) -> e
    java.lang.String f(com.crashlytics.android.internal.O) -> f
    java.lang.String g(com.crashlytics.android.internal.O) -> g
    java.lang.String h(com.crashlytics.android.internal.O) -> h
com.crashlytics.android.internal.P -> com.a.a.a.o:
    java.lang.String a -> a
    com.crashlytics.android.internal.O b -> b
    void run() -> run
com.crashlytics.android.internal.Q -> com.a.a.a.p:
    com.crashlytics.android.internal.V a -> a
    boolean b -> b
    com.crashlytics.android.internal.O c -> c
    void run() -> run
com.crashlytics.android.internal.R -> com.a.a.a.q:
    com.crashlytics.android.internal.aK a -> a
    java.lang.String b -> b
    com.crashlytics.android.internal.O c -> c
    void run() -> run
com.crashlytics.android.internal.S -> com.a.a.a.r:
    com.crashlytics.android.internal.O a -> a
    void run() -> run
com.crashlytics.android.internal.T -> com.a.a.a.s:
    com.crashlytics.android.internal.O a -> a
    void run() -> run
com.crashlytics.android.internal.U -> com.a.a.a.t:
    void a() -> a
    void a(com.crashlytics.android.internal.aK,java.lang.String) -> a
    void b() -> b
    void a(com.crashlytics.android.internal.V) -> a
    void c() -> c
    void d() -> d
com.crashlytics.android.internal.V -> com.a.a.a.u:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    long i -> i
    com.crashlytics.android.internal.W j -> j
    java.util.Map k -> k
    java.lang.String l -> l
    com.crashlytics.android.internal.V a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.crashlytics.android.internal.W,java.util.Map) -> a
    java.lang.String toString() -> toString
com.crashlytics.android.internal.W -> com.a.a.a.v:
    com.crashlytics.android.internal.W a -> a
    com.crashlytics.android.internal.W b -> b
    com.crashlytics.android.internal.W c -> c
    com.crashlytics.android.internal.W d -> d
    com.crashlytics.android.internal.W e -> e
    com.crashlytics.android.internal.W f -> f
    com.crashlytics.android.internal.W g -> g
    com.crashlytics.android.internal.W h -> h
    com.crashlytics.android.internal.W i -> i
    com.crashlytics.android.internal.W j -> j
    com.crashlytics.android.internal.W[] k -> k
    com.crashlytics.android.internal.W[] values() -> values
    com.crashlytics.android.internal.W valueOf(java.lang.String) -> valueOf
com.crashlytics.android.internal.X -> com.a.a.a.w:
    byte[] a(com.crashlytics.android.internal.V) -> a
    org.json.JSONObject a(java.util.Map) -> a
com.crashlytics.android.internal.Y -> com.a.a.a.x:
    com.crashlytics.android.internal.K a -> a
    com.crashlytics.android.internal.U b -> b
    void run() -> run
com.crashlytics.android.internal.Z -> com.a.a.a.y:
    java.lang.String a -> a
    java.util.regex.Pattern b -> b
    java.lang.String c -> c
    com.crashlytics.android.internal.av d -> d
    com.crashlytics.android.internal.ax e -> e
    java.lang.String f -> f
    java.lang.String a() -> a
    com.crashlytics.android.internal.ay b() -> b
    com.crashlytics.android.internal.ay a(java.util.Map) -> a
com.crashlytics.android.internal.aA -> com.a.a.a.z:
    java.io.Closeable a -> a
    boolean b -> b
    void b() -> a
com.crashlytics.android.internal.aB -> com.a.a.a.aa:
    com.crashlytics.android.internal.aB a -> a
    java.net.HttpURLConnection a(java.net.URL) -> a
com.crashlytics.android.internal.aC -> com.a.a.a.ab:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.crashlytics.android.internal.aD -> com.a.a.a.ac:
    java.lang.Throwable getCause() -> getCause
com.crashlytics.android.internal.aE -> com.a.a.a.ad:
    java.lang.Object a() -> b
    void b() -> a
    java.lang.Object call() -> call
com.crashlytics.android.internal.aF -> com.a.a.a.ae:
    java.nio.charset.CharsetEncoder a -> a
    com.crashlytics.android.internal.aF a(java.lang.String) -> a
com.crashlytics.android.internal.aG -> com.a.a.a.af:
    java.io.InputStream a() -> a
    java.lang.String b() -> b
    java.lang.String[] c() -> c
com.crashlytics.android.internal.aH -> com.a.a.a.ag:
    javax.net.ssl.TrustManager[] a -> a
    com.crashlytics.android.internal.aI b -> b
    long c -> c
    java.util.List d -> d
    java.util.Set e -> e
    javax.net.ssl.TrustManager[] a(com.crashlytics.android.internal.aI) -> a
    boolean a(java.security.cert.X509Certificate) -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    byte[] a(java.lang.String) -> a
com.crashlytics.android.internal.aI -> com.a.a.a.ah:
    java.security.KeyStore a -> a
    java.util.HashMap b -> b
    boolean a(java.security.cert.X509Certificate) -> a
    java.security.cert.X509Certificate b(java.security.cert.X509Certificate) -> b
    java.util.HashMap a(java.security.KeyStore) -> a
    java.security.KeyStore a(java.io.InputStream,java.lang.String) -> a
com.crashlytics.android.internal.aJ -> com.a.a.a.ai:
    java.lang.String a -> a
    android.content.Context b -> b
    android.content.SharedPreferences a() -> a
    android.content.SharedPreferences$Editor b() -> b
    boolean a(android.content.SharedPreferences$Editor) -> a
com.crashlytics.android.internal.aK -> com.a.a.a.aj:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.crashlytics.android.internal.aL -> com.a.a.a.ak:
com.crashlytics.android.internal.aM -> com.a.a.a.al:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
com.crashlytics.android.internal.aN -> com.a.a.a.am:
    org.json.JSONObject a() -> a
    void a(long,org.json.JSONObject) -> a
com.crashlytics.android.internal.aO -> com.a.a.a.an:
    org.json.JSONObject a(com.crashlytics.android.internal.aZ) -> a
com.crashlytics.android.internal.aP -> com.a.a.a.ao:
    boolean a -> a
    boolean b -> b
    boolean c -> c
com.crashlytics.android.internal.aQ -> com.a.a.a.ap:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String g -> g
com.crashlytics.android.internal.aR -> com.a.a.a.aq:
    int a -> a
com.crashlytics.android.internal.aS -> com.a.a.a.ar:
    java.util.concurrent.atomic.AtomicReference a -> a
    com.crashlytics.android.internal.aW b -> b
    boolean c -> c
    com.crashlytics.android.internal.aS a() -> a
    com.crashlytics.android.internal.aS a(android.content.Context,com.crashlytics.android.internal.av,java.lang.String,java.lang.String,java.lang.String) -> a
    com.crashlytics.android.internal.aX b() -> b
    java.lang.Object a(com.crashlytics.android.internal.aU,java.lang.Object) -> a
    boolean c() -> c
    boolean d() -> d
    java.lang.String a(java.lang.String,java.lang.String,android.content.Context) -> a
com.crashlytics.android.internal.aT -> com.a.a.a.as:
    com.crashlytics.android.internal.aS a -> a
    com.crashlytics.android.internal.aS a() -> a
com.crashlytics.android.internal.aU -> com.a.a.a.at:
    java.lang.Object a(com.crashlytics.android.internal.aX) -> a
com.crashlytics.android.internal.aV -> com.a.a.a.au:
    com.crashlytics.android.internal.aV a -> a
    com.crashlytics.android.internal.aV b -> b
    com.crashlytics.android.internal.aV c -> c
    com.crashlytics.android.internal.aV[] d -> d
    com.crashlytics.android.internal.aV[] values() -> values
    com.crashlytics.android.internal.aV valueOf(java.lang.String) -> valueOf
com.crashlytics.android.internal.aW -> com.a.a.a.av:
    com.crashlytics.android.internal.aZ a -> a
    com.crashlytics.android.internal.aY b -> b
    com.crashlytics.android.internal.ah c -> c
    com.crashlytics.android.internal.aN d -> d
    com.crashlytics.android.internal.ba e -> e
    com.crashlytics.android.internal.aX a() -> a
    com.crashlytics.android.internal.aX a(com.crashlytics.android.internal.aV) -> a
    com.crashlytics.android.internal.aX b(com.crashlytics.android.internal.aV) -> b
    void a(org.json.JSONObject,java.lang.String) -> a
com.crashlytics.android.internal.aX -> com.a.a.a.aw:
    com.crashlytics.android.internal.aM a -> a
    com.crashlytics.android.internal.aR b -> b
    com.crashlytics.android.internal.aQ c -> c
    com.crashlytics.android.internal.aP d -> d
    com.crashlytics.android.internal.aK e -> e
    long f -> f
com.crashlytics.android.internal.aY -> com.a.a.a.ax:
    com.crashlytics.android.internal.aX a(com.crashlytics.android.internal.ah,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONObject) -> a
com.crashlytics.android.internal.aZ -> com.a.a.a.ay:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
com.crashlytics.android.internal.aa -> com.a.a.a.az:
    void run() -> run
    void a() -> a
com.crashlytics.android.internal.ab -> com.a.a.a.ba:
    java.lang.Boolean b -> b
    char[] c -> c
    long d -> d
    java.lang.Boolean e -> e
    java.util.Comparator a -> a
    android.content.SharedPreferences a() -> a
    java.lang.String a(java.io.File,java.lang.String) -> a
    int b() -> b
    long c() -> c
    long a(java.lang.String,java.lang.String,int) -> a
    android.app.ActivityManager$RunningAppProcessInfo a(java.lang.String,android.content.Context) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.io.InputStream) -> b
    java.lang.String a(byte[],java.lang.String) -> a
    java.lang.String a(java.lang.String[]) -> a
    long a(android.content.Context) -> a
    long b(java.lang.String) -> b
    float b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(int,java.lang.String) -> a
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    int a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean d() -> d
    boolean e() -> e
    int f() -> f
    int a(boolean) -> a
    javax.crypto.Cipher b(int,java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    boolean f(android.content.Context) -> f
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(java.io.Closeable,java.lang.String) -> a
    void a(java.io.Flushable,java.lang.String) -> a
    boolean e(java.lang.String) -> e
    void a(java.io.InputStream,java.io.OutputStream,byte[]) -> a
    java.lang.String g(android.content.Context) -> g
    int h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
com.crashlytics.android.internal.ac -> com.a.a.a.bb:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.crashlytics.android.internal.ad -> com.a.a.a.bc:
    com.crashlytics.android.internal.ad a -> a
    com.crashlytics.android.internal.ad b -> b
    com.crashlytics.android.internal.ad c -> c
    com.crashlytics.android.internal.ad d -> d
    com.crashlytics.android.internal.ad e -> e
    com.crashlytics.android.internal.ad f -> f
    com.crashlytics.android.internal.ad g -> g
    com.crashlytics.android.internal.ad h -> h
    com.crashlytics.android.internal.ad i -> i
    com.crashlytics.android.internal.ad j -> j
    java.util.Map k -> k
    com.crashlytics.android.internal.ad[] l -> l
    com.crashlytics.android.internal.ad[] values() -> values
    com.crashlytics.android.internal.ad valueOf(java.lang.String) -> valueOf
    com.crashlytics.android.internal.ad a() -> a
com.crashlytics.android.internal.ae -> com.a.a.a.bd:
    java.lang.String a -> a
    java.lang.String a() -> a
com.crashlytics.android.internal.af -> com.a.a.a.be:
com.crashlytics.android.internal.ah -> com.a.a.a.bf:
    long a() -> a
    java.util.concurrent.ExecutorService a(java.lang.String) -> a
    java.util.concurrent.ScheduledExecutorService b(java.lang.String) -> b
    java.util.concurrent.ThreadFactory c(java.lang.String) -> c
    void a(java.lang.String,java.util.concurrent.ExecutorService) -> a
com.crashlytics.android.internal.ai -> com.a.a.a.bg:
    com.crashlytics.android.internal.ai a -> a
    com.crashlytics.android.internal.ai b -> b
    com.crashlytics.android.internal.ai c -> c
    com.crashlytics.android.internal.ai d -> d
    int e -> e
    com.crashlytics.android.internal.ai[] f -> f
    com.crashlytics.android.internal.ai[] values() -> values
    com.crashlytics.android.internal.ai valueOf(java.lang.String) -> valueOf
    int a() -> a
    java.lang.String toString() -> toString
    com.crashlytics.android.internal.ai a(java.lang.String) -> a
com.crashlytics.android.internal.aj -> com.a.a.a.bh:
    java.io.File a -> a
    java.lang.String b -> b
    com.crashlytics.android.internal.aq c -> c
    java.io.File d -> d
    java.io.File e -> e
    void a(byte[]) -> a
    int a() -> a
    boolean b() -> b
    void a(java.lang.String) -> a
    java.util.List a(int) -> a
    java.util.List c() -> c
    void a(java.util.List) -> a
    void d() -> d
    boolean a(int,int) -> a
com.crashlytics.android.internal.ak -> com.a.a.a.bi:
    void c() -> c
com.crashlytics.android.internal.al -> com.a.a.a.bj:
    java.lang.String a -> a
    java.util.concurrent.atomic.AtomicLong b -> b
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.crashlytics.android.internal.am -> com.a.a.a.bk:
    java.lang.Runnable a -> a
    void a() -> a
com.crashlytics.android.internal.an -> com.a.a.a.bl:
    java.lang.String a -> a
    java.util.concurrent.ExecutorService b -> b
    long c -> c
    java.util.concurrent.TimeUnit d -> d
    void a() -> a
com.crashlytics.android.internal.ao -> com.a.a.a.bm:
    java.util.regex.Pattern a -> a
    java.lang.String b -> b
    java.util.concurrent.locks.ReentrantLock c -> c
    boolean d -> d
    boolean e -> e
    android.content.Context f -> f
    boolean a() -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String c(java.lang.String) -> c
    java.lang.String e() -> e
    java.lang.String a(android.content.SharedPreferences) -> a
    java.util.Map f() -> f
    void a(java.util.Map,com.crashlytics.android.internal.ap,java.lang.String) -> a
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
com.crashlytics.android.internal.ap -> com.a.a.a.bn:
    com.crashlytics.android.internal.ap a -> a
    com.crashlytics.android.internal.ap b -> b
    com.crashlytics.android.internal.ap c -> c
    com.crashlytics.android.internal.ap d -> d
    com.crashlytics.android.internal.ap e -> e
    int f -> f
    com.crashlytics.android.internal.ap[] g -> g
    com.crashlytics.android.internal.ap[] values() -> values
    com.crashlytics.android.internal.ap valueOf(java.lang.String) -> valueOf
com.crashlytics.android.internal.aq -> com.a.a.a.bo:
    java.util.logging.Logger a -> a
    java.io.RandomAccessFile b -> b
    int c -> c
    int d -> d
    com.crashlytics.android.internal.as e -> e
    com.crashlytics.android.internal.as f -> f
    byte[] g -> g
    void a(byte[],int,int) -> a
    void a(byte[],int[]) -> a
    int a(byte[],int) -> a
    void a(int,int,int,int) -> a
    com.crashlytics.android.internal.as a(int) -> a
    java.io.RandomAccessFile a(java.io.File) -> a
    int b(int) -> b
    void a(int,byte[],int,int) -> a
    void b(int,byte[],int,int) -> b
    void a(byte[]) -> a
    void b(byte[],int,int) -> b
    int a() -> a
    boolean b() -> b
    void c(int) -> c
    void d(int) -> d
    void a(com.crashlytics.android.internal.au) -> a
    java.lang.Object b(java.lang.Object,java.lang.String) -> b
    void close() -> close
    boolean a(int,int) -> a
    java.lang.String toString() -> toString
    int a(com.crashlytics.android.internal.aq,int) -> a
    java.lang.Object a(java.lang.Object,java.lang.String) -> a
    void a(com.crashlytics.android.internal.aq,int,byte[],int,int) -> a
    java.io.RandomAccessFile a(com.crashlytics.android.internal.aq) -> a
com.crashlytics.android.internal.ar -> com.a.a.a.bp:
    boolean a -> a
    java.lang.StringBuilder b -> b
    void a(java.io.InputStream,int) -> a
com.crashlytics.android.internal.as -> com.a.a.a.bq:
    com.crashlytics.android.internal.as a -> a
    int b -> b
    int c -> c
    java.lang.String toString() -> toString
com.crashlytics.android.internal.at -> com.a.a.a.br:
    int a -> a
    int b -> b
    com.crashlytics.android.internal.aq c -> c
    int read(byte[],int,int) -> read
    int read() -> read
com.crashlytics.android.internal.au -> com.a.a.a.bs:
    void a(java.io.InputStream,int) -> a
com.crashlytics.android.internal.av -> com.a.a.a.bt:
    com.crashlytics.android.internal.q a -> a
    com.crashlytics.android.internal.aG b -> b
    javax.net.ssl.SSLSocketFactory c -> c
    boolean d -> d
    java.security.cert.X509Certificate[] a(java.security.cert.X509Certificate[],com.crashlytics.android.internal.aI) -> a
    boolean a(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> a
    com.crashlytics.android.internal.ay a(com.crashlytics.android.internal.ax,java.lang.String,java.util.Map) -> a
    javax.net.ssl.SSLSocketFactory b() -> a
    javax.net.ssl.SSLSocketFactory c() -> b
com.crashlytics.android.internal.aw -> com.a.a.a.bu:
    int[] a -> a
com.crashlytics.android.internal.ax -> com.a.a.a.bv:
    com.crashlytics.android.internal.ax a -> a
    com.crashlytics.android.internal.ax b -> b
    com.crashlytics.android.internal.ax c -> c
    com.crashlytics.android.internal.ax d -> d
    com.crashlytics.android.internal.ax[] e -> e
    com.crashlytics.android.internal.ax[] values() -> values
    com.crashlytics.android.internal.ax valueOf(java.lang.String) -> valueOf
com.crashlytics.android.internal.ay -> com.a.a.a.bw:
    com.crashlytics.android.internal.aB a -> a
    java.net.HttpURLConnection b -> b
    java.net.URL c -> c
    java.lang.String d -> d
    com.crashlytics.android.internal.aF e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    int i -> i
    java.lang.String c(java.lang.String) -> c
    java.lang.String c(java.lang.CharSequence) -> c
    java.lang.String a(java.lang.CharSequence,java.util.Map) -> a
    com.crashlytics.android.internal.ay a(java.lang.CharSequence,java.util.Map,boolean) -> a
    com.crashlytics.android.internal.ay b(java.lang.CharSequence,java.util.Map,boolean) -> b
    com.crashlytics.android.internal.ay a(java.lang.CharSequence) -> a
    com.crashlytics.android.internal.ay b(java.lang.CharSequence) -> b
    java.net.HttpURLConnection e() -> e
    java.lang.String toString() -> toString
    java.net.HttpURLConnection a() -> a
    int b() -> b
    java.lang.String d(java.lang.String) -> d
    java.lang.String c() -> c
    java.io.InputStream f() -> f
    com.crashlytics.android.internal.ay a(int) -> a
    com.crashlytics.android.internal.ay a(java.lang.String,java.lang.String) -> a
    com.crashlytics.android.internal.ay a(java.util.Map$Entry) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String c(java.lang.String,java.lang.String) -> c
    com.crashlytics.android.internal.ay a(boolean) -> a
    com.crashlytics.android.internal.ay a(java.io.InputStream,java.io.OutputStream) -> a
    com.crashlytics.android.internal.ay g() -> g
    com.crashlytics.android.internal.ay h() -> h
    com.crashlytics.android.internal.ay i() -> i
    com.crashlytics.android.internal.ay j() -> j
    com.crashlytics.android.internal.ay a(java.lang.String,java.lang.String,java.lang.String) -> a
    com.crashlytics.android.internal.ay b(java.lang.String,java.lang.String) -> b
    com.crashlytics.android.internal.ay b(java.lang.String,java.lang.String,java.lang.String) -> b
    com.crashlytics.android.internal.ay a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.crashlytics.android.internal.ay a(java.lang.String,java.lang.Number) -> a
    com.crashlytics.android.internal.ay a(java.lang.String,java.lang.String,java.lang.String,java.io.File) -> a
    com.crashlytics.android.internal.ay a(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream) -> a
    com.crashlytics.android.internal.ay d(java.lang.String,java.lang.String) -> d
    com.crashlytics.android.internal.ay d(java.lang.CharSequence) -> d
    java.lang.String d() -> d
    java.lang.String b(java.lang.String) -> b
    int a(com.crashlytics.android.internal.ay) -> a
com.crashlytics.android.internal.az -> com.a.a.a.bx:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    com.crashlytics.android.internal.ay c -> c
    java.lang.Object a() -> b
com.crashlytics.android.internal.b -> com.a.a.a.by:
    java.util.concurrent.ConcurrentMap b -> a
    java.util.concurrent.ConcurrentMap c -> b
    java.lang.String d -> c
    com.crashlytics.android.internal.m e -> d
    com.crashlytics.android.internal.i f -> e
    java.lang.ThreadLocal g -> f
    java.lang.ThreadLocal h -> g
    java.util.Map i -> h
    java.lang.String toString() -> toString
com.crashlytics.android.internal.ba -> com.a.a.a.bz:
    org.json.JSONObject a(com.crashlytics.android.internal.aZ) -> a
com.crashlytics.android.internal.c -> com.a.a.a.ca:
    java.lang.Object initialValue() -> initialValue
com.crashlytics.android.internal.d -> com.a.a.a.cb:
    java.lang.Object initialValue() -> initialValue
com.crashlytics.android.internal.i -> com.a.a.a.cc:
    com.crashlytics.android.internal.i a -> a
com.crashlytics.android.internal.j -> com.a.a.a.cd:
com.crashlytics.android.internal.m -> com.a.a.a.ce:
    com.crashlytics.android.internal.m a -> a
    com.crashlytics.android.internal.m b -> b
com.crashlytics.android.internal.n -> com.a.a.a.cf:
com.crashlytics.android.internal.o -> com.a.a.a.cg:
com.crashlytics.android.internal.p -> com.a.a.a.ch:
    android.content.Context a -> a
    boolean b -> b
    void c() -> e
    void a(android.content.Context) -> b
    android.content.Context getContext() -> w
    boolean isInitialized() -> x
    java.lang.String getName() -> y
com.crashlytics.android.internal.q -> com.a.a.a.ci:
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void a(int,java.lang.String,java.lang.String) -> a
com.crashlytics.android.internal.r -> com.a.a.a.cj:
    boolean b(int) -> b
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.String,java.lang.String,boolean) -> a
    android.app.Activity a(android.content.Context) -> a
    android.app.Application b(android.content.Context) -> b
    java.lang.String a(android.content.Context,boolean) -> a
    int a(int) -> a
com.crashlytics.android.internal.u -> com.a.a.a.ck:
com.crashlytics.android.internal.v -> com.a.a.a.cl:
    com.crashlytics.android.internal.b a -> a
    java.util.concurrent.atomic.AtomicReference b -> b
    boolean c -> c
    java.io.File d -> d
    android.app.Application e -> e
    java.lang.ref.WeakReference f -> f
    java.lang.String g -> g
    int h -> h
    java.util.concurrent.ConcurrentHashMap i -> i
    com.crashlytics.android.internal.v a() -> a
    void a(android.content.Context,com.crashlytics.android.internal.u[]) -> a
    com.crashlytics.android.internal.q b() -> b
    void a(com.crashlytics.android.internal.q) -> a
    android.app.Application d() -> c
    com.crashlytics.android.internal.v a(android.app.Activity) -> a
    android.app.Activity e() -> d
    void c() -> e
    java.lang.String getVersion() -> f
    com.crashlytics.android.internal.u a(java.lang.Class) -> a
    boolean f() -> g
    int g() -> h
    java.io.File h() -> i
    java.lang.String i() -> j
    com.crashlytics.android.internal.v a(com.crashlytics.android.internal.v,android.app.Activity) -> a
com.crashlytics.android.internal.w -> com.a.a.a.cm:
    com.crashlytics.android.internal.v a -> a
    void a(com.crashlytics.android.internal.w,android.app.Application) -> a
com.crashlytics.android.internal.x -> com.a.a.a.cn:
    com.crashlytics.android.internal.w a -> a
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
com.crashlytics.android.internal.y -> com.a.a.a.co:
    com.crashlytics.android.internal.v a -> a
    com.crashlytics.android.internal.v a() -> a
com.crashlytics.android.internal.z -> com.a.a.a.cp:
    java.lang.String a -> a
    java.io.File getDatabasePath(java.lang.String) -> getDatabasePath
    android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory) -> openOrCreateDatabase
    android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler) -> openOrCreateDatabase
    java.io.File getFilesDir() -> getFilesDir
    java.io.File getExternalFilesDir(java.lang.String) -> getExternalFilesDir
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getExternalCacheDir() -> getExternalCacheDir
com.crashlytics.android.l -> com.a.a.ar:
    com.crashlytics.android.Crashlytics a -> a
    java.lang.Object a(com.crashlytics.android.internal.aX) -> a
com.crashlytics.android.m -> com.a.a.as:
    com.crashlytics.android.Crashlytics a -> a
    java.lang.Object a(com.crashlytics.android.internal.aX) -> a
com.crashlytics.android.n -> com.a.a.at:
    java.lang.Object a(com.crashlytics.android.internal.aX) -> a
com.crashlytics.android.o -> com.a.a.au:
    java.lang.Object a(com.crashlytics.android.internal.aX) -> a
com.crashlytics.android.p -> com.a.a.av:
    android.app.Activity c -> c
    com.crashlytics.android.u a -> a
    com.crashlytics.android.X d -> d
    com.crashlytics.android.internal.aQ e -> e
    com.crashlytics.android.Crashlytics b -> b
    void run() -> run
com.crashlytics.android.q -> com.a.a.aw:
    com.crashlytics.android.p a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.crashlytics.android.r -> com.a.a.ax:
    com.crashlytics.android.p a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.crashlytics.android.s -> com.a.a.ay:
    com.crashlytics.android.p a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.crashlytics.android.t -> com.a.a.az:
    android.content.Context a -> a
    float b -> b
    java.util.concurrent.CountDownLatch c -> c
    com.crashlytics.android.Crashlytics d -> d
    void a() -> a
com.crashlytics.android.u -> com.a.a.ba:
    boolean a -> a
    java.util.concurrent.CountDownLatch b -> b
    void a(boolean) -> a
    boolean a() -> a
    void b() -> b
com.crashlytics.android.v -> com.a.a.bb:
    java.io.FilenameFilter a -> a
    java.util.Comparator b -> b
    java.util.Comparator c -> c
    java.util.regex.Pattern d -> d
    java.util.Map e -> e
    com.crashlytics.android.d f -> f
    java.util.concurrent.atomic.AtomicInteger g -> g
    java.util.concurrent.atomic.AtomicBoolean h -> h
    int i -> i
    java.lang.Thread$UncaughtExceptionHandler j -> j
    java.io.File k -> k
    java.io.File l -> l
    java.util.concurrent.atomic.AtomicBoolean m -> m
    java.lang.String n -> n
    android.content.BroadcastReceiver o -> o
    android.content.BroadcastReceiver p -> p
    com.crashlytics.android.d q -> q
    com.crashlytics.android.d r -> r
    java.util.concurrent.ExecutorService s -> s
    android.app.ActivityManager$RunningAppProcessInfo t -> t
    com.crashlytics.android.internal.aq u -> u
    boolean v -> v
    java.lang.Thread[] w -> w
    java.util.List x -> x
    java.lang.StackTraceElement[] y -> y
    boolean a() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean b() -> b
    com.crashlytics.android.d a(com.crashlytics.android.internal.aq) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    boolean f() -> f
    boolean g() -> g
    void l() -> k
    void m() -> l
    java.lang.String n() -> m
    java.lang.String a(java.io.File) -> a
    void a(com.crashlytics.android.f) -> a
    void a(com.crashlytics.android.h,java.io.File[],java.lang.String) -> a
    void a(com.crashlytics.android.h,java.lang.String) -> a
    void a(java.lang.String) -> a
    java.io.File[] o() -> n
    java.io.File[] a(java.io.FilenameFilter) -> a
    void p() -> o
    void a(java.lang.Throwable,java.io.OutputStream) -> a
    void a(java.lang.Throwable,java.io.Writer) -> a
    int q() -> p
    com.crashlytics.android.d b(java.lang.String) -> b
    void c(java.lang.String) -> c
    int a(com.crashlytics.android.internal.ap,java.lang.String) -> a
    int a(int,com.crashlytics.android.d,com.crashlytics.android.d,int,long,long,boolean,java.util.Map,int,com.crashlytics.android.d,com.crashlytics.android.d) -> a
    void a(com.crashlytics.android.h,java.io.File) -> a
    void a(java.lang.String,int) -> a
    void a(java.util.Date,com.crashlytics.android.h,java.lang.Thread,java.lang.Throwable,java.lang.String,boolean) -> a
    void a(com.crashlytics.android.h,java.lang.Thread,java.lang.Throwable) -> a
    void a(com.crashlytics.android.h,java.util.Map) -> a
    int r() -> q
    void a(com.crashlytics.android.h,java.lang.Throwable,int,int) -> a
    int a(java.lang.Thread,java.lang.StackTraceElement[],int,boolean) -> a
    void a(com.crashlytics.android.h,java.lang.Thread,java.lang.StackTraceElement[],int,boolean) -> a
    int a(java.lang.StackTraceElement,boolean) -> a
    void a(com.crashlytics.android.h,int,java.lang.StackTraceElement,boolean) -> a
    int a(java.lang.Thread,java.lang.Throwable,java.util.Map) -> a
    int b(java.lang.Thread,java.lang.Throwable) -> a
    int a(java.lang.String,java.lang.String) -> a
    int a(float,int,boolean,int,long,long) -> a
    int a(java.lang.Throwable,int) -> a
    int s() -> r
    void h() -> h
    void a(java.io.File[]) -> a
    java.lang.Object a(java.util.concurrent.Callable) -> a
    java.util.concurrent.Future a(java.lang.Runnable) -> a
    java.util.concurrent.Future b(java.util.concurrent.Callable) -> b
    java.util.regex.Pattern i() -> i
    boolean a(com.crashlytics.android.v,boolean) -> a
    void a(com.crashlytics.android.v,java.util.Date,java.lang.Thread,java.lang.Throwable) -> a
    java.util.concurrent.atomic.AtomicBoolean a(com.crashlytics.android.v) -> a
    void b(com.crashlytics.android.v) -> b
    void c(com.crashlytics.android.v) -> c
    java.io.File f(com.crashlytics.android.v) -> d
    java.util.Map j() -> j
    java.io.File[] a(com.crashlytics.android.v,java.io.FilenameFilter) -> a
com.crashlytics.android.w -> com.a.a.bc:
    boolean accept(java.io.File,java.lang.String) -> accept
com.crashlytics.android.y -> com.a.a.bd:
    byte[] a -> a
    int[] b -> b
    void a(java.io.InputStream,int) -> a
com.crashlytics.android.z -> com.a.a.be:
    com.crashlytics.android.v a -> a
    java.lang.Object call() -> call
com.dropbox.client2.DropboxAPI -> com.dropbox.client2.DropboxAPI:
    int VERSION -> VERSION
    java.lang.String SDK_VERSION -> SDK_VERSION
    long MAX_UPLOAD_SIZE -> MAX_UPLOAD_SIZE
    int METADATA_DEFAULT_LIMIT -> METADATA_DEFAULT_LIMIT
    int REVISION_DEFAULT_LIMIT -> REVISION_DEFAULT_LIMIT
    int SEARCH_DEFAULT_LIMIT -> SEARCH_DEFAULT_LIMIT
    int UPLOAD_SO_TIMEOUT_MS -> UPLOAD_SO_TIMEOUT_MS
    com.dropbox.client2.session.Session session -> session
    com.dropbox.client2.DropboxAPI$ChunkedUploader getChunkedUploader(java.io.InputStream) -> getChunkedUploader
    com.dropbox.client2.DropboxAPI$ChunkedUploader getChunkedUploader(java.io.InputStream,long) -> getChunkedUploader
    com.dropbox.client2.DropboxAPI$ChunkedUploader getChunkedUploader(java.io.InputStream,long,int) -> getChunkedUploader
    com.dropbox.client2.DropboxAPI$ChunkedUploadRequest chunkedUploadRequest(java.io.InputStream,long,com.dropbox.client2.ProgressListener,long,java.lang.String) -> chunkedUploadRequest
    com.dropbox.client2.session.Session getSession() -> getSession
    com.dropbox.client2.DropboxAPI$Account accountInfo() -> accountInfo
    com.dropbox.client2.DropboxAPI$DropboxFileInfo getFile(java.lang.String,java.lang.String,java.io.OutputStream,com.dropbox.client2.ProgressListener) -> getFile
    com.dropbox.client2.DropboxAPI$DropboxInputStream getFileStream(java.lang.String,java.lang.String) -> getFileStream
    com.dropbox.client2.DropboxAPI$Entry putFile(java.lang.String,java.io.InputStream,long,java.lang.String,com.dropbox.client2.ProgressListener) -> putFile
    com.dropbox.client2.DropboxAPI$UploadRequest putFileRequest(java.lang.String,java.io.InputStream,long,java.lang.String,com.dropbox.client2.ProgressListener) -> putFileRequest
    com.dropbox.client2.DropboxAPI$Entry putFileOverwrite(java.lang.String,java.io.InputStream,long,com.dropbox.client2.ProgressListener) -> putFileOverwrite
    com.dropbox.client2.DropboxAPI$UploadRequest putFileOverwriteRequest(java.lang.String,java.io.InputStream,long,com.dropbox.client2.ProgressListener) -> putFileOverwriteRequest
    com.dropbox.client2.DropboxAPI$DropboxFileInfo getThumbnail(java.lang.String,java.io.OutputStream,com.dropbox.client2.DropboxAPI$ThumbSize,com.dropbox.client2.DropboxAPI$ThumbFormat,com.dropbox.client2.ProgressListener) -> getThumbnail
    com.dropbox.client2.DropboxAPI$DropboxInputStream getThumbnailStream(java.lang.String,com.dropbox.client2.DropboxAPI$ThumbSize,com.dropbox.client2.DropboxAPI$ThumbFormat) -> getThumbnailStream
    com.dropbox.client2.DropboxAPI$Entry metadata(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> metadata
    java.util.List revisions(java.lang.String,int) -> revisions
    java.util.List search(java.lang.String,java.lang.String,int,boolean) -> search
    com.dropbox.client2.DropboxAPI$Entry move(java.lang.String,java.lang.String) -> move
    com.dropbox.client2.DropboxAPI$Entry copy(java.lang.String,java.lang.String) -> copy
    com.dropbox.client2.DropboxAPI$Entry createFolder(java.lang.String) -> createFolder
    void delete(java.lang.String) -> delete
    com.dropbox.client2.DropboxAPI$Entry restore(java.lang.String,java.lang.String) -> restore
    com.dropbox.client2.DropboxAPI$DropboxLink media(java.lang.String,boolean) -> media
    com.dropbox.client2.DropboxAPI$DropboxLink share(java.lang.String) -> share
    boolean getFromMapAsBoolean(java.util.Map,java.lang.String) -> getFromMapAsBoolean
    com.dropbox.client2.DropboxAPI$UploadRequest putFileRequest(java.lang.String,java.io.InputStream,long,boolean,java.lang.String,com.dropbox.client2.ProgressListener) -> putFileRequest
    com.dropbox.client2.DropboxAPI$Entry commitChunkedUpload(java.lang.String,java.lang.String,boolean,java.lang.String) -> commitChunkedUpload
    com.dropbox.client2.DropboxAPI$DeltaPage delta(java.lang.String) -> delta
    com.dropbox.client2.DropboxAPI$CreatedCopyRef createCopyRef(java.lang.String) -> createCopyRef
    com.dropbox.client2.DropboxAPI$Entry addFromCopyRef(java.lang.String,java.lang.String) -> addFromCopyRef
    void assertAuthenticated() -> assertAuthenticated
    long getFromMapAsLong(java.util.Map,java.lang.String) -> getFromMapAsLong
    com.dropbox.client2.DropboxAPI$Entry access$300(com.dropbox.client2.DropboxAPI,java.lang.String,java.lang.String,boolean,java.lang.String) -> access$300
com.dropbox.client2.DropboxAPI$1 -> com.dropbox.client2.DropboxAPI$1:
com.dropbox.client2.DropboxAPI$Account -> com.dropbox.client2.DropboxAPI$Account:
    long serialVersionUID -> serialVersionUID
    java.lang.String country -> country
    java.lang.String displayName -> displayName
    long quota -> quota
    long quotaNormal -> quotaNormal
    long quotaShared -> quotaShared
    long uid -> uid
    java.lang.String referralLink -> referralLink
com.dropbox.client2.DropboxAPI$BasicUploadRequest -> com.dropbox.client2.DropboxAPI$BasicUploadRequest:
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.dropbox.client2.session.Session session -> session
    void abort() -> abort
    com.dropbox.client2.DropboxAPI$Entry upload() -> upload
com.dropbox.client2.DropboxAPI$ChunkedUploadRequest -> com.dropbox.client2.DropboxAPI$ChunkedUploadRequest:
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.dropbox.client2.session.Session session -> session
    void abort() -> abort
    com.dropbox.client2.DropboxAPI$ChunkedUploadResponse upload() -> upload
com.dropbox.client2.DropboxAPI$ChunkedUploadResponse -> com.dropbox.client2.DropboxAPI$ChunkedUploadResponse:
    java.lang.String uploadId -> uploadId
    long offset -> offset
    java.lang.String getUploadId() -> getUploadId
    long getOffset() -> getOffset
com.dropbox.client2.DropboxAPI$ChunkedUploader -> com.dropbox.client2.DropboxAPI$ChunkedUploader:
    java.lang.String uploadId -> uploadId
    long offset -> offset
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    byte[] chunk -> chunk
    int bytesInChunkToUpload -> bytesInChunkToUpload
    java.io.InputStream stream -> stream
    long targetLength -> targetLength
    boolean active -> active
    com.dropbox.client2.DropboxAPI$ChunkedUploadRequest lastRequest -> lastRequest
    boolean $assertionsDisabled -> $assertionsDisabled
    com.dropbox.client2.DropboxAPI this$0 -> this$0
    long getOffset() -> getOffset
    boolean isComplete() -> isComplete
    boolean getActive() -> getActive
    void abort() -> abort
    void upload() -> upload
    void upload(com.dropbox.client2.ProgressListener) -> upload
    com.dropbox.client2.DropboxAPI$Entry finish(java.lang.String,java.lang.String) -> finish
com.dropbox.client2.DropboxAPI$CreatedCopyRef -> com.dropbox.client2.DropboxAPI$CreatedCopyRef:
    java.lang.String copyRef -> copyRef
    java.lang.String expiration -> expiration
    com.dropbox.client2.DropboxAPI$CreatedCopyRef extractFromJson(com.dropbox.client2.jsonextract.JsonThing) -> extractFromJson
com.dropbox.client2.DropboxAPI$DeltaEntry -> com.dropbox.client2.DropboxAPI$DeltaEntry:
    java.lang.String lcPath -> lcPath
    java.lang.Object metadata -> metadata
com.dropbox.client2.DropboxAPI$DeltaEntry$JsonExtractor -> com.dropbox.client2.DropboxAPI$DeltaEntry$JsonExtractor:
    com.dropbox.client2.jsonextract.JsonExtractor mdExtractor -> mdExtractor
    com.dropbox.client2.DropboxAPI$DeltaEntry extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
    com.dropbox.client2.DropboxAPI$DeltaEntry extract(com.dropbox.client2.jsonextract.JsonThing,com.dropbox.client2.jsonextract.JsonExtractor) -> extract
    java.lang.Object extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
com.dropbox.client2.DropboxAPI$DeltaPage -> com.dropbox.client2.DropboxAPI$DeltaPage:
    boolean reset -> reset
    java.lang.String cursor -> cursor
    java.util.List entries -> entries
    boolean hasMore -> hasMore
    com.dropbox.client2.DropboxAPI$DeltaPage extractFromJson(com.dropbox.client2.jsonextract.JsonThing,com.dropbox.client2.jsonextract.JsonExtractor) -> extractFromJson
com.dropbox.client2.DropboxAPI$DropboxFileInfo -> com.dropbox.client2.DropboxAPI$DropboxFileInfo:
    java.lang.String mimeType -> mimeType
    long fileSize -> fileSize
    java.lang.String charset -> charset
    com.dropbox.client2.DropboxAPI$Entry metadata -> metadata
    com.dropbox.client2.DropboxAPI$Entry parseXDropboxMetadata(org.apache.http.HttpResponse) -> parseXDropboxMetadata
    long parseFileSize(org.apache.http.HttpResponse,com.dropbox.client2.DropboxAPI$Entry) -> parseFileSize
    java.lang.String getMimeType() -> getMimeType
    long getContentLength() -> getContentLength
    long getFileSize() -> getFileSize
    java.lang.String getCharset() -> getCharset
    com.dropbox.client2.DropboxAPI$Entry getMetadata() -> getMetadata
com.dropbox.client2.DropboxAPI$DropboxInputStream -> com.dropbox.client2.DropboxAPI$DropboxInputStream:
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.dropbox.client2.DropboxAPI$DropboxFileInfo info -> info
    void close() -> close
    com.dropbox.client2.DropboxAPI$DropboxFileInfo getFileInfo() -> getFileInfo
    void copyStreamToOutput(java.io.OutputStream,com.dropbox.client2.ProgressListener) -> copyStreamToOutput
com.dropbox.client2.DropboxAPI$DropboxLink -> com.dropbox.client2.DropboxAPI$DropboxLink:
    java.lang.String url -> url
    java.util.Date expires -> expires
com.dropbox.client2.DropboxAPI$Entry -> com.dropbox.client2.DropboxAPI$Entry:
    long bytes -> bytes
    java.lang.String hash -> hash
    java.lang.String icon -> icon
    boolean isDir -> isDir
    java.lang.String modified -> modified
    java.lang.String clientMtime -> clientMtime
    java.lang.String path -> path
    java.lang.String root -> root
    java.lang.String size -> size
    java.lang.String mimeType -> mimeType
    java.lang.String rev -> rev
    boolean thumbExists -> thumbExists
    boolean isDeleted -> isDeleted
    java.util.List contents -> contents
    com.dropbox.client2.jsonextract.JsonExtractor JsonExtractor -> JsonExtractor
    java.lang.String fileName() -> fileName
    java.lang.String parentPath() -> parentPath
com.dropbox.client2.DropboxAPI$Entry$1 -> com.dropbox.client2.DropboxAPI$Entry$1:
    com.dropbox.client2.DropboxAPI$Entry extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
    java.lang.Object extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
com.dropbox.client2.DropboxAPI$RequestAndResponse -> com.dropbox.client2.DropboxAPI$RequestAndResponse:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.HttpResponse response -> response
com.dropbox.client2.DropboxAPI$ThumbFormat -> com.dropbox.client2.DropboxAPI$ThumbFormat:
    com.dropbox.client2.DropboxAPI$ThumbFormat PNG -> PNG
    com.dropbox.client2.DropboxAPI$ThumbFormat JPEG -> JPEG
    com.dropbox.client2.DropboxAPI$ThumbFormat[] $VALUES -> $VALUES
    com.dropbox.client2.DropboxAPI$ThumbFormat[] values() -> values
    com.dropbox.client2.DropboxAPI$ThumbFormat valueOf(java.lang.String) -> valueOf
com.dropbox.client2.DropboxAPI$ThumbSize -> com.dropbox.client2.DropboxAPI$ThumbSize:
    com.dropbox.client2.DropboxAPI$ThumbSize ICON_32x32 -> ICON_32x32
    com.dropbox.client2.DropboxAPI$ThumbSize ICON_64x64 -> ICON_64x64
    com.dropbox.client2.DropboxAPI$ThumbSize ICON_128x128 -> ICON_128x128
    com.dropbox.client2.DropboxAPI$ThumbSize ICON_256x256 -> ICON_256x256
    com.dropbox.client2.DropboxAPI$ThumbSize BESTFIT_320x240 -> BESTFIT_320x240
    com.dropbox.client2.DropboxAPI$ThumbSize BESTFIT_480x320 -> BESTFIT_480x320
    com.dropbox.client2.DropboxAPI$ThumbSize BESTFIT_640x480 -> BESTFIT_640x480
    com.dropbox.client2.DropboxAPI$ThumbSize BESTFIT_960x640 -> BESTFIT_960x640
    com.dropbox.client2.DropboxAPI$ThumbSize BESTFIT_1024x768 -> BESTFIT_1024x768
    java.lang.String size -> size
    com.dropbox.client2.DropboxAPI$ThumbSize[] $VALUES -> $VALUES
    com.dropbox.client2.DropboxAPI$ThumbSize[] values() -> values
    com.dropbox.client2.DropboxAPI$ThumbSize valueOf(java.lang.String) -> valueOf
    java.lang.String toAPISize() -> toAPISize
com.dropbox.client2.DropboxAPI$UploadRequest -> com.dropbox.client2.DropboxAPI$UploadRequest:
    void abort() -> abort
    com.dropbox.client2.DropboxAPI$Entry upload() -> upload
com.dropbox.client2.ProgressListener -> com.dropbox.client2.ProgressListener:
    void onProgress(long,long) -> onProgress
    long progressInterval() -> progressInterval
com.dropbox.client2.ProgressListener$Adjusted -> com.dropbox.client2.ProgressListener$Adjusted:
    com.dropbox.client2.ProgressListener relay -> relay
    long bytesOffset -> bytesOffset
    long adjustedTotal -> adjustedTotal
    void onProgress(long,long) -> onProgress
    long progressInterval() -> progressInterval
com.dropbox.client2.ProgressListener$ProgressHttpEntity -> com.dropbox.client2.ProgressListener$ProgressHttpEntity:
    com.dropbox.client2.ProgressListener listener -> listener
    long length -> length
    void writeTo(java.io.OutputStream) -> writeTo
    com.dropbox.client2.ProgressListener access$000(com.dropbox.client2.ProgressListener$ProgressHttpEntity) -> access$000
    long access$100(com.dropbox.client2.ProgressListener$ProgressHttpEntity) -> access$100
com.dropbox.client2.ProgressListener$ProgressHttpEntity$CountingOutputStream -> com.dropbox.client2.ProgressListener$ProgressHttpEntity$CountingOutputStream:
    long lastListened -> lastListened
    long intervalMs -> intervalMs
    long transferred -> transferred
    com.dropbox.client2.ProgressListener$ProgressHttpEntity this$0 -> this$0
    void write(byte[],int,int) -> write
    void write(int) -> write
com.dropbox.client2.RESTUtility -> com.dropbox.client2.RESTUtility:
    java.text.DateFormat dateFormat -> dateFormat
    java.lang.Object request(com.dropbox.client2.RESTUtility$RequestMethod,java.lang.String,java.lang.String,int,java.lang.String[],com.dropbox.client2.session.Session) -> request
    com.dropbox.client2.DropboxAPI$RequestAndResponse streamRequest(com.dropbox.client2.RESTUtility$RequestMethod,java.lang.String,java.lang.String,int,java.lang.String[],com.dropbox.client2.session.Session) -> streamRequest
    java.lang.Object parseAsJSON(org.apache.http.HttpResponse) -> parseAsJSON
    java.util.Map parseAsQueryString(org.apache.http.HttpResponse) -> parseAsQueryString
    org.apache.http.HttpResponse execute(com.dropbox.client2.session.Session,org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(com.dropbox.client2.session.Session,org.apache.http.client.methods.HttpUriRequest,int) -> execute
    boolean isRequestRepeatable(org.apache.http.HttpRequest) -> isRequestRepeatable
    java.lang.String buildURL(java.lang.String,int,java.lang.String,java.lang.String[]) -> buildURL
    java.util.Date parseDate(java.lang.String) -> parseDate
    org.apache.http.client.HttpClient updatedHttpClient(com.dropbox.client2.session.Session) -> updatedHttpClient
    void updateClientProxy(org.apache.http.client.HttpClient,com.dropbox.client2.session.Session) -> updateClientProxy
    java.lang.String urlencode(java.lang.String[]) -> urlencode
com.dropbox.client2.RESTUtility$RequestMethod -> com.dropbox.client2.RESTUtility$RequestMethod:
    com.dropbox.client2.RESTUtility$RequestMethod GET -> GET
    com.dropbox.client2.RESTUtility$RequestMethod POST -> POST
    com.dropbox.client2.RESTUtility$RequestMethod[] $VALUES -> $VALUES
    com.dropbox.client2.RESTUtility$RequestMethod[] values() -> values
    com.dropbox.client2.RESTUtility$RequestMethod valueOf(java.lang.String) -> valueOf
com.dropbox.client2.SdkVersion -> com.dropbox.client2.SdkVersion:
    java.lang.String get() -> get
    void main(java.lang.String[]) -> main
com.dropbox.client2.SecureSSLSocketFactory -> com.dropbox.client2.SecureSSLSocketFactory:
    java.lang.String[] sAllowedCipherSuites -> sAllowedCipherSuites
    javax.net.ssl.SSLSocketFactory mSSLSocketFactory -> mSSLSocketFactory
    byte[] sRootKeyStoreBytes -> sRootKeyStoreBytes
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    void setSSLParameters(javax.net.ssl.SSLSocket) -> setSSLParameters
    java.security.KeyStore loadKeyStore() -> loadKeyStore
    byte[] GetRootKeyStoreBytes() -> GetRootKeyStoreBytes
    byte[] GetRootKeyStoreBytes1() -> GetRootKeyStoreBytes1
    byte[] GetRootKeyStoreBytes2() -> GetRootKeyStoreBytes2
    byte[] GetRootKeyStoreBytes3() -> GetRootKeyStoreBytes3
com.dropbox.client2.android.AndroidAuthSession -> com.dropbox.client2.android.AndroidAuthSession:
    void startOAuth2Authentication(android.content.Context) -> startOAuth2Authentication
    void startAuthentication(android.content.Context) -> startAuthentication
    boolean authenticationSuccessful() -> authenticationSuccessful
    java.lang.String finishAuthentication() -> finishAuthentication
    void unlink() -> unlink
com.dropbox.client2.android.AuthActivity -> com.dropbox.client2.android.AuthActivity:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CONSUMER_KEY -> EXTRA_CONSUMER_KEY
    java.lang.String EXTRA_ACCESS_TOKEN -> EXTRA_ACCESS_TOKEN
    java.lang.String EXTRA_ACCESS_SECRET -> EXTRA_ACCESS_SECRET
    java.lang.String EXTRA_UID -> EXTRA_UID
    java.lang.String EXTRA_CONSUMER_SIG -> EXTRA_CONSUMER_SIG
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_CLASS -> EXTRA_CALLING_CLASS
    java.lang.String EXTRA_AUTH_STATE -> EXTRA_AUTH_STATE
    java.lang.String ACTION_AUTHENTICATE_V1 -> ACTION_AUTHENTICATE_V1
    java.lang.String ACTION_AUTHENTICATE_V2 -> ACTION_AUTHENTICATE_V2
    int AUTH_VERSION -> AUTH_VERSION
    java.lang.String AUTH_PATH_CONNECT -> AUTH_PATH_CONNECT
    java.lang.String EXTRA_INTERNAL_APP_KEY -> EXTRA_INTERNAL_APP_KEY
    java.lang.String EXTRA_INTERNAL_APP_SECRET -> EXTRA_INTERNAL_APP_SECRET
    java.lang.String EXTRA_INTERNAL_WEB_HOST -> EXTRA_INTERNAL_WEB_HOST
    java.lang.String EXTRA_INTERNAL_API_TYPE -> EXTRA_INTERNAL_API_TYPE
    java.lang.String DEFAULT_WEB_HOST -> DEFAULT_WEB_HOST
    com.dropbox.client2.android.AuthActivity$SecurityProvider sSecurityProvider -> sSecurityProvider
    java.lang.Object sSecurityProviderLock -> sSecurityProviderLock
    android.content.Intent result -> result
    java.lang.String appKey -> appKey
    java.lang.String appSecret -> appSecret
    java.lang.String webHost -> webHost
    java.lang.String apiType -> apiType
    java.lang.String authStateNonce -> authStateNonce
    java.lang.String[] DROPBOX_APP_SIGNATURES -> DROPBOX_APP_SIGNATURES
    android.content.Intent makeIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> makeIntent
    android.content.Intent makeOAuth2Intent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> makeOAuth2Intent
    boolean checkAppBeforeAuth(android.content.Context,java.lang.String,boolean) -> checkAppBeforeAuth
    void setSecurityProvider(com.dropbox.client2.android.AuthActivity$SecurityProvider) -> setSecurityProvider
    com.dropbox.client2.android.AuthActivity$SecurityProvider getSecurityProvider() -> getSecurityProvider
    java.security.SecureRandom getSecureRandom() -> getSecureRandom
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void authFinished(android.content.Intent) -> authFinished
    java.lang.String getConsumerSig() -> getConsumerSig
    boolean hasDropboxApp(android.content.Intent) -> hasDropboxApp
    void startWebAuth(java.lang.String) -> startWebAuth
    java.lang.String createStateNonce() -> createStateNonce
com.dropbox.client2.android.AuthActivity$1 -> com.dropbox.client2.android.AuthActivity$1:
    java.security.SecureRandom getSecureRandom() -> getSecureRandom
com.dropbox.client2.android.AuthActivity$2 -> com.dropbox.client2.android.AuthActivity$2:
    void onClick(android.content.DialogInterface,int) -> onClick
com.dropbox.client2.android.AuthActivity$SecurityProvider -> com.dropbox.client2.android.AuthActivity$SecurityProvider:
    java.security.SecureRandom getSecureRandom() -> getSecureRandom
com.dropbox.client2.exception.DropboxException -> com.dropbox.client2.exception.DropboxException:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.exception.DropboxFileSizeException -> com.dropbox.client2.exception.DropboxFileSizeException:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.exception.DropboxIOException -> com.dropbox.client2.exception.DropboxIOException:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.exception.DropboxLocalStorageFullException -> com.dropbox.client2.exception.DropboxLocalStorageFullException:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.exception.DropboxParseException -> com.dropbox.client2.exception.DropboxParseException:
    long serialVersionUID -> serialVersionUID
    java.lang.String stringifyBody(java.io.BufferedReader) -> stringifyBody
com.dropbox.client2.exception.DropboxPartialFileException -> com.dropbox.client2.exception.DropboxPartialFileException:
    long serialVersionUID -> serialVersionUID
    long bytesTransferred -> bytesTransferred
com.dropbox.client2.exception.DropboxProxyChangeException -> com.dropbox.client2.exception.DropboxProxyChangeException:
com.dropbox.client2.exception.DropboxSSLException -> com.dropbox.client2.exception.DropboxSSLException:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.exception.DropboxServerException -> com.dropbox.client2.exception.DropboxServerException:
    int _200_OK -> _200_OK
    int _206_PARTIAL_CONTENT -> _206_PARTIAL_CONTENT
    int _302_FOUND -> _302_FOUND
    int _304_NOT_MODIFIED -> _304_NOT_MODIFIED
    int _400_BAD_REQUEST -> _400_BAD_REQUEST
    int _401_UNAUTHORIZED -> _401_UNAUTHORIZED
    int _403_FORBIDDEN -> _403_FORBIDDEN
    int _404_NOT_FOUND -> _404_NOT_FOUND
    int _405_METHOD_NOT_ALLOWED -> _405_METHOD_NOT_ALLOWED
    int _406_NOT_ACCEPTABLE -> _406_NOT_ACCEPTABLE
    int _409_CONFLICT -> _409_CONFLICT
    int _411_LENGTH_REQUIRED -> _411_LENGTH_REQUIRED
    int _415_UNSUPPORTED_MEDIA -> _415_UNSUPPORTED_MEDIA
    int _500_INTERNAL_SERVER_ERROR -> _500_INTERNAL_SERVER_ERROR
    int _501_NOT_IMPLEMENTED -> _501_NOT_IMPLEMENTED
    int _502_BAD_GATEWAY -> _502_BAD_GATEWAY
    int _503_SERVICE_UNAVAILABLE -> _503_SERVICE_UNAVAILABLE
    int _507_INSUFFICIENT_STORAGE -> _507_INSUFFICIENT_STORAGE
    long serialVersionUID -> serialVersionUID
    com.dropbox.client2.exception.DropboxServerException$Error body -> body
    int error -> error
    java.lang.String reason -> reason
    java.lang.String server -> server
    java.lang.String location -> location
    java.util.Map parsedResponse -> parsedResponse
    boolean isDuplicateAccount() -> isDuplicateAccount
    java.lang.String toString() -> toString
    boolean isValidWithNullBody(org.apache.http.HttpResponse) -> isValidWithNullBody
    java.lang.String getHeader(org.apache.http.HttpResponse,java.lang.String) -> getHeader
com.dropbox.client2.exception.DropboxServerException$Error -> com.dropbox.client2.exception.DropboxServerException$Error:
    java.lang.String error -> error
    java.lang.String userError -> userError
    java.util.Map fields -> fields
com.dropbox.client2.exception.DropboxUnlinkedException -> com.dropbox.client2.exception.DropboxUnlinkedException:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.jsonextract.JsonBase -> com.dropbox.client2.jsonextract.JsonBase:
    java.lang.Object internal -> internal
    java.lang.String path -> path
    com.dropbox.client2.jsonextract.JsonExtractionException error(java.lang.String) -> error
com.dropbox.client2.jsonextract.JsonExtractionException -> com.dropbox.client2.jsonextract.JsonExtractionException:
    long serialVersionUID -> serialVersionUID
    java.lang.String summarizeValue(java.lang.Object) -> summarizeValue
com.dropbox.client2.jsonextract.JsonExtractor -> com.dropbox.client2.jsonextract.JsonExtractor:
    java.lang.Object extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
com.dropbox.client2.jsonextract.JsonList -> com.dropbox.client2.jsonextract.JsonList:
    java.lang.String pathConcatIndex(java.lang.String,int) -> pathConcatIndex
    com.dropbox.client2.jsonextract.JsonThing get(int) -> get
    void expectLength(int) -> expectLength
    int length() -> length
    java.util.Iterator iterator() -> iterator
    java.util.ArrayList extract(com.dropbox.client2.jsonextract.JsonExtractor) -> extract
    com.dropbox.client2.jsonextract.JsonExtractionException error(java.lang.String) -> error
    java.lang.String access$000(java.lang.String,int) -> access$000
com.dropbox.client2.jsonextract.JsonList$1 -> com.dropbox.client2.jsonextract.JsonList$1:
com.dropbox.client2.jsonextract.JsonList$Extractor -> com.dropbox.client2.jsonextract.JsonList$Extractor:
    com.dropbox.client2.jsonextract.JsonExtractor elementExtractor -> elementExtractor
    java.util.List extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
    java.lang.Object extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
com.dropbox.client2.jsonextract.JsonList$WrapperIterator -> com.dropbox.client2.jsonextract.JsonList$WrapperIterator:
    int numReturned -> numReturned
    java.lang.String path -> path
    java.util.Iterator internal -> internal
    boolean hasNext() -> hasNext
    void remove() -> remove
    com.dropbox.client2.jsonextract.JsonThing next() -> next
    java.lang.Object next() -> next
com.dropbox.client2.jsonextract.JsonMap -> com.dropbox.client2.jsonextract.JsonMap:
    boolean isIdentLike(java.lang.String) -> isIdentLike
    boolean isEnglishLetter(char) -> isEnglishLetter
    boolean isEnglishDigit(char) -> isEnglishDigit
    java.lang.String pathConcatField(java.lang.String,java.lang.String) -> pathConcatField
    com.dropbox.client2.jsonextract.JsonThing get(java.lang.String) -> get
    com.dropbox.client2.jsonextract.JsonThing getOrNull(java.lang.String) -> getOrNull
    java.util.Iterator iterator() -> iterator
    com.dropbox.client2.jsonextract.JsonExtractionException error(java.lang.String) -> error
    java.lang.String access$100(java.lang.String,java.lang.String) -> access$100
com.dropbox.client2.jsonextract.JsonMap$1 -> com.dropbox.client2.jsonextract.JsonMap$1:
com.dropbox.client2.jsonextract.JsonMap$WrappedEntry -> com.dropbox.client2.jsonextract.JsonMap$WrappedEntry:
    java.lang.String key -> key
    com.dropbox.client2.jsonextract.JsonThing value -> value
    java.lang.String getKey() -> getKey
    com.dropbox.client2.jsonextract.JsonThing getValue() -> getValue
    com.dropbox.client2.jsonextract.JsonThing setValue(com.dropbox.client2.jsonextract.JsonThing) -> setValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
com.dropbox.client2.jsonextract.JsonMap$WrapperIterator -> com.dropbox.client2.jsonextract.JsonMap$WrapperIterator:
    java.lang.String path -> path
    java.util.Iterator internal -> internal
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.dropbox.client2.jsonextract.JsonThing -> com.dropbox.client2.jsonextract.JsonThing:
    java.util.HashMap TypeNames -> TypeNames
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String typeNameForClass(java.lang.Class) -> typeNameForClass
    java.lang.String typeNameForObject(java.lang.Object) -> typeNameForObject
    boolean is(java.lang.Class) -> is
    java.lang.Object expect(java.lang.Class) -> expect
    void expectNull() -> expectNull
    boolean isNull() -> isNull
    com.dropbox.client2.jsonextract.JsonMap expectMap() -> expectMap
    boolean isMap() -> isMap
    com.dropbox.client2.jsonextract.JsonList expectList() -> expectList
    boolean isList() -> isList
    java.lang.Number expectNumber() -> expectNumber
    boolean isNumber() -> isNumber
    long expectInt64() -> expectInt64
    boolean isInt64() -> isInt64
    int expectInt32() -> expectInt32
    boolean isInt32() -> isInt32
    double expectFloat64() -> expectFloat64
    boolean isFloat64() -> isFloat64
    java.lang.String expectString() -> expectString
    java.lang.String expectStringOrNull() -> expectStringOrNull
    boolean isString() -> isString
    boolean expectBoolean() -> expectBoolean
    boolean isBoolean() -> isBoolean
    java.lang.String pathConcat(java.lang.String,java.lang.String) -> pathConcat
    com.dropbox.client2.jsonextract.JsonExtractionException unexpected() -> unexpected
    java.lang.Object optionalExtract(com.dropbox.client2.jsonextract.JsonExtractor) -> optionalExtract
    com.dropbox.client2.jsonextract.JsonExtractionException error(java.lang.String) -> error
com.dropbox.client2.jsonextract.JsonThing$OptionalExtractor -> com.dropbox.client2.jsonextract.JsonThing$OptionalExtractor:
    com.dropbox.client2.jsonextract.JsonExtractor elementExtractor -> elementExtractor
    java.lang.Object extract(com.dropbox.client2.jsonextract.JsonThing) -> extract
com.dropbox.client2.session.AbstractSession -> com.dropbox.client2.session.AbstractSession:
    java.lang.String API_SERVER -> API_SERVER
    java.lang.String CONTENT_SERVER -> CONTENT_SERVER
    java.lang.String WEB_SERVER -> WEB_SERVER
    int KEEP_ALIVE_DURATION_SECS -> KEEP_ALIVE_DURATION_SECS
    int KEEP_ALIVE_MONITOR_INTERVAL_SECS -> KEEP_ALIVE_MONITOR_INTERVAL_SECS
    int DEFAULT_TIMEOUT_MILLIS -> DEFAULT_TIMEOUT_MILLIS
    com.dropbox.client2.session.Session$AccessType accessType -> accessType
    com.dropbox.client2.session.AppKeyPair appKeyPair -> appKeyPair
    com.dropbox.client2.session.AccessTokenPair oauth1AccessToken -> oauth1AccessToken
    java.lang.String oauth2AccessToken -> oauth2AccessToken
    org.apache.http.client.HttpClient client -> client
    void setAccessTokenPair(com.dropbox.client2.session.AccessTokenPair) -> setAccessTokenPair
    void setOAuth2AccessToken(java.lang.String) -> setOAuth2AccessToken
    com.dropbox.client2.session.AppKeyPair getAppKeyPair() -> getAppKeyPair
    com.dropbox.client2.session.AccessTokenPair getAccessTokenPair() -> getAccessTokenPair
    java.lang.String getOAuth2AccessToken() -> getOAuth2AccessToken
    com.dropbox.client2.session.Session$AccessType getAccessType() -> getAccessType
    java.util.Locale getLocale() -> getLocale
    boolean isLinked() -> isLinked
    void unlink() -> unlink
    void sign(org.apache.http.HttpRequest) -> sign
    java.lang.String buildOAuth1Header(com.dropbox.client2.session.AppKeyPair,com.dropbox.client2.session.AccessTokenPair) -> buildOAuth1Header
    java.lang.String encode(java.lang.String) -> encode
    com.dropbox.client2.session.Session$ProxyInfo getProxyInfo() -> getProxyInfo
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    void setRequestTimeout(org.apache.http.client.methods.HttpUriRequest) -> setRequestTimeout
    java.lang.String getAPIServer() -> getAPIServer
    java.lang.String getContentServer() -> getContentServer
    java.lang.String getWebServer() -> getWebServer
com.dropbox.client2.session.AbstractSession$1 -> com.dropbox.client2.session.AbstractSession$1:
    com.dropbox.client2.session.AbstractSession this$0 -> this$0
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
com.dropbox.client2.session.AbstractSession$2 -> com.dropbox.client2.session.AbstractSession$2:
    com.dropbox.client2.session.AbstractSession this$0 -> this$0
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
com.dropbox.client2.session.AbstractSession$3 -> com.dropbox.client2.session.AbstractSession$3:
    com.dropbox.client2.session.AbstractSession this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.dropbox.client2.session.AbstractSession$4 -> com.dropbox.client2.session.AbstractSession$4:
    com.dropbox.client2.session.AbstractSession this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.dropbox.client2.session.AbstractSession$DBClientConnManager -> com.dropbox.client2.session.AbstractSession$DBClientConnManager:
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
com.dropbox.client2.session.AbstractSession$DBConnectionReuseStrategy -> com.dropbox.client2.session.AbstractSession$DBConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
com.dropbox.client2.session.AbstractSession$DBKeepAliveStrategy -> com.dropbox.client2.session.AbstractSession$DBKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.dropbox.client2.session.AbstractSession$GzipDecompressingEntity -> com.dropbox.client2.session.AbstractSession$GzipDecompressingEntity:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.dropbox.client2.session.AbstractSession$IdleConnectionCloserThread -> com.dropbox.client2.session.AbstractSession$IdleConnectionCloserThread:
    com.dropbox.client2.session.AbstractSession$DBClientConnManager manager -> manager
    int idleTimeoutSeconds -> idleTimeoutSeconds
    int checkIntervalMs -> checkIntervalMs
    com.dropbox.client2.session.AbstractSession$IdleConnectionCloserThread thread -> thread
    void ensureRunning(com.dropbox.client2.session.AbstractSession$DBClientConnManager,int,int) -> ensureRunning
    void run() -> run
com.dropbox.client2.session.AccessTokenPair -> com.dropbox.client2.session.AccessTokenPair:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.session.AppKeyPair -> com.dropbox.client2.session.AppKeyPair:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.session.RequestTokenPair -> com.dropbox.client2.session.RequestTokenPair:
    long serialVersionUID -> serialVersionUID
com.dropbox.client2.session.Session -> com.dropbox.client2.session.Session:
    com.dropbox.client2.session.AppKeyPair getAppKeyPair() -> getAppKeyPair
    com.dropbox.client2.session.AccessTokenPair getAccessTokenPair() -> getAccessTokenPair
    com.dropbox.client2.session.Session$AccessType getAccessType() -> getAccessType
    java.util.Locale getLocale() -> getLocale
    boolean isLinked() -> isLinked
    void unlink() -> unlink
    void sign(org.apache.http.HttpRequest) -> sign
    com.dropbox.client2.session.Session$ProxyInfo getProxyInfo() -> getProxyInfo
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    void setRequestTimeout(org.apache.http.client.methods.HttpUriRequest) -> setRequestTimeout
    java.lang.String getAPIServer() -> getAPIServer
    java.lang.String getContentServer() -> getContentServer
    java.lang.String getWebServer() -> getWebServer
com.dropbox.client2.session.Session$AccessType -> com.dropbox.client2.session.Session$AccessType:
    com.dropbox.client2.session.Session$AccessType DROPBOX -> DROPBOX
    com.dropbox.client2.session.Session$AccessType APP_FOLDER -> APP_FOLDER
    com.dropbox.client2.session.Session$AccessType AUTO -> AUTO
    java.lang.String urlPart -> urlPart
    com.dropbox.client2.session.Session$AccessType[] $VALUES -> $VALUES
    com.dropbox.client2.session.Session$AccessType[] values() -> values
    com.dropbox.client2.session.Session$AccessType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.dropbox.client2.session.Session$ProxyInfo -> com.dropbox.client2.session.Session$ProxyInfo:
    java.lang.String host -> host
    int port -> port
com.dropbox.client2.session.TokenPair -> com.dropbox.client2.session.TokenPair:
    long serialVersionUID -> serialVersionUID
    java.lang.String key -> key
    java.lang.String secret -> secret
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.dropbox.client2.session.TokenPair) -> equals
    java.lang.String toString() -> toString
com.dropbox.client2.session.WebAuthSession -> com.dropbox.client2.session.WebAuthSession:
    com.dropbox.client2.session.WebAuthSession$WebAuthInfo getAuthInfo() -> getAuthInfo
    com.dropbox.client2.session.WebAuthSession$WebAuthInfo getAuthInfo(java.lang.String) -> getAuthInfo
    java.lang.String retrieveWebAccessToken(com.dropbox.client2.session.RequestTokenPair) -> retrieveWebAccessToken
    java.util.Map setUpToken(java.lang.String) -> setUpToken
com.dropbox.client2.session.WebAuthSession$1 -> com.dropbox.client2.session.WebAuthSession$1:
com.dropbox.client2.session.WebAuthSession$WebAuthInfo -> com.dropbox.client2.session.WebAuthSession$WebAuthInfo:
    java.lang.String url -> url
    com.dropbox.client2.session.RequestTokenPair requestTokenPair -> requestTokenPair
com.dropbox.client2.session.WebOAuth2Session -> com.dropbox.client2.session.WebOAuth2Session:
    java.lang.String getAuthorizeURL() -> getAuthorizeURL
    java.lang.String getAuthorizeURL(java.lang.String,java.lang.String) -> getAuthorizeURL
    java.lang.String retrieveWebAccessToken(java.lang.String,java.lang.String) -> retrieveWebAccessToken
com.reneponette.comicbox.application.GlobalApplication -> com.reneponette.comicbox.application.GlobalApplication:
    com.reneponette.comicbox.application.GlobalApplication instance -> a
    android.os.Handler handler -> b
    com.reneponette.comicbox.application.GlobalApplication instance() -> a
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
    android.os.Handler getHandler() -> b
com.reneponette.comicbox.cache.BitmapCache -> com.reneponette.comicbox.a.a:
    com.reneponette.comicbox.cache.BitmapCache INSTANCE -> a
    android.util.LruCache mMemoryCache -> b
    com.reneponette.comicbox.cache.BitmapCache[] ENUM$VALUES -> c
    void addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String) -> a
    android.graphics.Bitmap removeBitmapFromMemCache(java.lang.String) -> b
    void addBitmapToMemoryCache(com.reneponette.comicbox.db.FileInfo,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmapFromMemCache(com.reneponette.comicbox.db.FileInfo) -> a
    android.graphics.Bitmap removeBitmapFromMemCache(com.reneponette.comicbox.db.FileInfo) -> b
    com.reneponette.comicbox.cache.BitmapCache[] values() -> values
    com.reneponette.comicbox.cache.BitmapCache valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.cache.BitmapCache$1 -> com.reneponette.comicbox.a.b:
    com.reneponette.comicbox.cache.BitmapCache this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.reneponette.comicbox.cache.DropboxComicsDownloader -> com.reneponette.comicbox.a.c:
    com.reneponette.comicbox.db.FileInfo info -> a
    com.dropbox.client2.DropboxAPI api -> b
    boolean cancelled -> c
    com.reneponette.comicbox.cache.DropboxComicsDownloader$OnLoadComicsListener listener -> d
    java.lang.Thread runningThread -> e
    void run() -> a
    void stop() -> b
com.reneponette.comicbox.cache.DropboxComicsDownloader$1 -> com.reneponette.comicbox.a.d:
    com.reneponette.comicbox.cache.DropboxComicsDownloader this$0 -> a
    void run() -> run
    com.reneponette.comicbox.cache.DropboxComicsDownloader access$0(com.reneponette.comicbox.cache.DropboxComicsDownloader$1) -> a
com.reneponette.comicbox.cache.DropboxComicsDownloader$1$1 -> com.reneponette.comicbox.a.e:
    com.reneponette.comicbox.cache.DropboxComicsDownloader$1 this$1 -> a
    void onProgress(long,long) -> onProgress
    com.reneponette.comicbox.cache.DropboxComicsDownloader$1 access$0(com.reneponette.comicbox.cache.DropboxComicsDownloader$1$1) -> a
com.reneponette.comicbox.cache.DropboxComicsDownloader$1$1$1 -> com.reneponette.comicbox.a.f:
    com.reneponette.comicbox.cache.DropboxComicsDownloader$1$1 this$2 -> a
    long val$bytes -> b
    long val$total -> c
    void run() -> run
com.reneponette.comicbox.cache.DropboxComicsDownloader$1$2 -> com.reneponette.comicbox.a.g:
    com.reneponette.comicbox.cache.DropboxComicsDownloader$1 this$1 -> a
    java.io.File val$f -> b
    void run() -> run
com.reneponette.comicbox.cache.DropboxComicsDownloader$OnLoadComicsListener -> com.reneponette.comicbox.a.h:
    void onLoadComics(java.io.File) -> a
    void onProgress(long,long) -> a
com.reneponette.comicbox.cache.DropboxThumbBitmapLoader -> com.reneponette.comicbox.a.i:
    com.reneponette.comicbox.db.FileInfo info -> a
    com.dropbox.client2.DropboxAPI api -> b
    android.widget.ImageView iv -> c
    com.reneponette.comicbox.cache.DropboxThumbBitmapLoader$OnLoadBitmapListener listener -> d
    java.util.Set requestSet -> e
    void run() -> a
    void notifyOnMainThread(android.graphics.Bitmap) -> a
    void access$0(com.reneponette.comicbox.cache.DropboxThumbBitmapLoader,android.graphics.Bitmap) -> a
    java.util.Set access$1() -> b
com.reneponette.comicbox.cache.DropboxThumbBitmapLoader$1 -> com.reneponette.comicbox.a.j:
    com.reneponette.comicbox.cache.DropboxThumbBitmapLoader this$0 -> a
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$FileMeta$FileType -> b
    void run() -> run
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$FileMeta$FileType() -> a
com.reneponette.comicbox.cache.DropboxThumbBitmapLoader$2 -> com.reneponette.comicbox.a.k:
    com.reneponette.comicbox.cache.DropboxThumbBitmapLoader this$0 -> a
    android.graphics.Bitmap val$bitmap -> b
    void run() -> run
com.reneponette.comicbox.cache.DropboxThumbBitmapLoader$OnLoadBitmapListener -> com.reneponette.comicbox.a.l:
    void onLoadBitmap(android.graphics.Bitmap,java.lang.String) -> a
com.reneponette.comicbox.cache.LocalThumbBitmapLoader -> com.reneponette.comicbox.a.m:
    com.reneponette.comicbox.db.FileInfo info -> a
    android.widget.ImageView iv -> b
    com.reneponette.comicbox.cache.LocalThumbBitmapLoader$OnLoadBitmapListener listener -> c
    boolean cacheFirst -> d
    void run() -> a
    void notifyOnMainThread(android.graphics.Bitmap) -> a
    void access$0(com.reneponette.comicbox.cache.LocalThumbBitmapLoader,android.graphics.Bitmap) -> a
com.reneponette.comicbox.cache.LocalThumbBitmapLoader$1 -> com.reneponette.comicbox.a.n:
    com.reneponette.comicbox.cache.LocalThumbBitmapLoader this$0 -> a
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$FileMeta$FileType -> b
    void run() -> run
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$FileMeta$FileType() -> a
com.reneponette.comicbox.cache.LocalThumbBitmapLoader$2 -> com.reneponette.comicbox.a.o:
    com.reneponette.comicbox.cache.LocalThumbBitmapLoader this$0 -> a
    android.graphics.Bitmap val$bitmap -> b
    void run() -> run
com.reneponette.comicbox.cache.LocalThumbBitmapLoader$OnLoadBitmapListener -> com.reneponette.comicbox.a.p:
    void onLoadBitmap(android.graphics.Bitmap,java.lang.String) -> a
com.reneponette.comicbox.cache.PageBitmapLoader -> com.reneponette.comicbox.a.q:
    com.reneponette.comicbox.model.PageInfo pi -> a
    boolean autocrop -> b
    boolean preview -> c
    android.widget.ImageView iv -> d
    com.reneponette.comicbox.cache.PageBitmapLoader$OnLoadBitmapListener listener -> e
    void run() -> a
    void notifyOnMainThread(android.graphics.Bitmap) -> a
    void access$0(com.reneponette.comicbox.cache.PageBitmapLoader,android.graphics.Bitmap) -> a
com.reneponette.comicbox.cache.PageBitmapLoader$1 -> com.reneponette.comicbox.a.r:
    com.reneponette.comicbox.cache.PageBitmapLoader this$0 -> a
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$PageInfo$PageType -> b
    void run() -> run
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$PageInfo$PageType() -> a
com.reneponette.comicbox.cache.PageBitmapLoader$2 -> com.reneponette.comicbox.a.s:
    com.reneponette.comicbox.cache.PageBitmapLoader this$0 -> a
    android.graphics.Bitmap val$bitmap -> b
    void run() -> run
com.reneponette.comicbox.cache.PageBitmapLoader$OnLoadBitmapListener -> com.reneponette.comicbox.a.t:
    void onLoadBitmap(android.graphics.Bitmap,java.lang.String) -> a
com.reneponette.comicbox.constant.C -> com.reneponette.comicbox.b.a:
    java.lang.String DROPBOX_APP_SECRET -> a
    java.lang.String COMICS_CACHE_ROOT -> b
com.reneponette.comicbox.controller.DropboxFolderPageBuilder -> com.reneponette.comicbox.c.a:
    com.dropbox.client2.DropboxAPI api -> a
    void onPrepare() -> a
    void onBuild() -> b
    void onStop() -> c
    void addPageInfo(com.reneponette.comicbox.model.PageInfo$PageBuildType,java.lang.String,boolean) -> a
    void access$0(com.reneponette.comicbox.controller.DropboxFolderPageBuilder,com.reneponette.comicbox.model.PageInfo$PageBuildType,java.lang.String,boolean) -> a
com.reneponette.comicbox.controller.DropboxFolderPageBuilder$1 -> com.reneponette.comicbox.c.b:
    com.reneponette.comicbox.controller.DropboxFolderPageBuilder this$0 -> a
    void run() -> run
com.reneponette.comicbox.controller.DropboxZipPageBuilder -> com.reneponette.comicbox.c.c:
    com.dropbox.client2.DropboxAPI api -> a
    java.io.File cacheDir -> b
    void onPrepare() -> a
    void onBuild() -> b
    void onStop() -> c
    void removeOtherCacheDir() -> m
com.reneponette.comicbox.controller.DropboxZipPageBuilder$1 -> com.reneponette.comicbox.c.d:
    com.reneponette.comicbox.controller.DropboxZipPageBuilder this$0 -> a
    void run() -> run
    void addPageWithBitmap(android.graphics.Bitmap,java.io.File) -> a
com.reneponette.comicbox.controller.LocalFolderPageBuilder -> com.reneponette.comicbox.c.e:
    void onPrepare() -> a
    void onBuild() -> b
    void onStop() -> c
com.reneponette.comicbox.controller.LocalFolderPageBuilder$1 -> com.reneponette.comicbox.c.f:
    com.reneponette.comicbox.controller.LocalFolderPageBuilder this$0 -> a
    java.io.File val$folder -> b
    void run() -> run
com.reneponette.comicbox.controller.LocalPdfPageBuilder -> com.reneponette.comicbox.c.g:
    com.artifex.mupdfdemo.MuPDFCore core -> a
    void onPrepare() -> a
    void onBuild() -> b
    void onStop() -> c
    com.artifex.mupdfdemo.MuPDFCore openFile(java.lang.String) -> a
    void addPageInfo(com.reneponette.comicbox.model.PageInfo$PageBuildType,int,boolean) -> a
    com.artifex.mupdfdemo.MuPDFCore access$0(com.reneponette.comicbox.controller.LocalPdfPageBuilder,java.lang.String) -> a
    void access$1(com.reneponette.comicbox.controller.LocalPdfPageBuilder,com.reneponette.comicbox.model.PageInfo$PageBuildType,int,boolean) -> a
com.reneponette.comicbox.controller.LocalPdfPageBuilder$1 -> com.reneponette.comicbox.c.h:
    com.reneponette.comicbox.controller.LocalPdfPageBuilder this$0 -> a
    void run() -> run
com.reneponette.comicbox.controller.LocalZipPageBuilder -> com.reneponette.comicbox.c.i:
    java.util.zip.ZipFile zipFile -> a
    void onPrepare() -> a
    void onBuild() -> b
    void onStop() -> c
    void addPageInfo(com.reneponette.comicbox.model.PageInfo$PageBuildType,java.util.zip.ZipEntry,boolean) -> a
    void access$0(com.reneponette.comicbox.controller.LocalZipPageBuilder,com.reneponette.comicbox.model.PageInfo$PageBuildType,java.util.zip.ZipEntry,boolean) -> a
com.reneponette.comicbox.controller.LocalZipPageBuilder$1 -> com.reneponette.comicbox.c.j:
    com.reneponette.comicbox.controller.LocalZipPageBuilder this$0 -> a
    void run() -> run
com.reneponette.comicbox.controller.PageBuilder -> com.reneponette.comicbox.c.k:
    com.reneponette.comicbox.db.FileInfo fileInfo -> c
    com.reneponette.comicbox.model.FileMeta fileMeta -> d
    java.util.List pageInfoList -> e
    com.reneponette.comicbox.model.FileMeta$ReadDirection readDirection -> f
    com.reneponette.comicbox.model.FileMeta$ReadDirection scanDirection -> g
    int pagesPerScan -> h
    java.lang.Thread runningThread -> i
    android.os.Handler handler -> j
    com.reneponette.comicbox.controller.PageBuilder$OnPageBuildListener listener -> k
    void setOnDataBuildListener(com.reneponette.comicbox.controller.PageBuilder$OnPageBuildListener) -> a
    void init() -> m
    com.reneponette.comicbox.controller.PageBuilder prepare(java.lang.Object) -> a
    void onPrepare() -> a
    void saveReadState(int) -> a
    java.util.List getPageInfoList() -> d
    com.reneponette.comicbox.db.FileInfo getFileInfo() -> e
    com.reneponette.comicbox.model.PageInfo getPageInfo(int) -> b
    int getPagesPerScan() -> f
    com.reneponette.comicbox.model.FileMeta$ReadDirection getReadDirection() -> g
    com.reneponette.comicbox.model.FileMeta$ReadDirection getScanDirection() -> h
    int pageSize() -> i
    void onBuild() -> b
    void build() -> j
    void addPageInfo(com.reneponette.comicbox.model.PageInfo$PageBuildType,java.io.File,boolean) -> a
    void addEndPageInfo(boolean) -> a
    void notify(com.reneponette.comicbox.model.PageInfo,boolean) -> a
    void addFinalPagesAndNotify() -> k
    void onStop() -> c
    void stop() -> l
com.reneponette.comicbox.controller.PageBuilder$1 -> com.reneponette.comicbox.c.l:
    com.reneponette.comicbox.controller.PageBuilder this$0 -> a
    boolean val$prepend -> b
    com.reneponette.comicbox.model.PageInfo val$info -> c
    void run() -> run
com.reneponette.comicbox.controller.PageBuilder$2 -> com.reneponette.comicbox.c.m:
    com.reneponette.comicbox.controller.PageBuilder this$0 -> a
    void run() -> run
com.reneponette.comicbox.controller.PageBuilder$OnPageBuildListener -> com.reneponette.comicbox.c.n:
    void onStartBuild() -> a_
    void onFailBuild(java.lang.String) -> a
    void onAddPageInfo(com.reneponette.comicbox.model.PageInfo) -> a
    void onFinishBuild() -> b
com.reneponette.comicbox.db.BaseDAO -> com.reneponette.comicbox.db.a:
    java.lang.String tableName -> a
    android.database.sqlite.SQLiteDatabase getDB() -> a
    java.lang.String getPrimaryColumnName() -> b
    java.lang.String getPrimaryCondition(com.reneponette.comicbox.db.DatabaseStorable) -> a
    void insertOrUpdate(com.reneponette.comicbox.db.DatabaseStorable) -> b
    long insertOrThrow(android.content.ContentValues) -> a
    int update(com.reneponette.comicbox.db.DatabaseStorable) -> c
com.reneponette.comicbox.db.DBOpenHelper -> com.reneponette.comicbox.db.b:
    com.reneponette.comicbox.db.DBOpenHelper instance -> a
    com.reneponette.comicbox.db.DBOpenHelper$DatabaseHelper mDBHelper -> b
    android.database.sqlite.SQLiteDatabase mDB -> c
    android.content.Context mCtx -> d
    com.reneponette.comicbox.db.DBOpenHelper getInstance() -> a
    com.reneponette.comicbox.db.DBOpenHelper open() -> b
    void close() -> c
    android.database.sqlite.SQLiteDatabase getDB() -> d
com.reneponette.comicbox.db.DBOpenHelper$DatabaseHelper -> com.reneponette.comicbox.db.c:
    com.reneponette.comicbox.db.DBOpenHelper this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.reneponette.comicbox.db.DatabaseStorable -> com.reneponette.comicbox.db.d:
    android.content.ContentValues toContentValues() -> a
    java.lang.String getPrimaryKey() -> b
com.reneponette.comicbox.db.FileInfo -> com.reneponette.comicbox.db.FileInfo:
    java.lang.String key -> c
    java.lang.String path -> d
    com.reneponette.comicbox.db.FileInfo$LocationType location -> e
    com.reneponette.comicbox.model.FileMeta meta -> f
    java.io.File file -> g
    com.dropbox.client2.DropboxAPI$Entry entry -> h
    java.lang.String focusName -> a
    int indexInParent -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int[] $SWITCH_TABLE$com$reneponette$comicbox$db$FileInfo$LocationType -> i
    java.lang.String toKey() -> n
    android.content.ContentValues toContentValues() -> a
    java.lang.String getPrimaryKey() -> b
    java.lang.String getName() -> c
    java.lang.String getPath() -> d
    void setPath(java.lang.String) -> a
    java.lang.String getKey() -> e
    void setKey(java.lang.String) -> b
    java.io.File getFile() -> f
    boolean setFile(java.io.File) -> a
    com.dropbox.client2.DropboxAPI$Entry getEntry() -> g
    boolean setEntry(com.dropbox.client2.DropboxAPI$Entry) -> a
    boolean setMetaTypeFromFilename(java.lang.String,boolean) -> a
    java.io.File getCacheDir() -> h
    java.io.File getCacheOuputFile() -> i
    com.reneponette.comicbox.db.FileInfo$LocationType getLocation() -> j
    void setLocation(com.reneponette.comicbox.db.FileInfo$LocationType) -> a
    com.reneponette.comicbox.model.FileMeta getMeta() -> k
    void setMeta(com.reneponette.comicbox.model.FileMeta) -> a
    int getChildCount() -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void access$1(com.reneponette.comicbox.db.FileInfo,java.lang.String) -> a
    void access$2(com.reneponette.comicbox.db.FileInfo,java.lang.String) -> b
    void access$3(com.reneponette.comicbox.db.FileInfo,com.reneponette.comicbox.db.FileInfo$LocationType) -> a
    void access$4(com.reneponette.comicbox.db.FileInfo,com.reneponette.comicbox.model.FileMeta) -> a
    com.reneponette.comicbox.db.FileInfo$LocationType access$5(com.reneponette.comicbox.db.FileInfo) -> a
    java.lang.String access$6(com.reneponette.comicbox.db.FileInfo) -> b
    com.reneponette.comicbox.model.FileMeta access$7(com.reneponette.comicbox.db.FileInfo) -> c
    int[] $SWITCH_TABLE$com$reneponette$comicbox$db$FileInfo$LocationType() -> m
com.reneponette.comicbox.db.FileInfo$1 -> com.reneponette.comicbox.db.e:
    com.reneponette.comicbox.db.FileInfo createFromParcel(android.os.Parcel) -> a
    com.reneponette.comicbox.db.FileInfo[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.reneponette.comicbox.db.FileInfo$LocationType -> com.reneponette.comicbox.db.f:
    com.reneponette.comicbox.db.FileInfo$LocationType UNKNOWN -> a
    com.reneponette.comicbox.db.FileInfo$LocationType LOCAL -> b
    com.reneponette.comicbox.db.FileInfo$LocationType DROPBOX -> c
    com.reneponette.comicbox.db.FileInfo$LocationType[] ENUM$VALUES -> d
    com.reneponette.comicbox.db.FileInfo$LocationType[] values() -> values
    com.reneponette.comicbox.db.FileInfo$LocationType valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.db.FileInfoDAO -> com.reneponette.comicbox.db.g:
    com.reneponette.comicbox.db.FileInfoDAO instance -> b
    com.reneponette.comicbox.db.FileInfoDAO instance() -> c
    java.lang.String getPrimaryColumnName() -> b
    com.reneponette.comicbox.db.FileInfo populateObject(android.database.Cursor) -> a
    com.reneponette.comicbox.db.FileInfo mergeObject(android.database.Cursor,com.reneponette.comicbox.db.FileInfo) -> a
    com.reneponette.comicbox.db.FileInfo newFileInfo(java.lang.Object) -> b
    com.reneponette.comicbox.db.FileInfo getFileInfo(java.lang.String) -> a
    com.reneponette.comicbox.db.FileInfo getFileInfo(java.lang.Object) -> a
com.reneponette.comicbox.manager.DropBoxManager -> com.reneponette.comicbox.d.a:
    com.reneponette.comicbox.manager.DropBoxManager INSTANCE -> a
    com.reneponette.comicbox.manager.DropBoxManager[] ENUM$VALUES -> b
    void loadAuth(com.dropbox.client2.android.AndroidAuthSession) -> a
    void storeAuth(com.dropbox.client2.android.AndroidAuthSession) -> b
    void clearKeys() -> a
    com.dropbox.client2.android.AndroidAuthSession buildSession() -> b
    com.reneponette.comicbox.manager.DropBoxManager[] values() -> values
    com.reneponette.comicbox.manager.DropBoxManager valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.manager.FavoriteManager -> com.reneponette.comicbox.d.b:
    com.reneponette.comicbox.manager.FavoriteManager INSTANCE -> a
    java.util.Set set -> b
    java.util.List list -> c
    android.content.SharedPreferences pref -> d
    com.reneponette.comicbox.manager.FavoriteManager$OnFavoriteChangedListener listener -> e
    com.reneponette.comicbox.manager.FavoriteManager[] ENUM$VALUES -> f
    void setOnFavoriteChangedListener(com.reneponette.comicbox.manager.FavoriteManager$OnFavoriteChangedListener) -> a
    void refreshList() -> b
    void save() -> c
    void add(com.reneponette.comicbox.db.FileInfo) -> a
    void remove(com.reneponette.comicbox.db.FileInfo) -> b
    boolean contains(com.reneponette.comicbox.db.FileInfo) -> c
    java.util.List getList() -> a
    com.reneponette.comicbox.manager.FavoriteManager[] values() -> values
    com.reneponette.comicbox.manager.FavoriteManager valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.manager.FavoriteManager$OnFavoriteChangedListener -> com.reneponette.comicbox.d.c:
    void onFavoriteChanged() -> a
com.reneponette.comicbox.manager.PausableThreadPoolExecutor -> com.reneponette.comicbox.d.d:
    boolean isPaused -> a
    java.util.concurrent.locks.ReentrantLock pauseLock -> b
    java.util.concurrent.locks.Condition unpaused -> c
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor instanceForDefault -> d
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor instanceForDiskIO -> e
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor instanceForNetworkIO -> f
    int[] $SWITCH_TABLE$com$reneponette$comicbox$manager$PausableThreadPoolExecutor$Type -> g
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor instance(com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type) -> a
    void beforeExecute(java.lang.Thread,java.lang.Runnable) -> beforeExecute
    int[] $SWITCH_TABLE$com$reneponette$comicbox$manager$PausableThreadPoolExecutor$Type() -> a
com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type -> com.reneponette.comicbox.d.e:
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type DEFAULT -> a
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type DISK -> b
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type NETWORK -> c
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type[] ENUM$VALUES -> d
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type[] values() -> values
    com.reneponette.comicbox.manager.PausableThreadPoolExecutor$Type valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.model.FileMeta -> com.reneponette.comicbox.model.FileMeta:
    com.reneponette.comicbox.model.FileMeta$FileType type -> a
    int pagesPerScan -> b
    int lastPagesPerScan -> c
    java.lang.String cachePath -> d
    java.lang.String coverPath -> e
    int coverColor -> f
    int lastTotalPageCount -> g
    int lastReadPageIndex -> h
    com.reneponette.comicbox.model.FileMeta$ReadDirection lastReadDirection -> i
    com.reneponette.comicbox.model.FileMeta$ReadDirection readDirection -> j
    boolean autocrop -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.reneponette.comicbox.model.FileMeta createFromJSONString(java.lang.String) -> a
    com.reneponette.comicbox.model.FileMeta createFromJSON(org.json.JSONObject) -> a
    java.lang.String toJSONString() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.reneponette.comicbox.model.FileMeta$1 -> com.reneponette.comicbox.model.a:
    com.reneponette.comicbox.model.FileMeta createFromParcel(android.os.Parcel) -> a
    com.reneponette.comicbox.model.FileMeta[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.reneponette.comicbox.model.FileMeta$FileType -> com.reneponette.comicbox.model.b:
    com.reneponette.comicbox.model.FileMeta$FileType ZIP -> a
    com.reneponette.comicbox.model.FileMeta$FileType PDF -> b
    com.reneponette.comicbox.model.FileMeta$FileType JPG -> c
    com.reneponette.comicbox.model.FileMeta$FileType DIRECTORY -> d
    com.reneponette.comicbox.model.FileMeta$FileType AD -> e
    com.reneponette.comicbox.model.FileMeta$FileType UNKNOWN -> f
    com.reneponette.comicbox.model.FileMeta$FileType[] ENUM$VALUES -> g
    com.reneponette.comicbox.model.FileMeta$FileType[] values() -> values
    com.reneponette.comicbox.model.FileMeta$FileType valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.model.FileMeta$ReadDirection -> com.reneponette.comicbox.model.c:
    com.reneponette.comicbox.model.FileMeta$ReadDirection LTR -> a
    com.reneponette.comicbox.model.FileMeta$ReadDirection RTL -> b
    com.reneponette.comicbox.model.FileMeta$ReadDirection NOTSET -> c
    com.reneponette.comicbox.model.FileMeta$ReadDirection[] ENUM$VALUES -> d
    com.reneponette.comicbox.model.FileMeta$ReadDirection[] values() -> values
    com.reneponette.comicbox.model.FileMeta$ReadDirection valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.model.PageInfo -> com.reneponette.comicbox.model.d:
    com.reneponette.comicbox.model.PageInfo$PageType type -> a
    com.reneponette.comicbox.model.PageInfo$PageBuildType buildType -> b
    java.util.zip.ZipFile zipFile -> c
    java.util.zip.ZipEntry zipEntry -> d
    java.io.File file -> e
    java.lang.String pdfName -> f
    com.artifex.mupdfdemo.MuPDFCore pdfCore -> g
    int pdfIndex -> h
    java.lang.String remotePath -> i
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$PageInfo$PageType -> j
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
    com.reneponette.comicbox.model.PageInfo$PageBuildType getBuildType() -> b
    void setBuildType(com.reneponette.comicbox.model.PageInfo$PageBuildType) -> a
    com.reneponette.comicbox.model.PageInfo$PageType getType() -> c
    java.util.zip.ZipFile getZipFile() -> d
    java.util.zip.ZipEntry getZipEntry() -> e
    java.io.File getFile() -> f
    com.artifex.mupdfdemo.MuPDFCore getPdfCore() -> g
    int getPdfIndex() -> h
    java.lang.String getRemotePath() -> i
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$PageInfo$PageType() -> j
com.reneponette.comicbox.model.PageInfo$PageBuildType -> com.reneponette.comicbox.model.e:
    com.reneponette.comicbox.model.PageInfo$PageBuildType WHOLE -> a
    com.reneponette.comicbox.model.PageInfo$PageBuildType LEFT -> b
    com.reneponette.comicbox.model.PageInfo$PageBuildType RIGHT -> c
    com.reneponette.comicbox.model.PageInfo$PageBuildType[] ENUM$VALUES -> d
    com.reneponette.comicbox.model.PageInfo$PageBuildType[] values() -> values
    com.reneponette.comicbox.model.PageInfo$PageBuildType valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.model.PageInfo$PageType -> com.reneponette.comicbox.model.f:
    com.reneponette.comicbox.model.PageInfo$PageType IMG_ZIP -> a
    com.reneponette.comicbox.model.PageInfo$PageType IMG_PDF -> b
    com.reneponette.comicbox.model.PageInfo$PageType IMG_FILE -> c
    com.reneponette.comicbox.model.PageInfo$PageType IMG_REMOTE -> d
    com.reneponette.comicbox.model.PageInfo$PageType END -> e
    com.reneponette.comicbox.model.PageInfo$PageType AD -> f
    com.reneponette.comicbox.model.PageInfo$PageType[] ENUM$VALUES -> g
    com.reneponette.comicbox.model.PageInfo$PageType[] values() -> values
    com.reneponette.comicbox.model.PageInfo$PageType valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.ui.FileSettingsActivity -> com.reneponette.comicbox.ui.FileSettingsActivity:
    com.reneponette.comicbox.db.FileInfo info -> a
    android.preference.Preference$OnPreferenceChangeListener bindPreferenceSummaryToValueListener -> b
    android.content.Intent newIntent(android.content.Context,com.reneponette.comicbox.db.FileInfo) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onBackPressed() -> onBackPressed
    void setupSimplePreferencesScreen() -> a
    boolean onIsMultiPane() -> onIsMultiPane
    boolean isXLargeTablet(android.content.Context) -> a
    boolean isSimplePreferences(android.content.Context) -> b
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    void bindPreferenceSummaryToValue(android.preference.Preference) -> a
    com.reneponette.comicbox.db.FileInfo access$0(com.reneponette.comicbox.ui.FileSettingsActivity) -> a
com.reneponette.comicbox.ui.FileSettingsActivity$1 -> com.reneponette.comicbox.ui.a:
    com.reneponette.comicbox.ui.FileSettingsActivity this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.reneponette.comicbox.ui.InterstitialActivity -> com.reneponette.comicbox.ui.InterstitialActivity:
    net.daum.adam.publisher.AdInterstitial mAdInterstitial -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.reneponette.comicbox.ui.InterstitialActivity$1 -> com.reneponette.comicbox.ui.b:
    com.reneponette.comicbox.ui.InterstitialActivity this$0 -> a
    void OnAdLoaded() -> a
com.reneponette.comicbox.ui.InterstitialActivity$2 -> com.reneponette.comicbox.ui.c:
    com.reneponette.comicbox.ui.InterstitialActivity this$0 -> a
    void OnAdFailed(net.daum.adam.publisher.impl.AdError,java.lang.String) -> a
com.reneponette.comicbox.ui.InterstitialActivity$3 -> com.reneponette.comicbox.ui.d:
    com.reneponette.comicbox.ui.InterstitialActivity this$0 -> a
    void OnAdClosed() -> a
com.reneponette.comicbox.ui.MainActivity -> com.reneponette.comicbox.ui.MainActivity:
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment mNavigationDrawerFragment -> a
    java.lang.CharSequence mTitle -> b
    java.io.File curDir -> c
    com.dropbox.client2.DropboxAPI$Entry curEntry -> d
    boolean closeFlag -> e
    android.os.Handler closeHandler -> f
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onNavigationDrawerItemSelected(int) -> a
    void onFavoriteItemSelected(com.reneponette.comicbox.db.FileInfo) -> a
    void onSectionAttached(java.lang.String) -> a
    void restoreActionBar() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onBackPressed() -> onBackPressed
    void onFileClicked(com.reneponette.comicbox.db.FileInfo) -> b
    void onEntryClicked(com.reneponette.comicbox.db.FileInfo) -> c
    void viewDropboxFile(com.reneponette.comicbox.db.FileInfo) -> d
    void downloadAndShow(com.reneponette.comicbox.db.FileInfo) -> e
    boolean isDrawerOpen() -> b
    java.io.File getStartLocalDirectory() -> c
    com.dropbox.client2.DropboxAPI$Entry getStartDropboxDirectory() -> d
    void saveLastDirectory() -> e
    void access$0(com.reneponette.comicbox.ui.MainActivity,boolean) -> a
    void access$1(com.reneponette.comicbox.ui.MainActivity,com.reneponette.comicbox.db.FileInfo) -> a
    void access$2(com.reneponette.comicbox.ui.MainActivity,com.reneponette.comicbox.db.FileInfo) -> b
com.reneponette.comicbox.ui.MainActivity$1 -> com.reneponette.comicbox.ui.e:
    com.reneponette.comicbox.ui.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.reneponette.comicbox.ui.MainActivity$2 -> com.reneponette.comicbox.ui.f:
    com.reneponette.comicbox.ui.MainActivity this$0 -> a
    com.reneponette.comicbox.db.FileInfo val$info -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.MainActivity$3 -> com.reneponette.comicbox.ui.g:
    com.reneponette.comicbox.ui.MainActivity this$0 -> a
    com.reneponette.comicbox.db.FileInfo val$info -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.MainActivity$4 -> com.reneponette.comicbox.ui.h:
    com.reneponette.comicbox.ui.MainActivity this$0 -> a
    com.reneponette.comicbox.db.FileInfo val$info -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.MainActivity$5 -> com.reneponette.comicbox.ui.i:
    com.reneponette.comicbox.ui.MainActivity this$0 -> a
    android.app.ProgressDialog val$dialog -> b
    com.reneponette.comicbox.db.FileInfo val$info -> c
    void onProgress(long,long) -> a
    void onLoadComics(java.io.File) -> a
com.reneponette.comicbox.ui.MainActivity$6 -> com.reneponette.comicbox.ui.j:
    com.reneponette.comicbox.ui.MainActivity this$0 -> a
    com.reneponette.comicbox.cache.DropboxComicsDownloader val$downloader -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.reneponette.comicbox.ui.MuPDFActivity -> com.reneponette.comicbox.ui.MuPDFActivity:
    com.artifex.mupdfdemo.MuPDFCore core -> a
    java.lang.String mFileName -> b
    com.artifex.mupdfdemo.MuPDFReaderView mDocView -> c
    android.widget.EditText mPasswordView -> d
    java.lang.String PATH -> e
    com.artifex.mupdfdemo.MuPDFCore openFile(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void requestPassword(android.os.Bundle) -> a
    void createUI(android.os.Bundle) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onSearchRequested() -> onSearchRequested
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onStart() -> onStart
    void onStop() -> onStop
    void onBackPressed() -> onBackPressed
    void performPickFor(com.artifex.mupdfdemo.FilePicker) -> performPickFor
    com.artifex.mupdfdemo.MuPDFCore access$0(com.reneponette.comicbox.ui.MuPDFActivity) -> a
    android.widget.EditText access$1(com.reneponette.comicbox.ui.MuPDFActivity) -> b
com.reneponette.comicbox.ui.MuPDFActivity$1 -> com.reneponette.comicbox.ui.k:
    com.reneponette.comicbox.ui.MuPDFActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.MuPDFActivity$2 -> com.reneponette.comicbox.ui.l:
    com.reneponette.comicbox.ui.MuPDFActivity this$0 -> a
    android.os.Bundle val$savedInstanceState -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.MuPDFActivity$3 -> com.reneponette.comicbox.ui.m:
    com.reneponette.comicbox.ui.MuPDFActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.MuPDFActivity$4 -> com.reneponette.comicbox.ui.n:
    com.reneponette.comicbox.ui.MuPDFActivity this$0 -> a
    void onMoveToChild(int) -> onMoveToChild
    void onTapMainDocArea() -> onTapMainDocArea
    void onDocMotion() -> onDocMotion
com.reneponette.comicbox.ui.MuPDFActivity$5 -> com.reneponette.comicbox.ui.o:
    com.reneponette.comicbox.ui.MuPDFActivity this$0 -> a
    void applyToView(android.view.View) -> applyToView
com.reneponette.comicbox.ui.MuPDFActivity$6 -> com.reneponette.comicbox.ui.p:
    com.reneponette.comicbox.ui.MuPDFActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.NumberPickerPreference -> com.reneponette.comicbox.ui.NumberPickerPreference:
    android.widget.NumberPicker picker -> a
    int number -> b
    void onBindDialogView(android.view.View) -> onBindDialogView
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.ReaderActivity -> com.reneponette.comicbox.ui.ReaderActivity:
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$FileMeta$FileType -> a
    int[] $SWITCH_TABLE$com$reneponette$comicbox$db$FileInfo$LocationType -> b
    android.content.Intent newIntent(android.content.Context,com.reneponette.comicbox.db.FileInfo) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$FileMeta$FileType() -> a
    int[] $SWITCH_TABLE$com$reneponette$comicbox$db$FileInfo$LocationType() -> b
com.reneponette.comicbox.ui.SettingsActivity -> com.reneponette.comicbox.ui.SettingsActivity:
    android.preference.Preference$OnPreferenceChangeListener sBindPreferenceSummaryToValueListener -> a
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setupSimplePreferencesScreen() -> a
    boolean onIsMultiPane() -> onIsMultiPane
    boolean isXLargeTablet(android.content.Context) -> a
    boolean isSimplePreferences(android.content.Context) -> b
    void onBuildHeaders(java.util.List) -> onBuildHeaders
com.reneponette.comicbox.ui.SettingsActivity$1 -> com.reneponette.comicbox.ui.q:
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.reneponette.comicbox.ui.SettingsActivity$2 -> com.reneponette.comicbox.ui.r:
    com.reneponette.comicbox.ui.SettingsActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment -> com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment:
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$NavigationDrawerCallbacks mCallbacks -> a
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> b
    android.support.v4.widget.DrawerLayout mDrawerLayout -> c
    android.widget.ListView favoriteListView -> d
    android.view.View mFragmentContainerView -> e
    int mCurrentSelectedPosition -> f
    boolean mFromSavedInstanceState -> g
    boolean mUserLearnedDrawer -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    boolean isDrawerOpen() -> a
    void setUp(int,android.support.v4.widget.DrawerLayout) -> a
    void selectItem(int) -> a
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void showGlobalContextActionBar() -> b
    android.app.ActionBar getActionBar() -> c
    android.support.v4.widget.DrawerLayout access$0(com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment) -> a
    android.view.View access$1(com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment) -> b
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$NavigationDrawerCallbacks access$2(com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment) -> c
    boolean access$3(com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment) -> d
    void access$4(com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment,boolean) -> a
    android.support.v4.app.ActionBarDrawerToggle access$5(com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment) -> e
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$1 -> com.reneponette.comicbox.ui.fragment.a:
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$1$Holder -> com.reneponette.comicbox.ui.fragment.b:
    android.widget.TextView titleTv -> a
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$1 this$1 -> b
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$2 -> com.reneponette.comicbox.ui.fragment.c:
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment this$0 -> a
    android.widget.BaseAdapter val$adapter -> b
    void onFavoriteChanged() -> a
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$3 -> com.reneponette.comicbox.ui.fragment.d:
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$4 -> com.reneponette.comicbox.ui.fragment.e:
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment this$0 -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerOpened(android.view.View) -> a
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$5 -> com.reneponette.comicbox.ui.fragment.f:
    com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment this$0 -> a
    void run() -> run
com.reneponette.comicbox.ui.fragment.NavigationDrawerFragment$NavigationDrawerCallbacks -> com.reneponette.comicbox.ui.fragment.g:
    void onNavigationDrawerItemSelected(int) -> a
    void onFavoriteItemSelected(com.reneponette.comicbox.db.FileInfo) -> a
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment -> com.reneponette.comicbox.ui.fragment.a.a:
    com.reneponette.comicbox.db.FileInfo curInfo -> a
    java.util.List infoList -> b
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter adapter -> c
    android.widget.GridView gridView -> d
    android.os.Handler handler -> e
    android.app.ProgressDialog mProgressDlg -> g
    int numOfColumn -> f
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.reneponette.comicbox.db.FileInfo getCurrentInfo() -> a
    void showWaitingDialog() -> b
    void hideWaitingDialog() -> c
    boolean onBackPressed() -> d
    void removeCover(com.reneponette.comicbox.db.FileInfo) -> a
    void setReadDirection(com.reneponette.comicbox.db.FileInfo) -> b
    com.reneponette.comicbox.db.FileInfo onGetFileInfo() -> e
    android.graphics.Bitmap getThumbnailBitmap(com.reneponette.comicbox.db.FileInfo,android.widget.ImageView) -> a
    void access$0(com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment,android.app.ProgressDialog) -> a
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$1 -> com.reneponette.comicbox.ui.fragment.a.b:
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$2 -> com.reneponette.comicbox.ui.fragment.a.c:
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$3 -> com.reneponette.comicbox.ui.fragment.a.d:
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$4 -> com.reneponette.comicbox.ui.fragment.a.e:
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment this$0 -> a
    com.reneponette.comicbox.db.FileInfo val$info -> b
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter -> com.reneponette.comicbox.ui.fragment.a.f:
    java.util.List list -> b
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment access$0(com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter) -> a
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter$1 -> com.reneponette.comicbox.ui.fragment.a.g:
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter this$1 -> a
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter$Holder val$holder -> b
    com.reneponette.comicbox.db.FileInfo val$info -> c
    void onClick(android.view.View) -> onClick
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter access$0(com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter$1) -> a
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter$1$1 -> com.reneponette.comicbox.ui.fragment.a.h:
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter$1 this$2 -> a
    com.reneponette.comicbox.db.FileInfo val$info -> b
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter$Holder -> com.reneponette.comicbox.ui.fragment.a.i:
    android.widget.ImageView itemImage -> a
    android.widget.TextView itemName -> b
    com.reneponette.comicbox.view.ProgressTextView itemProgress -> c
    android.widget.TextView itemCount -> d
    android.widget.ImageView itemMenuBtn -> e
    com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewAdapter this$1 -> f
com.reneponette.comicbox.ui.fragment.explorer.BaseExplorerFragment$FolderViewFragmentListener -> com.reneponette.comicbox.ui.fragment.a.j:
    void onFileClicked(com.reneponette.comicbox.db.FileInfo) -> b
    void onEntryClicked(com.reneponette.comicbox.db.FileInfo) -> c
com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment -> com.reneponette.comicbox.ui.fragment.a.k:
    com.dropbox.client2.DropboxAPI mApi -> g
    boolean mLoggedIn -> i
    java.lang.Thread runningThread -> j
    android.os.Handler handler -> h
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment newInstance(java.lang.String) -> a
    com.reneponette.comicbox.db.FileInfo onGetFileInfo() -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    boolean goParentDirectory() -> f
    void enumerate() -> g
    boolean onBackPressed() -> d
    android.graphics.Bitmap getThumbnailBitmap(com.reneponette.comicbox.db.FileInfo,android.widget.ImageView) -> a
    void setLoggedIn(boolean) -> a
    void access$0(com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment) -> a
    void access$1(com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment,java.lang.Thread) -> a
com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1 -> com.reneponette.comicbox.ui.fragment.a.l:
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment this$0 -> a
    void run() -> run
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment access$0(com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1) -> a
com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1$1 -> com.reneponette.comicbox.ui.fragment.a.m:
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1 this$1 -> a
    void run() -> run
com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1$2 -> com.reneponette.comicbox.ui.fragment.a.n:
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1 this$1 -> a
    com.dropbox.client2.DropboxAPI$Entry val$entry -> b
    void run() -> run
com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1$3 -> com.reneponette.comicbox.ui.fragment.a.o:
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1 this$1 -> a
    void run() -> run
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1 access$0(com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1$3) -> a
com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1$3$1 -> com.reneponette.comicbox.ui.fragment.a.p:
    com.reneponette.comicbox.ui.fragment.explorer.DropboxExplorerFragment$1$3 this$2 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.fragment.explorer.LocalExplorerFragment -> com.reneponette.comicbox.ui.fragment.a.q:
    com.reneponette.comicbox.ui.fragment.explorer.LocalExplorerFragment newInstance(com.reneponette.comicbox.db.FileInfo) -> c
    com.reneponette.comicbox.db.FileInfo onGetFileInfo() -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean goParentDirectory() -> f
    void enumerate() -> g
    boolean onBackPressed() -> d
    android.graphics.Bitmap getThumbnailBitmap(com.reneponette.comicbox.db.FileInfo,android.widget.ImageView) -> a
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment -> com.reneponette.comicbox.ui.fragment.b.a:
    com.reneponette.comicbox.view.ExtendedViewPager viewPager -> a
    android.support.v4.view.PagerAdapter pagerAdapter -> b
    android.view.View menuContainer -> c
    android.widget.TextView filename -> d
    android.widget.SeekBar seekBar -> e
    android.view.View previewBox -> f
    android.widget.TextView previewPageNumTv -> g
    android.widget.ImageView previewIv -> h
    java.util.Timer previewLoadTimer -> i
    boolean use3Fingers -> l
    int curPageIndex -> j
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onBackPressed() -> a
    void checkEndPage(int) -> a
    void onGoNextFile() -> b
    android.graphics.Bitmap getPreviewBitmap(android.widget.ImageView,int) -> a
    android.graphics.Bitmap getPageBitmap(android.widget.ImageView,int) -> b
    void onMoveToLeftPage() -> c
    void onMoveToRightPage() -> d
    void showSettingsActivity() -> n
    void initUI() -> e
    void updateSeekBarLabel() -> f
    void access$0(com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment) -> a
    boolean access$1(com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment) -> b
    void access$2(com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment,int) -> a
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.b:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2 -> com.reneponette.comicbox.ui.fragment.b.c:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment access$0(com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2) -> a
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2$1 -> com.reneponette.comicbox.ui.fragment.b.d:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2 this$1 -> a
    int val$progress -> b
    void run() -> run
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2 access$0(com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2$1) -> a
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2$1$1 -> com.reneponette.comicbox.ui.fragment.b.e:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$2$1 this$2 -> a
    android.graphics.Bitmap val$previewBitmap -> b
    void run() -> run
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$3 -> com.reneponette.comicbox.ui.fragment.b.f:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment this$0 -> a
    void onPageSelected(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$4 -> com.reneponette.comicbox.ui.fragment.b.g:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter -> com.reneponette.comicbox.ui.fragment.b.h:
    com.reneponette.comicbox.controller.PageBuilder controller -> a
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment this$0 -> b
    int getCount() -> a
    android.view.View instantiateItem(android.view.ViewGroup,int) -> b
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void setupImageView(com.reneponette.comicbox.view.TouchImageView) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment access$1(com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter) -> a
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter$1 -> com.reneponette.comicbox.ui.fragment.b.i:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter$2 -> com.reneponette.comicbox.ui.fragment.b.j:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter$3 -> com.reneponette.comicbox.ui.fragment.b.k:
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter this$1 -> a
    void onTouchRightSide() -> a
    void onTouchLeftSide() -> b
com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter$4 -> com.reneponette.comicbox.ui.fragment.b.l:
    android.view.ViewConfiguration viewConfig -> d
    int scaledTouchSlop -> e
    int startX -> a
    int startY -> b
    com.reneponette.comicbox.ui.fragment.reader.BasePagerReaderFragment$TouchImageAdapter this$1 -> c
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.reneponette.comicbox.ui.fragment.reader.BaseReaderFragment -> com.reneponette.comicbox.ui.fragment.b.m:
    com.reneponette.comicbox.controller.PageBuilder pageBuilder -> k
    boolean autocrop -> a
    android.app.ProgressDialog mProgressDlg -> b
    void onCreate(android.os.Bundle) -> onCreate
    com.reneponette.comicbox.controller.PageBuilder onCreatePageBuilder() -> g
    boolean isAutocrop() -> h
    void onMoveToLeftPage() -> c
    void moveToLeftPage() -> i
    void onMoveToRightPage() -> d
    void moveToRightPage() -> j
    boolean onBackPressed() -> a
    void showWaitingDialog() -> k
    void hideWaitingDialog() -> l
    java.io.File findNextFile() -> m
    void adjustScreenBrightness(boolean) -> a
    void access$0(com.reneponette.comicbox.ui.fragment.reader.BaseReaderFragment,android.app.ProgressDialog) -> a
com.reneponette.comicbox.ui.fragment.reader.BaseReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.n:
    com.reneponette.comicbox.ui.fragment.reader.BaseReaderFragment this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.reneponette.comicbox.ui.fragment.reader.BaseReaderFragment$2 -> com.reneponette.comicbox.ui.fragment.b.o:
    com.reneponette.comicbox.ui.fragment.reader.BaseReaderFragment this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment -> com.reneponette.comicbox.ui.fragment.b.p:
    int startIndex -> n
    com.dropbox.client2.DropboxAPI api -> l
    java.io.File cacheDir -> m
    com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment newInstance(java.lang.String,int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void removeOtherCacheDir() -> n
    com.reneponette.comicbox.controller.PageBuilder onCreatePageBuilder() -> g
    android.graphics.Bitmap getPageBitmap(android.widget.ImageView,int) -> b
    android.graphics.Bitmap getPreviewBitmap(android.widget.ImageView,int) -> a
    void loadPageBitmap(android.widget.ImageView,int,boolean) -> a
    int access$0(com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment) -> a
com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.q:
    com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment this$0 -> a
    void onStartBuild() -> a_
    void onFailBuild(java.lang.String) -> a
    void onAddPageInfo(com.reneponette.comicbox.model.PageInfo) -> a
    void onFinishBuild() -> b
com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment$2 -> com.reneponette.comicbox.ui.fragment.b.r:
    com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment this$0 -> a
    com.reneponette.comicbox.model.PageInfo val$pi -> b
    java.io.File val$cachedFile -> c
    boolean val$preview -> d
    java.lang.String val$filename -> e
    android.widget.ImageView val$iv -> f
    void run() -> run
com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment$2$1 -> com.reneponette.comicbox.ui.fragment.b.s:
    com.reneponette.comicbox.ui.fragment.reader.DropboxFolderReaderFragment$2 this$1 -> a
    java.lang.String val$filename -> b
    android.widget.ImageView val$iv -> c
    android.graphics.Bitmap val$bitmap -> d
    void run() -> run
com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment -> com.reneponette.comicbox.ui.fragment.b.t:
    java.io.File curFile -> a
    com.reneponette.comicbox.db.FileInfo fileInfo -> b
    com.artifex.mupdfdemo.MuPDFCore core -> c
    com.artifex.mupdfdemo.MuPDFReaderView mDocView -> d
    android.widget.EditText mPasswordView -> e
    android.view.View menuContainer -> f
    android.widget.SeekBar seekBar -> g
    com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment newInstance(java.lang.String) -> b
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroy() -> onDestroy
    void onStartBuild() -> a_
    void onFailBuild(java.lang.String) -> a
    void onAddPageInfo(com.reneponette.comicbox.model.PageInfo) -> a
    void onFinishBuild() -> b
    com.artifex.mupdfdemo.MuPDFCore openFile(java.lang.String) -> c
    void requestPassword(android.os.Bundle) -> a
    void performPickFor(com.artifex.mupdfdemo.FilePicker) -> performPickFor
    void updateSeekBarLabel() -> e
    boolean onBackPressed() -> a
com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.u:
    com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment$2 -> com.reneponette.comicbox.ui.fragment.b.v:
    com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment this$0 -> a
    void onTapMainDocArea() -> onTapMainDocArea
    void onMoveToChild(int) -> onMoveToChild
com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment$3 -> com.reneponette.comicbox.ui.fragment.b.w:
    com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment$4 -> com.reneponette.comicbox.ui.fragment.b.x:
    com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment this$0 -> a
    android.os.Bundle val$savedInstanceState -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment$5 -> com.reneponette.comicbox.ui.fragment.b.y:
    com.reneponette.comicbox.ui.fragment.reader.DropboxPdfReaderFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.fragment.reader.DropboxZipReaderFragment -> com.reneponette.comicbox.ui.fragment.b.z:
    com.reneponette.comicbox.ui.fragment.reader.DropboxZipReaderFragment newInstance(java.lang.String) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    void onGoNextFile() -> b
    com.reneponette.comicbox.controller.PageBuilder onCreatePageBuilder() -> g
    android.graphics.Bitmap getPageBitmap(android.widget.ImageView,int) -> b
    android.graphics.Bitmap getPreviewBitmap(android.widget.ImageView,int) -> a
com.reneponette.comicbox.ui.fragment.reader.DropboxZipReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.aa:
    com.reneponette.comicbox.ui.fragment.reader.DropboxZipReaderFragment this$0 -> a
    void onStartBuild() -> a_
    void onFailBuild(java.lang.String) -> a
    void onAddPageInfo(com.reneponette.comicbox.model.PageInfo) -> a
    void onFinishBuild() -> b
com.reneponette.comicbox.ui.fragment.reader.LocalFolderReaderFragment -> com.reneponette.comicbox.ui.fragment.b.ab:
    java.io.File curFile -> l
    int startIndex -> m
    com.reneponette.comicbox.ui.fragment.reader.LocalFolderReaderFragment newInstance(java.lang.String,int) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    com.reneponette.comicbox.controller.PageBuilder onCreatePageBuilder() -> g
    android.graphics.Bitmap getPageBitmap(android.widget.ImageView,int) -> b
    android.graphics.Bitmap getPreviewBitmap(android.widget.ImageView,int) -> a
    int access$0(com.reneponette.comicbox.ui.fragment.reader.LocalFolderReaderFragment) -> a
com.reneponette.comicbox.ui.fragment.reader.LocalFolderReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.ac:
    com.reneponette.comicbox.ui.fragment.reader.LocalFolderReaderFragment this$0 -> a
    void onStartBuild() -> a_
    void onFailBuild(java.lang.String) -> a
    void onAddPageInfo(com.reneponette.comicbox.model.PageInfo) -> a
    void onFinishBuild() -> b
com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment -> com.reneponette.comicbox.ui.fragment.b.ad:
    java.io.File curFile -> l
    com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment newInstance(java.lang.String) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    com.reneponette.comicbox.controller.PageBuilder onCreatePageBuilder() -> g
    void performPickFor(com.artifex.mupdfdemo.FilePicker) -> performPickFor
    android.graphics.Bitmap getPageBitmap(android.widget.ImageView,int) -> b
    android.graphics.Bitmap getPreviewBitmap(android.widget.ImageView,int) -> a
com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.ae:
    com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment this$0 -> a
    void onStartBuild() -> a_
    void onFailBuild(java.lang.String) -> a
    void onAddPageInfo(com.reneponette.comicbox.model.PageInfo) -> a
    void onFinishBuild() -> b
    com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment access$0(com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment$1) -> a
com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment$1$1 -> com.reneponette.comicbox.ui.fragment.b.af:
    com.reneponette.comicbox.ui.fragment.reader.LocalPdfReaderFragment$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.ui.fragment.reader.LocalZipReaderFragment -> com.reneponette.comicbox.ui.fragment.b.ag:
    java.io.File curFile -> l
    com.reneponette.comicbox.ui.fragment.reader.LocalZipReaderFragment newInstance(java.lang.String) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreate(android.os.Bundle) -> onCreate
    com.reneponette.comicbox.controller.PageBuilder onCreatePageBuilder() -> g
    android.graphics.Bitmap getPageBitmap(android.widget.ImageView,int) -> b
    android.graphics.Bitmap getPreviewBitmap(android.widget.ImageView,int) -> a
com.reneponette.comicbox.ui.fragment.reader.LocalZipReaderFragment$1 -> com.reneponette.comicbox.ui.fragment.b.ah:
    com.reneponette.comicbox.ui.fragment.reader.LocalZipReaderFragment this$0 -> a
    void onStartBuild() -> a_
    void onFailBuild(java.lang.String) -> a
    void onAddPageInfo(com.reneponette.comicbox.model.PageInfo) -> a
    void onFinishBuild() -> b
com.reneponette.comicbox.utils.DialogHelper -> com.reneponette.comicbox.e.a:
    void showReadDirectionSelectDialog(android.content.Context,com.reneponette.comicbox.model.FileMeta,android.content.DialogInterface$OnDismissListener) -> a
    void showGoNextComicsDialog(android.content.Context,android.content.DialogInterface$OnClickListener) -> a
    void showDataDownloadWarningDialog(android.content.Context,android.content.DialogInterface$OnClickListener) -> b
    void showSelectDownloadOrStreaming(android.content.Context,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener) -> a
    void showRetryDialog(android.content.Context,android.content.DialogInterface$OnClickListener) -> c
com.reneponette.comicbox.utils.DialogHelper$1 -> com.reneponette.comicbox.e.b:
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.utils.DialogHelper$2 -> com.reneponette.comicbox.e.c:
    com.reneponette.comicbox.model.FileMeta val$meta -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.reneponette.comicbox.utils.FileUtils -> com.reneponette.comicbox.e.d:
    java.io.File saveBitmapToFileCache(android.graphics.Bitmap,java.lang.String) -> a
com.reneponette.comicbox.utils.ImageUtils -> com.reneponette.comicbox.e.e:
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$PageInfo$PageBuildType -> a
    android.graphics.Bitmap getBitmap(java.io.File,com.reneponette.comicbox.model.PageInfo$PageBuildType,boolean,boolean) -> a
    android.graphics.Bitmap getBitmap(java.util.zip.ZipFile,java.util.zip.ZipEntry,com.reneponette.comicbox.model.PageInfo$PageBuildType,boolean,boolean) -> a
    android.graphics.Bitmap getBitmap(com.artifex.mupdfdemo.MuPDFCore,int,com.reneponette.comicbox.model.PageInfo$PageBuildType,boolean,boolean) -> a
    android.graphics.Bitmap getBitmap(com.dropbox.client2.DropboxAPI,java.lang.String,java.io.File,com.reneponette.comicbox.model.PageInfo$PageBuildType,boolean,boolean) -> a
    android.graphics.Bitmap getProcessedBitmap(android.graphics.Bitmap,com.reneponette.comicbox.model.PageInfo$PageBuildType,boolean) -> a
    int pagesPerScan(java.io.File) -> a
    android.graphics.Bitmap extractCoverFromJpg(java.io.File) -> b
    android.graphics.Bitmap extractCoverFromJpg(com.dropbox.client2.DropboxAPI,java.lang.String) -> a
    android.graphics.Bitmap extractCoverFromPdf(android.content.Context,java.io.File,int,int) -> a
    android.graphics.Bitmap extractCoverFromZip(java.io.File,int,int) -> a
    android.graphics.Bitmap extractCoverFromZip(java.io.InputStream,int,int) -> a
    boolean drawCover(android.graphics.Canvas,android.graphics.Bitmap,int) -> a
    android.graphics.Bitmap extractCoverFromFolder(java.io.File,int,int,boolean) -> a
    android.graphics.Bitmap extractCoverFromFolder(com.dropbox.client2.DropboxAPI,com.dropbox.client2.DropboxAPI$Entry,int,int) -> a
    android.graphics.Bitmap cutBitmapInHalf(android.graphics.Bitmap,boolean) -> a
    android.graphics.Bitmap removeMargins(android.graphics.Bitmap,int,int,int,int) -> a
    int getColorDelta(int,int) -> a
    int[] $SWITCH_TABLE$com$reneponette$comicbox$model$PageInfo$PageBuildType() -> a
com.reneponette.comicbox.utils.Logger -> com.reneponette.comicbox.e.f:
    void d(java.lang.Object,java.lang.String) -> a
    void e(java.lang.Object,java.lang.String) -> b
    void i(java.lang.Object,java.lang.String) -> c
com.reneponette.comicbox.utils.MessageUtils -> com.reneponette.comicbox.e.g:
    void toast(android.content.Context,java.lang.String) -> a
com.reneponette.comicbox.utils.MetricUtils -> com.reneponette.comicbox.e.h:
    int dpToPixel(android.content.Context,int) -> a
com.reneponette.comicbox.utils.SimpleCrypto -> com.reneponette.comicbox.e.i:
    java.lang.String charsetName -> a
    java.lang.String algorithm -> b
    int base64Mode -> c
    java.lang.String decrypt(java.lang.String,java.lang.String) -> a
com.reneponette.comicbox.utils.StringUtils -> com.reneponette.comicbox.e.j:
    java.lang.String getExtension(java.lang.String) -> a
    boolean isBlank(java.lang.String) -> b
    java.lang.String getMD5(java.lang.String) -> c
    boolean isImageFileExt(java.lang.String) -> d
    java.lang.String getParentPath(java.lang.String) -> e
com.reneponette.comicbox.utils.ZipUtils -> com.reneponette.comicbox.e.k:
    java.util.List enumerateAndSortZipEntries(java.util.zip.ZipFile,int) -> a
com.reneponette.comicbox.utils.ZipUtils$1 -> com.reneponette.comicbox.e.l:
    java.text.Collator collator -> a
    int compare(java.util.zip.ZipEntry,java.util.zip.ZipEntry) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.reneponette.comicbox.view.ExtendedViewPager -> com.reneponette.comicbox.view.ExtendedViewPager:
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
com.reneponette.comicbox.view.GridItemLayout -> com.reneponette.comicbox.view.GridItemLayout:
    void onMeasure(int,int) -> onMeasure
com.reneponette.comicbox.view.ProgressTextView -> com.reneponette.comicbox.view.ProgressTextView:
    float progress -> a
    void setProgress(float) -> setProgress
    void onDraw(android.graphics.Canvas) -> onDraw
com.reneponette.comicbox.view.TouchImageView -> com.reneponette.comicbox.view.a:
    float normalizedScale -> a
    android.graphics.Matrix matrix -> b
    android.graphics.Matrix prevMatrix -> c
    com.reneponette.comicbox.view.TouchImageView$State state -> d
    float minScale -> e
    float maxScale -> f
    float superMinScale -> g
    float superMaxScale -> h
    float[] m -> i
    android.content.Context context -> j
    com.reneponette.comicbox.view.TouchImageView$Fling fling -> k
    android.widget.ImageView$ScaleType mScaleType -> l
    boolean imageRenderedAtLeastOnce -> m
    boolean onDrawReady -> n
    com.reneponette.comicbox.view.TouchImageView$ZoomVariables delayedZoomVariables -> o
    int viewWidth -> p
    int viewHeight -> q
    int prevViewWidth -> r
    int prevViewHeight -> s
    float matchViewWidth -> t
    float matchViewHeight -> u
    float prevMatchViewWidth -> v
    float prevMatchViewHeight -> w
    android.view.ScaleGestureDetector mScaleDetector -> x
    android.view.GestureDetector mGestureDetector -> y
    android.view.GestureDetector$OnDoubleTapListener doubleTapListener -> z
    android.view.View$OnTouchListener userTouchListener -> A
    com.reneponette.comicbox.view.TouchImageView$OnTouchImageViewListener touchImageViewListener -> B
    com.reneponette.comicbox.view.TouchImageView$OnSideTouchListener mSideTouchListener -> C
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> D
    void sharedConstructing(android.content.Context) -> a
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void setOnTouchImageViewListener(com.reneponette.comicbox.view.TouchImageView$OnTouchImageViewListener) -> setOnTouchImageViewListener
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setImageResource(int) -> setImageResource
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageURI(android.net.Uri) -> setImageURI
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    boolean isZoomed() -> a
    android.graphics.RectF getZoomedRect() -> getZoomedRect
    void savePreviousImageValues() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onDraw(android.graphics.Canvas) -> onDraw
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    float getMaxZoom() -> getMaxZoom
    void setMaxZoom(float) -> setMaxZoom
    float getMinZoom() -> getMinZoom
    float getCurrentZoom() -> getCurrentZoom
    void setMinZoom(float) -> setMinZoom
    void resetZoom() -> b
    void setZoom(float) -> setZoom
    void setZoom(float,float,float) -> a
    void setZoom(float,float,float,android.widget.ImageView$ScaleType) -> a
    void setZoom(com.reneponette.comicbox.view.TouchImageView) -> setZoom
    android.graphics.PointF getScrollPosition() -> getScrollPosition
    void fixTrans() -> e
    void fixScaleTrans() -> f
    float getFixTrans(float,float,float) -> b
    float getFixDragTrans(float,float,float) -> c
    float getImageWidth() -> getImageWidth
    float getImageHeight() -> getImageHeight
    void onMeasure(int,int) -> onMeasure
    void fitImageToView() -> g
    int setViewSize(int,int,int) -> a
    void translateMatrixAfterRotate(int,float,float,float,int,int,int) -> a
    void setState(com.reneponette.comicbox.view.TouchImageView$State) -> setState
    boolean canScrollHorizontallyFroyo(int) -> a
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    void setOnSideTouchListener(com.reneponette.comicbox.view.TouchImageView$OnSideTouchListener) -> setOnSideTouchListener
    void scaleImage(double,float,float,boolean) -> a
    android.graphics.PointF transformCoordTouchToBitmap(float,float,boolean) -> a
    android.graphics.PointF transformCoordBitmapToTouch(float,float) -> a
    void compatPostOnAnimation(java.lang.Runnable) -> a
    android.content.Context access$0(com.reneponette.comicbox.view.TouchImageView) -> a
    com.reneponette.comicbox.view.TouchImageView$OnSideTouchListener access$1(com.reneponette.comicbox.view.TouchImageView) -> b
    android.view.GestureDetector$OnDoubleTapListener access$2(com.reneponette.comicbox.view.TouchImageView) -> c
    com.reneponette.comicbox.view.TouchImageView$Fling access$3(com.reneponette.comicbox.view.TouchImageView) -> d
    void access$4(com.reneponette.comicbox.view.TouchImageView,com.reneponette.comicbox.view.TouchImageView$Fling) -> a
    void access$5(com.reneponette.comicbox.view.TouchImageView,java.lang.Runnable) -> a
    com.reneponette.comicbox.view.TouchImageView$State access$6(com.reneponette.comicbox.view.TouchImageView) -> e
    float access$7(com.reneponette.comicbox.view.TouchImageView) -> f
    float access$8(com.reneponette.comicbox.view.TouchImageView) -> g
    float access$9(com.reneponette.comicbox.view.TouchImageView) -> h
    android.view.ScaleGestureDetector access$10(com.reneponette.comicbox.view.TouchImageView) -> i
    android.view.GestureDetector access$11(com.reneponette.comicbox.view.TouchImageView) -> j
    void access$12(com.reneponette.comicbox.view.TouchImageView,com.reneponette.comicbox.view.TouchImageView$State) -> a
    int access$13(com.reneponette.comicbox.view.TouchImageView) -> k
    float access$14(com.reneponette.comicbox.view.TouchImageView) -> l
    float access$15(com.reneponette.comicbox.view.TouchImageView,float,float,float) -> a
    int access$16(com.reneponette.comicbox.view.TouchImageView) -> m
    float access$17(com.reneponette.comicbox.view.TouchImageView) -> n
    android.graphics.Matrix access$18(com.reneponette.comicbox.view.TouchImageView) -> o
    void access$19(com.reneponette.comicbox.view.TouchImageView) -> p
    android.view.View$OnTouchListener access$20(com.reneponette.comicbox.view.TouchImageView) -> q
    com.reneponette.comicbox.view.TouchImageView$OnTouchImageViewListener access$21(com.reneponette.comicbox.view.TouchImageView) -> r
    void access$22(com.reneponette.comicbox.view.TouchImageView,double,float,float,boolean) -> a
    android.graphics.PointF access$23(com.reneponette.comicbox.view.TouchImageView,float,float,boolean) -> a
    android.graphics.PointF access$24(com.reneponette.comicbox.view.TouchImageView,float,float) -> a
    void access$25(com.reneponette.comicbox.view.TouchImageView) -> s
    float[] access$26(com.reneponette.comicbox.view.TouchImageView) -> t
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> c
com.reneponette.comicbox.view.TouchImageView$CompatScroller -> com.reneponette.comicbox.view.b:
    android.widget.Scroller scroller -> a
    android.widget.OverScroller overScroller -> b
    boolean isPreGingerbread -> c
    com.reneponette.comicbox.view.TouchImageView this$0 -> d
    void fling(int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> a
    boolean computeScrollOffset() -> b
    int getCurrX() -> c
    int getCurrY() -> d
com.reneponette.comicbox.view.TouchImageView$DoubleTapZoom -> com.reneponette.comicbox.view.c:
    long startTime -> b
    float startZoom -> c
    float targetZoom -> d
    float bitmapX -> e
    float bitmapY -> f
    boolean stretchImageToSuper -> g
    android.view.animation.AccelerateDecelerateInterpolator interpolator -> h
    android.graphics.PointF startTouch -> i
    android.graphics.PointF endTouch -> j
    com.reneponette.comicbox.view.TouchImageView this$0 -> a
    void run() -> run
    void translateImageToCenterTouchPosition(float) -> a
    float interpolate() -> a
    double calculateDeltaScale(float) -> b
com.reneponette.comicbox.view.TouchImageView$Fling -> com.reneponette.comicbox.view.d:
    com.reneponette.comicbox.view.TouchImageView$CompatScroller scroller -> a
    int currX -> b
    int currY -> c
    com.reneponette.comicbox.view.TouchImageView this$0 -> d
    void cancelFling() -> a
    void run() -> run
com.reneponette.comicbox.view.TouchImageView$GestureListener -> com.reneponette.comicbox.view.e:
    com.reneponette.comicbox.view.TouchImageView this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
com.reneponette.comicbox.view.TouchImageView$OnSideTouchListener -> com.reneponette.comicbox.view.f:
    void onTouchLeftSide() -> b
    void onTouchRightSide() -> a
com.reneponette.comicbox.view.TouchImageView$OnTouchImageViewListener -> com.reneponette.comicbox.view.g:
    void onMove() -> a
com.reneponette.comicbox.view.TouchImageView$PrivateOnTouchListener -> com.reneponette.comicbox.view.h:
    android.graphics.PointF last -> b
    com.reneponette.comicbox.view.TouchImageView this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.reneponette.comicbox.view.TouchImageView$ScaleListener -> com.reneponette.comicbox.view.i:
    com.reneponette.comicbox.view.TouchImageView this$0 -> a
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.reneponette.comicbox.view.TouchImageView$State -> com.reneponette.comicbox.view.j:
    com.reneponette.comicbox.view.TouchImageView$State NONE -> a
    com.reneponette.comicbox.view.TouchImageView$State DRAG -> b
    com.reneponette.comicbox.view.TouchImageView$State ZOOM -> c
    com.reneponette.comicbox.view.TouchImageView$State FLING -> d
    com.reneponette.comicbox.view.TouchImageView$State ANIMATE_ZOOM -> e
    com.reneponette.comicbox.view.TouchImageView$State[] ENUM$VALUES -> f
    com.reneponette.comicbox.view.TouchImageView$State[] values() -> values
    com.reneponette.comicbox.view.TouchImageView$State valueOf(java.lang.String) -> valueOf
com.reneponette.comicbox.view.TouchImageView$ZoomVariables -> com.reneponette.comicbox.view.k:
    float scale -> a
    float focusX -> b
    float focusY -> c
    android.widget.ImageView$ScaleType scaleType -> d
    com.reneponette.comicbox.view.TouchImageView this$0 -> e
net.daum.adam.common.a -> net.daum.adam.common.a:
    int d -> a
    net.daum.adam.common.a e -> b
    net.daum.adam.common.a a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    java.lang.String toString() -> toString
net.daum.adam.common.a.a -> net.daum.adam.common.a.a:
    boolean g -> a
    byte[] a(java.lang.String,int) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    java.lang.String b(byte[],int) -> b
    byte[] c(byte[],int) -> c
    byte[] c(byte[],int,int,int) -> b
net.daum.adam.common.a.a$a -> net.daum.adam.common.a.b:
    byte[] a -> a
    int b -> b
net.daum.adam.common.a.a$b -> net.daum.adam.common.a.c:
    int[] c -> c
    int[] d -> d
    int g -> e
    int h -> f
    int[] i -> g
    boolean a(byte[],int,int,boolean) -> a
net.daum.adam.common.a.a$c -> net.daum.adam.common.a.d:
    byte[] i -> h
    byte[] j -> i
    byte[] k -> j
    int d -> c
    int l -> k
    boolean e -> d
    boolean f -> e
    boolean g -> f
    byte[] m -> l
    boolean h -> g
    boolean a(byte[],int,int,boolean) -> a
net.daum.adam.common.a.b -> net.daum.adam.common.a.e:
    java.lang.String a -> a
    java.lang.String[] a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.util.Map c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a() -> a
    java.lang.String f(android.content.Context) -> f
net.daum.adam.common.a.c -> net.daum.adam.common.a.f:
    float a(float,android.content.Context) -> a
    int b(float,android.content.Context) -> b
    float a(android.content.Context) -> a
    float e(float,android.content.Context) -> c
    int f(float,android.content.Context) -> d
net.daum.adam.common.a.d -> net.daum.adam.common.a.g:
    net.daum.adam.common.a.d a -> a
    net.daum.adam.common.a.d b -> b
    java.lang.String c -> c
    android.graphics.drawable.BitmapDrawable d -> d
    net.daum.adam.common.a.d[] e -> e
    net.daum.adam.common.a.d[] values() -> values
    net.daum.adam.common.a.d valueOf(java.lang.String) -> valueOf
    android.graphics.drawable.Drawable a(android.content.Context) -> a
    android.graphics.Bitmap b(android.content.Context) -> b
net.daum.adam.common.a.e -> net.daum.adam.common.a.h:
    java.lang.String a(java.lang.String,java.lang.String) -> a
net.daum.adam.common.a.f -> net.daum.adam.common.a.i:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,android.content.Intent) -> a
net.daum.adam.common.a.g -> net.daum.adam.common.a.j:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.util.HashSet c(android.content.Context) -> c
net.daum.adam.common.a.h -> net.daum.adam.common.a.k:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
net.daum.adam.common.a.i -> net.daum.adam.common.a.l:
    java.lang.reflect.Method a(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.reflect.Method a(java.lang.String,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
net.daum.adam.common.a.j -> net.daum.adam.common.a.m:
    boolean a(android.view.View) -> a
net.daum.adam.common.a.k -> net.daum.adam.common.a.n:
    android.content.SharedPreferences a(android.content.Context) -> a
net.daum.adam.common.a.l -> net.daum.adam.common.a.o:
    java.lang.String a(java.lang.String[],java.lang.String) -> a
    java.lang.String e(java.lang.String) -> a
net.daum.adam.common.b -> net.daum.adam.common.b:
    java.util.ArrayList b -> a
    java.util.ArrayList c -> b
    net.daum.adam.common.b d -> c
    net.daum.adam.common.b a() -> a
    void a(java.lang.Runnable) -> a
    void b() -> b
    void b(java.lang.Runnable) -> b
net.daum.adam.common.c -> net.daum.adam.common.c:
    android.os.Handler j -> a
    java.lang.String k -> b
    java.lang.String l -> c
    int m -> d
    java.util.List n -> e
    java.lang.String o -> f
    org.apache.http.impl.client.DefaultHttpClient p -> g
    net.daum.adam.common.c$a q -> h
    org.apache.http.impl.client.DefaultHttpClient a(int) -> a
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void c(java.lang.String) -> b
    void run() -> run
    void a(org.apache.http.HttpEntity) -> a
    void b(org.apache.http.HttpEntity) -> b
    void b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
net.daum.adam.common.c$a -> net.daum.adam.common.d:
    java.net.URI a -> a
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    java.lang.String a() -> a
net.daum.adam.common.d -> net.daum.adam.common.e:
    android.content.Context d -> a
    java.util.HashMap e -> b
    java.util.HashMap f -> c
    java.util.ArrayList g -> d
    android.os.Handler h -> e
    java.lang.Object i -> f
    net.daum.adam.common.d j -> g
    net.daum.adam.common.d a(android.content.Context) -> a
    void a(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void a(android.content.BroadcastReceiver) -> a
    boolean a(android.content.Intent) -> a
    void a() -> a
    void a(net.daum.adam.common.d) -> a
net.daum.adam.common.d$1 -> net.daum.adam.common.f:
    net.daum.adam.common.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.daum.adam.common.d$a -> net.daum.adam.common.g:
    android.content.Intent a -> a
    java.util.ArrayList b -> b
net.daum.adam.common.d$b -> net.daum.adam.common.h:
    android.content.IntentFilter a -> a
    android.content.BroadcastReceiver b -> b
    boolean c -> c
    java.lang.String toString() -> toString
net.daum.adam.common.report.a -> net.daum.adam.common.report.a:
    net.daum.adam.common.report.a a -> a
    boolean b -> b
    net.daum.adam.common.report.a a() -> a
    java.lang.String b() -> b
    void a(android.content.Context,java.lang.String,net.daum.adam.common.report.c) -> a
    void a(boolean) -> a
    void a(java.lang.Throwable) -> a
    void a(java.lang.Throwable,java.lang.String) -> a
net.daum.adam.common.report.c -> net.daum.adam.common.report.b:
    boolean a -> a
    boolean a() -> a
net.daum.adam.common.report.impl.a -> net.daum.adam.common.report.impl.a:
    java.lang.String a() -> a
net.daum.adam.common.report.impl.b -> net.daum.adam.common.report.impl.b:
    void a(java.io.Closeable) -> a
net.daum.adam.common.report.impl.c -> net.daum.adam.common.report.impl.c:
    android.content.Context c -> a
    android.text.format.Time d -> b
    java.lang.String e -> c
    java.lang.String f -> d
    java.lang.String g -> e
    java.lang.String b(java.lang.Throwable) -> b
    void a(java.lang.String) -> a
    void a(boolean) -> a
    net.daum.adam.common.report.impl.e a(java.lang.Throwable) -> a
    java.lang.String c() -> a
    java.lang.String d() -> b
    java.lang.String c(java.lang.Throwable) -> c
net.daum.adam.common.report.impl.d -> net.daum.adam.common.report.impl.d:
    android.content.Context h -> a
    net.daum.adam.common.report.impl.e a(java.lang.String) -> a
    void a(net.daum.adam.common.report.impl.e,java.lang.String) -> a
    boolean a(java.io.BufferedInputStream) -> a
    net.daum.adam.common.report.impl.e a(java.io.Reader) -> a
    void a(java.lang.StringBuilder,java.lang.String,boolean) -> a
    void b(java.lang.String) -> b
net.daum.adam.common.report.impl.e -> net.daum.adam.common.report.impl.e:
    java.lang.String a(net.daum.adam.common.report.impl.k) -> a
net.daum.adam.common.report.impl.f -> net.daum.adam.common.report.impl.f:
    java.lang.String a(android.content.Context) -> a
net.daum.adam.common.report.impl.g -> net.daum.adam.common.report.impl.g:
    java.lang.String b -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.io.File) -> a
    void b(java.io.File) -> b
net.daum.adam.common.report.impl.h -> net.daum.adam.common.report.impl.h:
    long a() -> a
    long b() -> b
net.daum.adam.common.report.impl.i -> net.daum.adam.common.report.impl.i:
    net.daum.adam.common.report.impl.i a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    android.content.Context c -> c
    net.daum.adam.common.report.impl.i a() -> a
    void a(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
net.daum.adam.common.report.impl.j -> net.daum.adam.common.report.impl.j:
    java.lang.String a(java.lang.Class) -> a
net.daum.adam.common.report.impl.k -> net.daum.adam.common.report.impl.k:
    net.daum.adam.common.report.impl.k a -> a
    net.daum.adam.common.report.impl.k b -> b
    net.daum.adam.common.report.impl.k c -> c
    net.daum.adam.common.report.impl.k d -> d
    net.daum.adam.common.report.impl.k e -> e
    net.daum.adam.common.report.impl.k f -> f
    net.daum.adam.common.report.impl.k g -> g
    net.daum.adam.common.report.impl.k h -> h
    net.daum.adam.common.report.impl.k i -> i
    net.daum.adam.common.report.impl.k j -> j
    net.daum.adam.common.report.impl.k k -> k
    net.daum.adam.common.report.impl.k l -> l
    net.daum.adam.common.report.impl.k m -> m
    net.daum.adam.common.report.impl.k n -> n
    net.daum.adam.common.report.impl.k o -> o
    net.daum.adam.common.report.impl.k p -> p
    net.daum.adam.common.report.impl.k q -> q
    net.daum.adam.common.report.impl.k r -> r
    net.daum.adam.common.report.impl.k s -> s
    net.daum.adam.common.report.impl.k t -> t
    net.daum.adam.common.report.impl.k u -> u
    net.daum.adam.common.report.impl.k v -> v
    net.daum.adam.common.report.impl.k w -> w
    net.daum.adam.common.report.impl.k x -> x
    net.daum.adam.common.report.impl.k y -> y
    net.daum.adam.common.report.impl.k z -> z
    net.daum.adam.common.report.impl.k A -> A
    net.daum.adam.common.report.impl.k B -> B
    net.daum.adam.common.report.impl.k C -> C
    net.daum.adam.common.report.impl.k[] D -> D
    net.daum.adam.common.report.impl.k[] values() -> values
    net.daum.adam.common.report.impl.k valueOf(java.lang.String) -> valueOf
net.daum.adam.common.report.impl.l -> net.daum.adam.common.report.impl.l:
    java.lang.String b -> a
    net.daum.adam.common.report.impl.l c -> b
    android.content.Context d -> c
    boolean e -> d
    net.daum.adam.common.report.impl.n.NativeCrashHandler f -> e
    net.daum.adam.common.report.impl.c g -> f
    net.daum.adam.common.report.impl.d h -> g
    net.daum.adam.common.report.impl.l a() -> a
    void d(net.daum.adam.common.report.impl.e) -> d
    java.lang.String a(java.util.EnumMap) -> a
    void a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    void a(net.daum.adam.common.report.impl.e) -> a
    void b(net.daum.adam.common.report.impl.e) -> b
    net.daum.adam.common.report.impl.c e() -> d
    void c(net.daum.adam.common.report.impl.e) -> c
net.daum.adam.common.report.impl.l$1 -> net.daum.adam.common.report.impl.m:
    net.daum.adam.common.report.impl.e a -> a
    net.daum.adam.common.report.impl.l b -> b
    void run() -> run
net.daum.adam.common.report.impl.n.NativeCrashHandler -> net.daum.adam.common.report.impl.n.NativeCrashHandler:
    void a() -> a
    boolean enableNativeCrashHandler() -> enableNativeCrashHandler
net.daum.adam.common.report.impl.n.a -> net.daum.adam.common.report.impl.n.a:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean a() -> a
    void b() -> b
net.daum.adam.publisher.AdInfo -> net.daum.adam.publisher.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getGender() -> a
    java.lang.String getBirth() -> b
net.daum.adam.publisher.AdInterstitial -> net.daum.adam.publisher.b:
    long c -> a
    java.util.concurrent.atomic.AtomicBoolean d -> b
    android.app.Activity e -> c
    net.daum.adam.publisher.impl.AdParameterBuilder f -> d
    android.content.BroadcastReceiver g -> e
    net.daum.adam.publisher.AdInterstitial$InterstitialState h -> f
    java.lang.String i -> g
    java.lang.String j -> h
    net.daum.adam.publisher.AdView$OnAdLoadedListener k -> i
    net.daum.adam.publisher.AdView$OnAdFailedListener l -> j
    net.daum.adam.publisher.AdView$OnAdClosedListener m -> k
    java.lang.String n -> l
    net.daum.adam.publisher.AdInfo o -> m
    void a(java.lang.Object) -> a
    void a() -> d
    void b() -> e
    void setOnAdLoadedListener(net.daum.adam.publisher.AdView$OnAdLoadedListener) -> a
    void setOnAdFailedListener(net.daum.adam.publisher.AdView$OnAdFailedListener) -> a
    void setOnAdClosedListener(net.daum.adam.publisher.AdView$OnAdClosedListener) -> a
    boolean isReady() -> a
    void setClientId(java.lang.String) -> a
    boolean c() -> f
    void loadAd() -> b
    void a(java.lang.String) -> b
    void a(net.daum.adam.publisher.impl.AdError,java.lang.String) -> a
    void d() -> g
    void e() -> h
    android.app.Activity f() -> i
    void b(java.lang.String) -> c
    net.daum.adam.publisher.AdInfo getAdInfo() -> c
    void setAdInfo(net.daum.adam.publisher.AdInfo) -> a
    void a(net.daum.adam.publisher.AdInterstitial) -> a
    void b(net.daum.adam.publisher.AdInterstitial) -> b
    void a(net.daum.adam.publisher.AdInterstitial,net.daum.adam.publisher.impl.AdError,java.lang.String) -> a
    void c(net.daum.adam.publisher.AdInterstitial) -> c
    net.daum.adam.publisher.AdInterstitial$InterstitialState a(net.daum.adam.publisher.AdInterstitial,net.daum.adam.publisher.AdInterstitial$InterstitialState) -> a
    net.daum.adam.publisher.impl.AdParameterBuilder d(net.daum.adam.publisher.AdInterstitial) -> d
    java.lang.String e(net.daum.adam.publisher.AdInterstitial) -> e
    java.lang.String f(net.daum.adam.publisher.AdInterstitial) -> f
    java.lang.String g(net.daum.adam.publisher.AdInterstitial) -> g
    long a(long) -> a
    void h(net.daum.adam.publisher.AdInterstitial) -> h
    void a(net.daum.adam.publisher.AdInterstitial,java.lang.String) -> a
    void b(net.daum.adam.publisher.AdInterstitial,java.lang.String) -> b
    void a(net.daum.adam.publisher.AdInterstitial,java.lang.Object) -> a
net.daum.adam.publisher.AdInterstitial$1 -> net.daum.adam.publisher.c:
    net.daum.adam.publisher.AdInterstitial a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.daum.adam.publisher.AdInterstitial$2 -> net.daum.adam.publisher.d:
    java.lang.Object a -> a
    net.daum.adam.publisher.AdInterstitial b -> b
    void run() -> run
net.daum.adam.publisher.AdInterstitial$3 -> net.daum.adam.publisher.e:
    net.daum.adam.publisher.AdInterstitial a -> a
    void run() -> run
net.daum.adam.publisher.AdInterstitial$4 -> net.daum.adam.publisher.f:
    net.daum.adam.publisher.AdInterstitial a -> a
    void run() -> run
net.daum.adam.publisher.AdInterstitial$InterstitialState -> net.daum.adam.publisher.g:
    net.daum.adam.publisher.AdInterstitial$InterstitialState INIT -> a
    net.daum.adam.publisher.AdInterstitial$InterstitialState READY -> b
    net.daum.adam.publisher.AdInterstitial$InterstitialState LOADING -> c
    net.daum.adam.publisher.AdInterstitial$InterstitialState ACTIVE -> d
    net.daum.adam.publisher.AdInterstitial$InterstitialState[] a -> e
    net.daum.adam.publisher.AdInterstitial$InterstitialState[] values() -> values
    net.daum.adam.publisher.AdInterstitial$InterstitialState valueOf(java.lang.String) -> valueOf
net.daum.adam.publisher.AdView -> net.daum.adam.publisher.AdView:
    java.lang.String d -> d
    java.util.concurrent.atomic.AtomicBoolean h -> e
    net.daum.adam.publisher.impl.b.c[] a -> a
    int b -> b
    int c -> c
    android.widget.RelativeLayout i -> f
    int j -> g
    int k -> h
    net.daum.adam.publisher.AdView$ViewState l -> i
    int m -> j
    java.lang.String n -> k
    boolean o -> l
    net.daum.adam.publisher.AdView$OnAdWillLoadListener p -> m
    net.daum.adam.publisher.AdView$OnAdLoadedListener q -> n
    net.daum.adam.publisher.AdView$OnAdFailedListener r -> o
    net.daum.adam.publisher.AdView$OnAdClosedListener s -> p
    net.daum.adam.publisher.AdView$OnAdClickedListener t -> q
    java.lang.String u -> r
    java.lang.String v -> s
    android.webkit.WebSettings$RenderPriority w -> t
    net.daum.adam.publisher.impl.g x -> u
    net.daum.adam.publisher.impl.a.a y -> v
    android.view.animation.Animation z -> w
    android.view.animation.Animation A -> x
    net.daum.adam.publisher.AdView$AnimationType B -> y
    net.daum.adam.publisher.AdInfo C -> z
    void setAdUnitSize(java.lang.String) -> setAdUnitSize
    net.daum.adam.publisher.AdView$ViewState getAdViewState() -> getAdViewState
    void resetAdViewState() -> a
    java.lang.String getClientId() -> getClientId
    void setClientId(java.lang.String) -> setClientId
    void a() -> b
    void adFailed(net.daum.adam.publisher.impl.AdError,java.lang.String) -> a
    void c() -> f
    void a(net.daum.adam.publisher.impl.d) -> a
    android.view.animation.Animation getAnimationHide() -> getAnimationHide
    void setAnimationHide(android.view.animation.Animation) -> setAnimationHide
    android.view.animation.Animation getAnimationShow() -> getAnimationShow
    void setAnimationShow(android.view.animation.Animation) -> setAnimationShow
    net.daum.adam.publisher.AdView$AnimationType getAnimationType() -> getAnimationType
    void setAnimationType(net.daum.adam.publisher.AdView$AnimationType) -> setAnimationType
    void d() -> g
    boolean b(net.daum.adam.publisher.impl.d) -> b
    net.daum.adam.publisher.impl.b.c a(int) -> a
    void b(int) -> b
    boolean e() -> h
    void a(net.daum.adam.publisher.impl.b.c) -> a
    void c(net.daum.adam.publisher.impl.d) -> c
    void d(net.daum.adam.publisher.impl.d) -> d
    void b(java.lang.String) -> a
    boolean f() -> i
    boolean g() -> j
    void a(android.content.Context,android.util.AttributeSet) -> a
    int getRequestInterval() -> getRequestInterval
    void setRequestInterval(int) -> setRequestInterval
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setVisibility(int) -> setVisibility
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isInForeground() -> c
    java.lang.String getUserAgent() -> getUserAgent
    net.daum.adam.publisher.impl.b.c getActiveView() -> getActiveView
    boolean isAdExpanded() -> d
    int c(int) -> c
    void setOnAdWillLoadListener(net.daum.adam.publisher.AdView$OnAdWillLoadListener) -> setOnAdWillLoadListener
    void setOnAdLoadedListener(net.daum.adam.publisher.AdView$OnAdLoadedListener) -> setOnAdLoadedListener
    void setOnAdFailedListener(net.daum.adam.publisher.AdView$OnAdFailedListener) -> setOnAdFailedListener
    void setOnAdClosedListener(net.daum.adam.publisher.AdView$OnAdClosedListener) -> setOnAdClosedListener
    void setOnAdClickedListener(net.daum.adam.publisher.AdView$OnAdClickedListener) -> setOnAdClickedListener
    android.webkit.WebSettings$RenderPriority getWebViewRenderPriority() -> getWebViewRenderPriority
    void setWebViewRenderPriority(android.webkit.WebSettings$RenderPriority) -> setWebViewRenderPriority
    boolean getNetworkStatus() -> getNetworkStatus
    void setAdCache(boolean) -> setAdCache
    int getThreadPriority() -> getThreadPriority
    void setThreadPriority(int) -> setThreadPriority
    net.daum.adam.publisher.AdInfo getAdInfo() -> getAdInfo
    void setAdInfo(net.daum.adam.publisher.AdInfo) -> setAdInfo
    void onGlobalLayout() -> onGlobalLayout
    java.lang.String getPackageName() -> getPackageName
    boolean a(net.daum.adam.publisher.AdView,net.daum.adam.publisher.impl.d) -> a
    java.lang.String b() -> e
    net.daum.adam.publisher.AdView$ViewState a(net.daum.adam.publisher.AdView,net.daum.adam.publisher.AdView$ViewState) -> a
    void b(net.daum.adam.publisher.AdView,net.daum.adam.publisher.impl.d) -> b
    boolean a(net.daum.adam.publisher.AdView) -> a
    boolean b(net.daum.adam.publisher.AdView) -> b
    net.daum.adam.publisher.impl.g c(net.daum.adam.publisher.AdView) -> c
    void d(net.daum.adam.publisher.AdView) -> d
    net.daum.adam.publisher.AdView$ViewState e(net.daum.adam.publisher.AdView) -> e
    void c(net.daum.adam.publisher.AdView,net.daum.adam.publisher.impl.d) -> c
net.daum.adam.publisher.AdView$1 -> net.daum.adam.publisher.h:
    net.daum.adam.publisher.AdView a -> a
    void updateAd(net.daum.adam.publisher.impl.d) -> a
net.daum.adam.publisher.AdView$10 -> net.daum.adam.publisher.i:
    net.daum.adam.publisher.impl.d a -> a
    net.daum.adam.publisher.AdView b -> b
    void onResize() -> a
net.daum.adam.publisher.AdView$11 -> net.daum.adam.publisher.j:
    net.daum.adam.publisher.impl.d a -> a
    net.daum.adam.publisher.AdView b -> b
    void onExpand() -> a
net.daum.adam.publisher.AdView$12 -> net.daum.adam.publisher.k:
    net.daum.adam.publisher.AdView a -> a
    void run() -> run
net.daum.adam.publisher.AdView$2 -> net.daum.adam.publisher.l:
    net.daum.adam.publisher.AdView a -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.daum.adam.publisher.AdView$2$1 -> net.daum.adam.publisher.m:
    android.view.animation.Animation a -> a
    net.daum.adam.publisher.AdView$2 b -> b
    void run() -> run
net.daum.adam.publisher.AdView$2$2 -> net.daum.adam.publisher.n:
    net.daum.adam.publisher.AdView$2 a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
net.daum.adam.publisher.AdView$3 -> net.daum.adam.publisher.o:
    net.daum.adam.publisher.AdView a -> a
    void onReady() -> a
net.daum.adam.publisher.AdView$4 -> net.daum.adam.publisher.p:
    net.daum.adam.publisher.AdView a -> a
    void onError(java.lang.String,java.lang.String) -> a
net.daum.adam.publisher.AdView$5 -> net.daum.adam.publisher.q:
    net.daum.adam.publisher.AdView a -> a
    void onClose() -> a
net.daum.adam.publisher.AdView$6 -> net.daum.adam.publisher.r:
    net.daum.adam.publisher.AdView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.daum.adam.publisher.AdView$7 -> net.daum.adam.publisher.s:
    net.daum.adam.publisher.impl.d a -> a
    net.daum.adam.publisher.AdView b -> b
    void onOpen() -> a
net.daum.adam.publisher.AdView$8 -> net.daum.adam.publisher.t:
    net.daum.adam.publisher.impl.b.c a -> a
    net.daum.adam.publisher.impl.d b -> b
    net.daum.adam.publisher.AdView c -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> a
net.daum.adam.publisher.AdView$9 -> net.daum.adam.publisher.u:
    net.daum.adam.publisher.impl.b.c a -> a
    net.daum.adam.publisher.impl.d b -> b
    net.daum.adam.publisher.AdView c -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> a
net.daum.adam.publisher.AdView$AnimationType -> net.daum.adam.publisher.v:
    net.daum.adam.publisher.AdView$AnimationType NONE -> a
    net.daum.adam.publisher.AdView$AnimationType FLIP_HORIZONTAL -> b
    net.daum.adam.publisher.AdView$AnimationType FLIP_VERTICAL -> c
    net.daum.adam.publisher.AdView$AnimationType SLIDE -> d
    net.daum.adam.publisher.AdView$AnimationType FADE -> e
    net.daum.adam.publisher.AdView$AnimationType[] a -> f
    net.daum.adam.publisher.AdView$AnimationType[] values() -> values
    net.daum.adam.publisher.AdView$AnimationType valueOf(java.lang.String) -> valueOf
net.daum.adam.publisher.AdView$OnAdClickedListener -> net.daum.adam.publisher.w:
    void OnAdClicked() -> a
net.daum.adam.publisher.AdView$OnAdClosedListener -> net.daum.adam.publisher.x:
    void OnAdClosed() -> a
net.daum.adam.publisher.AdView$OnAdFailedListener -> net.daum.adam.publisher.y:
    void OnAdFailed(net.daum.adam.publisher.impl.AdError,java.lang.String) -> a
net.daum.adam.publisher.AdView$OnAdLoadedListener -> net.daum.adam.publisher.z:
    void OnAdLoaded() -> a
net.daum.adam.publisher.AdView$OnAdWillLoadListener -> net.daum.adam.publisher.aa:
net.daum.adam.publisher.AdView$ViewState -> net.daum.adam.publisher.ab:
    net.daum.adam.publisher.AdView$ViewState REFRESH -> a
    net.daum.adam.publisher.AdView$ViewState DEFAULT -> b
    net.daum.adam.publisher.AdView$ViewState OPENED -> c
    net.daum.adam.publisher.AdView$ViewState[] a -> d
    net.daum.adam.publisher.AdView$ViewState[] values() -> values
    net.daum.adam.publisher.AdView$ViewState valueOf(java.lang.String) -> valueOf
    boolean isOpened() -> a
net.daum.adam.publisher.impl.AdCommon -> net.daum.adam.publisher.impl.a:
    java.lang.String TRACKER_URL -> a
    boolean TRACKER_STATUS -> b
    java.lang.String PKG_INFO_PING -> c
    java.lang.String PKG_INFO_URL -> d
    java.lang.String PKG_INFO_KEY -> e
    boolean PKG_INFO_STATUS -> f
    java.util.Map map -> g
    java.lang.String AD_URL -> h
    boolean isTest -> i
    boolean isDebug -> j
    android.graphics.Bitmap closeBtnBitmap -> k
    boolean useAdCache -> l
    java.lang.String adContentId -> m
    boolean isUseAdCache() -> a
    void setUseAdCache(boolean) -> a
    java.lang.String getContentId() -> b
    void debug(java.lang.String,java.lang.String) -> a
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void warn(java.lang.String) -> a
    void info(java.lang.String) -> b
    void error(java.lang.String) -> c
    java.lang.String getAdUrl() -> c
    boolean isTestMode() -> d
    boolean isDebug() -> e
net.daum.adam.publisher.impl.AdCommon$1 -> net.daum.adam.publisher.impl.b:
    void handleMessage(android.os.Message) -> handleMessage
net.daum.adam.publisher.impl.AdError -> net.daum.adam.publisher.impl.c:
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_NOAD -> a
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_NONE -> b
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_PERMISSION_DENIED -> c
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_HTTPFAILED -> d
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_UNKNOWN_CLIENTID -> e
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_INVALID_DEVICE -> f
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_INVALIDAD -> g
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_SDKEXCEPTION -> h
    net.daum.adam.publisher.impl.AdError AD_DOWNLOAD_ERROR_FAILTODRAW -> i
    java.lang.String a -> j
    net.daum.adam.publisher.impl.AdError[] b -> k
    net.daum.adam.publisher.impl.AdError[] values() -> values
    net.daum.adam.publisher.impl.AdError valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
net.daum.adam.publisher.impl.AdException -> net.daum.adam.publisher.impl.d:
    net.daum.adam.publisher.impl.AdError b -> a
    net.daum.adam.publisher.impl.AdError getSdkError() -> a
    java.lang.String toString() -> toString
    void printStackTrace() -> printStackTrace
net.daum.adam.publisher.impl.AdInterstitialActivity -> net.daum.adam.publisher.impl.AdInterstitialActivity:
    net.daum.adam.publisher.impl.b.c a -> a
    void onCreate(android.os.Bundle) -> onCreate
    net.daum.adam.publisher.impl.b.j getAdView() -> a
    void onGlobalLayout() -> onGlobalLayout
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    android.view.View getAdView() -> b
    net.daum.adam.publisher.impl.b.c a(net.daum.adam.publisher.impl.AdInterstitialActivity) -> a
net.daum.adam.publisher.impl.AdInterstitialActivity$1 -> net.daum.adam.publisher.impl.e:
    net.daum.adam.publisher.impl.AdInterstitialActivity a -> a
    void a(boolean) -> a
net.daum.adam.publisher.impl.AdInterstitialActivity$2 -> net.daum.adam.publisher.impl.f:
    net.daum.adam.publisher.impl.AdInterstitialActivity a -> a
    void onReady() -> a
net.daum.adam.publisher.impl.AdInterstitialActivity$3 -> net.daum.adam.publisher.impl.g:
    net.daum.adam.publisher.impl.AdInterstitialActivity a -> a
    void onClose() -> a
net.daum.adam.publisher.impl.AdParameterBuilder -> net.daum.adam.publisher.impl.h:
    net.daum.adam.publisher.impl.AdParameterBuilder b -> a
    java.util.Map c -> b
    net.daum.adam.publisher.AdInfo d -> c
    android.content.Context e -> d
    void updateAndSendInstalledPackageLists(android.content.Context) -> a
    net.daum.adam.publisher.impl.AdParameterBuilder getInstance(android.content.Context) -> b
    void a(android.content.Context) -> c
    java.util.Map makeAdParams(java.lang.String) -> a
    void setAdInfo(net.daum.adam.publisher.AdInfo) -> a
net.daum.adam.publisher.impl.AdProtocolHandler -> net.daum.adam.publisher.impl.i:
    net.daum.adam.publisher.impl.d requestAd(java.lang.String,java.util.Map,java.lang.String,java.lang.String) -> a
    java.lang.StringBuilder makeGetParams(java.util.Map) -> a
    java.util.List makePostParams(java.util.Map) -> b
net.daum.adam.publisher.impl.a -> net.daum.adam.publisher.impl.j:
    android.widget.ImageView c -> a
    android.widget.RelativeLayout d -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View getAdView() -> b
    void a() -> c
    void b() -> d
    void onDestroy() -> onDestroy
net.daum.adam.publisher.impl.a$1 -> net.daum.adam.publisher.impl.k:
    net.daum.adam.publisher.impl.a a -> a
    void onClick(android.view.View) -> onClick
net.daum.adam.publisher.impl.a.a -> net.daum.adam.publisher.impl.a.a:
    net.daum.adam.publisher.AdView a -> a
    android.view.animation.Animation$AnimationListener b -> b
    void a(net.daum.adam.publisher.AdView$AnimationType) -> a
net.daum.adam.publisher.impl.a.b -> net.daum.adam.publisher.impl.a.b:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    boolean f -> f
    boolean g -> g
    android.graphics.Camera h -> h
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
net.daum.adam.publisher.impl.b -> net.daum.adam.publisher.impl.l:
    java.lang.String b -> a
    java.lang.String c -> b
    int d -> c
    net.daum.adam.publisher.impl.b$a e -> d
    net.daum.adam.publisher.impl.b$a a() -> a
    void a(net.daum.adam.publisher.impl.b$a) -> a
    int b() -> b
    org.apache.http.HttpResponse a(java.lang.String) -> a
    org.apache.http.HttpResponse a(java.lang.String,java.util.List) -> a
    java.util.List b(java.lang.String,java.util.List) -> b
    java.util.List c(java.lang.String,java.util.List) -> c
    java.util.List a(java.io.InputStream) -> a
net.daum.adam.publisher.impl.b$a -> net.daum.adam.publisher.impl.m:
    net.daum.adam.publisher.impl.b$a a -> a
    net.daum.adam.publisher.impl.b$a b -> b
    net.daum.adam.publisher.impl.b$a c -> c
    net.daum.adam.publisher.impl.b$a[] d -> d
    net.daum.adam.publisher.impl.b$a[] values() -> values
    net.daum.adam.publisher.impl.b$a valueOf(java.lang.String) -> valueOf
net.daum.adam.publisher.impl.b.a -> net.daum.adam.publisher.impl.b.a:
    java.lang.String a -> a
    java.util.Map b -> b
    void a(java.lang.String,org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.a$1 -> net.daum.adam.publisher.impl.b.b:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.a$2 -> net.daum.adam.publisher.impl.b.c:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.c -> net.daum.adam.publisher.impl.b.d:
    java.lang.String a -> a
    boolean e -> e
    void a(java.lang.String) -> a
    net.daum.adam.publisher.impl.b.d getViewController() -> getViewController
    void a(boolean) -> a
    void destroy() -> destroy
    void a(java.net.URI) -> a
    boolean a() -> a
    void setMraidMode(boolean) -> setMraidMode
    net.daum.adam.publisher.impl.b.k getViewController() -> getViewController
net.daum.adam.publisher.impl.b.d -> net.daum.adam.publisher.impl.b.e:
    java.lang.String r -> d
    net.daum.adam.publisher.impl.b.c b() -> a
    void a() -> b
    void c() -> c
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    net.daum.adam.publisher.impl.b.j a(android.content.Context) -> a
    net.daum.adam.publisher.impl.b.j d() -> d
net.daum.adam.publisher.impl.b.e -> net.daum.adam.publisher.impl.b.f:
    java.lang.String a -> a
    java.util.Map b -> b
    void b(java.lang.String,org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> b
    java.lang.String a() -> a
net.daum.adam.publisher.impl.b.e$1 -> net.daum.adam.publisher.impl.b.g:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$10 -> net.daum.adam.publisher.impl.b.h:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$11 -> net.daum.adam.publisher.impl.b.i:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$2 -> net.daum.adam.publisher.impl.b.j:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$3 -> net.daum.adam.publisher.impl.b.k:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$4 -> net.daum.adam.publisher.impl.b.l:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$5 -> net.daum.adam.publisher.impl.b.m:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$6 -> net.daum.adam.publisher.impl.b.n:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$7 -> net.daum.adam.publisher.impl.b.o:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$8 -> net.daum.adam.publisher.impl.b.p:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$9 -> net.daum.adam.publisher.impl.b.q:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.e$a -> net.daum.adam.publisher.impl.b.r:
    void a(org.json.JSONObject,net.daum.adam.publisher.impl.b.k) -> a
net.daum.adam.publisher.impl.b.f -> net.daum.adam.publisher.impl.b.s:
    java.lang.String a -> a
    java.lang.Boolean b -> b
    java.lang.Boolean c -> c
    java.lang.Boolean d -> d
    java.lang.Boolean e -> e
    java.lang.Boolean f -> f
    android.content.Context g -> g
    boolean a(android.content.Context,android.content.Intent) -> a
    boolean a(android.view.View) -> a
    boolean a(net.daum.adam.publisher.impl.b.g$a) -> a
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
net.daum.adam.publisher.impl.b.f$1 -> net.daum.adam.publisher.impl.b.t:
    int[] a -> a
net.daum.adam.publisher.impl.b.g -> net.daum.adam.publisher.impl.b.u:
net.daum.adam.publisher.impl.b.g$a -> net.daum.adam.publisher.impl.b.v:
    net.daum.adam.publisher.impl.b.g$a a -> a
    net.daum.adam.publisher.impl.b.g$a b -> b
    net.daum.adam.publisher.impl.b.g$a c -> c
    net.daum.adam.publisher.impl.b.g$a d -> d
    net.daum.adam.publisher.impl.b.g$a e -> e
    net.daum.adam.publisher.impl.b.g$a[] f -> f
    net.daum.adam.publisher.impl.b.g$a[] values() -> values
    net.daum.adam.publisher.impl.b.g$a valueOf(java.lang.String) -> valueOf
    net.daum.adam.publisher.impl.b.g$a a(java.lang.String) -> a
net.daum.adam.publisher.impl.b.g$b -> net.daum.adam.publisher.impl.b.w:
    net.daum.adam.publisher.impl.b.g$b a -> a
    net.daum.adam.publisher.impl.b.g$b b -> b
    net.daum.adam.publisher.impl.b.g$b[] c -> c
    net.daum.adam.publisher.impl.b.g$b[] values() -> values
    net.daum.adam.publisher.impl.b.g$b valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    boolean a() -> a
net.daum.adam.publisher.impl.b.g$c -> net.daum.adam.publisher.impl.b.x:
    net.daum.adam.publisher.impl.b.g$c a -> a
    net.daum.adam.publisher.impl.b.g$c b -> b
    net.daum.adam.publisher.impl.b.g$c c -> c
    net.daum.adam.publisher.impl.b.g$c d -> d
    net.daum.adam.publisher.impl.b.g$c e -> e
    net.daum.adam.publisher.impl.b.g$c[] f -> f
    net.daum.adam.publisher.impl.b.g$c[] values() -> values
    net.daum.adam.publisher.impl.b.g$c valueOf(java.lang.String) -> valueOf
    boolean b() -> a
    boolean c() -> b
    boolean e() -> c
    java.lang.String toString() -> toString
net.daum.adam.publisher.impl.b.h -> net.daum.adam.publisher.impl.b.y:
    java.lang.String a -> a
    net.daum.adam.publisher.impl.b.h b -> b
    java.util.List c -> c
    android.view.Display d -> d
    int e -> e
    net.daum.adam.publisher.impl.b.h a(android.content.Context) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void a() -> a
    void onOrientationChanged(int) -> onOrientationChanged
    int a(net.daum.adam.publisher.impl.b.h) -> a
net.daum.adam.publisher.impl.b.h$1 -> net.daum.adam.publisher.impl.b.z:
    android.view.View a -> a
    net.daum.adam.publisher.impl.b.h b -> b
    void run() -> run
net.daum.adam.publisher.impl.b.i -> net.daum.adam.publisher.impl.b.aa:
    java.lang.String f -> a
    java.lang.String g -> b
    java.lang.String h -> c
    java.lang.String i -> d
    java.lang.String j -> e
    java.lang.String k -> f
    java.lang.String l -> g
    java.lang.String m -> h
    android.widget.ImageView n -> i
    android.content.Context o -> j
    java.lang.ref.WeakReference p -> k
    android.app.AlertDialog q -> l
    android.widget.Button r -> m
    android.widget.FrameLayout s -> n
    int t -> o
    void a(int) -> a
    void handleMessage(android.os.Message) -> handleMessage
    java.lang.ref.WeakReference a(net.daum.adam.publisher.impl.b.i) -> a
    android.content.Context b(net.daum.adam.publisher.impl.b.i) -> b
    java.lang.String c(net.daum.adam.publisher.impl.b.i) -> c
    android.app.AlertDialog d(net.daum.adam.publisher.impl.b.i) -> d
    int e(net.daum.adam.publisher.impl.b.i) -> e
    void a(net.daum.adam.publisher.impl.b.i,int) -> a
net.daum.adam.publisher.impl.b.i$1 -> net.daum.adam.publisher.impl.b.ab:
    net.daum.adam.publisher.impl.b.i a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.daum.adam.publisher.impl.b.i$2 -> net.daum.adam.publisher.impl.b.ac:
    net.daum.adam.publisher.impl.b.i a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
net.daum.adam.publisher.impl.b.i$3 -> net.daum.adam.publisher.impl.b.ad:
    android.graphics.Bitmap a -> a
    net.daum.adam.publisher.impl.b.i b -> b
    void onClick(android.view.View) -> onClick
net.daum.adam.publisher.impl.b.i$4 -> net.daum.adam.publisher.impl.b.ae:
    java.lang.String a -> a
    net.daum.adam.publisher.impl.b.i b -> b
    void onClick(android.view.View) -> onClick
net.daum.adam.publisher.impl.b.j -> net.daum.adam.publisher.impl.b.af:
    java.util.regex.Pattern b -> b
    java.lang.String a -> a
    java.lang.String c -> c
    android.view.GestureDetector$OnGestureListener e -> e
    net.daum.adam.publisher.impl.b.k d -> d
    java.util.concurrent.atomic.AtomicBoolean f -> f
    android.webkit.WebChromeClient g -> g
    net.daum.adam.publisher.impl.b.j$b h -> h
    android.view.GestureDetector i -> i
    net.daum.adam.publisher.impl.b.j$i j -> j
    net.daum.adam.publisher.impl.b.j$j k -> k
    net.daum.adam.publisher.impl.b.j$k l -> l
    net.daum.adam.publisher.impl.b.j$l m -> m
    net.daum.adam.publisher.impl.b.j$m n -> n
    net.daum.adam.publisher.impl.b.j$n o -> o
    void a(android.webkit.WebView) -> a
    void a(net.daum.adam.publisher.impl.b.j) -> a
    boolean getPageLoaded() -> getPageLoaded
    void setPageLoaded(boolean) -> setPageLoaded
    void a(java.lang.String) -> a
    void a(android.content.Context,boolean) -> a
    void a(boolean) -> a
    net.daum.adam.publisher.impl.b.j$f getOnErrorListener() -> getOnErrorListener
    void setOnErrorListener(net.daum.adam.publisher.impl.b.j$f) -> setOnErrorListener
    net.daum.adam.publisher.impl.b.j$g getOnExpandListener() -> getOnExpandListener
    void setOnExpandListener(net.daum.adam.publisher.impl.b.j$g) -> setOnExpandListener
    net.daum.adam.publisher.impl.b.j$q getOnResizeListener() -> getOnResizeListener
    void setOnResizeListener(net.daum.adam.publisher.impl.b.j$q) -> setOnResizeListener
    net.daum.adam.publisher.impl.b.j$e getOnCloseListener() -> getOnCloseListener
    void setOnCloseListener(net.daum.adam.publisher.impl.b.j$e) -> setOnCloseListener
    net.daum.adam.publisher.impl.b.j$p getOnReadyListener() -> getOnReadyListener
    void setOnReadyListener(net.daum.adam.publisher.impl.b.j$p) -> setOnReadyListener
    net.daum.adam.publisher.impl.b.j$h getOnFailureListener() -> getOnFailureListener
    void setOnFailureListener(net.daum.adam.publisher.impl.b.j$h) -> setOnFailureListener
    void setOnCloseButtonStateChange(net.daum.adam.publisher.impl.b.j$d) -> setOnCloseButtonStateChange
    net.daum.adam.publisher.impl.b.j$d getOnCloseButtonStateChangeListener() -> getOnCloseButtonStateChangeListener
    net.daum.adam.publisher.impl.b.j$o getOnOpenListener() -> getOnOpenListener
    void setOnOpenListener(net.daum.adam.publisher.impl.b.j$o) -> setOnOpenListener
    void b() -> b
    void destroy() -> destroy
    net.daum.adam.publisher.impl.b.g$c getState() -> getState
    boolean b(java.lang.String) -> b
    boolean d(java.lang.String) -> d
    void loadData(java.lang.String,java.lang.String,java.lang.String) -> loadData
    void loadUrl(java.lang.String) -> loadUrl
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    java.lang.String e(java.lang.String) -> e
    void a(java.net.URI) -> a
    void setCache(boolean) -> setCache
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    int getOrientation() -> getOrientation
    android.view.Display getDefaultDisplay() -> getDefaultDisplay
    net.daum.adam.publisher.impl.b.k getViewController() -> getViewController
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    net.daum.adam.publisher.impl.b.j$i getOnGestureDownListener() -> getOnGestureDownListener
    void setOnGestureDownListener(net.daum.adam.publisher.impl.b.j$i) -> setOnGestureDownListener
    net.daum.adam.publisher.impl.b.j$j getOnGestureFlingListener() -> getOnGestureFlingListener
    void setOnGestureFlingListener(net.daum.adam.publisher.impl.b.j$j) -> setOnGestureFlingListener
    net.daum.adam.publisher.impl.b.j$k getOnGestureLongPressListener() -> getOnGestureLongPressListener
    void setOnGestureLongPressListener(net.daum.adam.publisher.impl.b.j$k) -> setOnGestureLongPressListener
    net.daum.adam.publisher.impl.b.j$l getOnGestureScrollListener() -> getOnGestureScrollListener
    void setOnGestureScrollListener(net.daum.adam.publisher.impl.b.j$l) -> setOnGestureScrollListener
    net.daum.adam.publisher.impl.b.j$m getOnGestureShowPressListener() -> getOnGestureShowPressListener
    void setOnGestureShowPressListener(net.daum.adam.publisher.impl.b.j$m) -> setOnGestureShowPressListener
    net.daum.adam.publisher.impl.b.j$n getOnGestureSingleTapUpListener() -> getOnGestureSingleTapUpListener
    void setOnGestureSingleTapUpListener(net.daum.adam.publisher.impl.b.j$n) -> setOnGestureSingleTapUpListener
    void onGlobalLayout() -> onGlobalLayout
    java.lang.String c() -> c
    void a(net.daum.adam.publisher.impl.b.j,boolean) -> a
net.daum.adam.publisher.impl.b.j$1 -> net.daum.adam.publisher.impl.b.ag:
    net.daum.adam.publisher.impl.b.j a -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
net.daum.adam.publisher.impl.b.j$2 -> net.daum.adam.publisher.impl.b.ah:
    net.daum.adam.publisher.impl.b.j a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
net.daum.adam.publisher.impl.b.j$2$1 -> net.daum.adam.publisher.impl.b.ai:
    android.webkit.JsResult a -> a
    net.daum.adam.publisher.impl.b.j$2 b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
net.daum.adam.publisher.impl.b.j$3 -> net.daum.adam.publisher.impl.b.aj:
    net.daum.adam.publisher.impl.b.j a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.daum.adam.publisher.impl.b.j$4 -> net.daum.adam.publisher.impl.b.ak:
    int[] a -> a
net.daum.adam.publisher.impl.b.j$a -> net.daum.adam.publisher.impl.b.al:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.daum.adam.publisher.impl.b.j$b -> net.daum.adam.publisher.impl.b.am:
    net.daum.adam.publisher.impl.b.j$f a -> a
    net.daum.adam.publisher.impl.b.j$g b -> b
    net.daum.adam.publisher.impl.b.j$q c -> c
    net.daum.adam.publisher.impl.b.j$e d -> d
    net.daum.adam.publisher.impl.b.j$p e -> e
    net.daum.adam.publisher.impl.b.j$h f -> f
    net.daum.adam.publisher.impl.b.j$d g -> g
    net.daum.adam.publisher.impl.b.j$o h -> h
    net.daum.adam.publisher.impl.b.j$f a(net.daum.adam.publisher.impl.b.j$b) -> a
    net.daum.adam.publisher.impl.b.j$f a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$f) -> a
    net.daum.adam.publisher.impl.b.j$g b(net.daum.adam.publisher.impl.b.j$b) -> b
    net.daum.adam.publisher.impl.b.j$g a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$g) -> a
    net.daum.adam.publisher.impl.b.j$q c(net.daum.adam.publisher.impl.b.j$b) -> c
    net.daum.adam.publisher.impl.b.j$q a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$q) -> a
    net.daum.adam.publisher.impl.b.j$e d(net.daum.adam.publisher.impl.b.j$b) -> d
    net.daum.adam.publisher.impl.b.j$e a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$e) -> a
    net.daum.adam.publisher.impl.b.j$p e(net.daum.adam.publisher.impl.b.j$b) -> e
    net.daum.adam.publisher.impl.b.j$p a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$p) -> a
    net.daum.adam.publisher.impl.b.j$h f(net.daum.adam.publisher.impl.b.j$b) -> f
    net.daum.adam.publisher.impl.b.j$h a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$h) -> a
    net.daum.adam.publisher.impl.b.j$d a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$d) -> a
    net.daum.adam.publisher.impl.b.j$d g(net.daum.adam.publisher.impl.b.j$b) -> g
    net.daum.adam.publisher.impl.b.j$o h(net.daum.adam.publisher.impl.b.j$b) -> h
    net.daum.adam.publisher.impl.b.j$o a(net.daum.adam.publisher.impl.b.j$b,net.daum.adam.publisher.impl.b.j$o) -> a
net.daum.adam.publisher.impl.b.j$c -> net.daum.adam.publisher.impl.b.an:
    java.util.concurrent.atomic.AtomicBoolean b -> a
    java.lang.Thread c -> b
    android.app.ProgressDialog d -> c
    net.daum.adam.publisher.impl.b.j e -> d
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void a() -> a
    void b() -> b
    boolean a(net.daum.adam.publisher.impl.b.j) -> a
    void a(net.daum.adam.publisher.impl.b.j$c) -> a
net.daum.adam.publisher.impl.b.j$c$1 -> net.daum.adam.publisher.impl.b.ao:
    net.daum.adam.publisher.impl.b.j a -> a
    net.daum.adam.publisher.impl.b.j$c b -> b
    void run() -> run
net.daum.adam.publisher.impl.b.j$c$1$1 -> net.daum.adam.publisher.impl.b.ap:
    net.daum.adam.publisher.impl.b.j$c$1 a -> a
    void run() -> run
net.daum.adam.publisher.impl.b.j$c$2 -> net.daum.adam.publisher.impl.b.aq:
    net.daum.adam.publisher.impl.b.j a -> a
    net.daum.adam.publisher.impl.b.j$c b -> b
    void onCancel(android.content.DialogInterface) -> onCancel
net.daum.adam.publisher.impl.b.j$d -> net.daum.adam.publisher.impl.b.ar:
    void a(boolean) -> a
net.daum.adam.publisher.impl.b.j$e -> net.daum.adam.publisher.impl.b.as:
    void onClose() -> a
net.daum.adam.publisher.impl.b.j$f -> net.daum.adam.publisher.impl.b.at:
    void onError(java.lang.String,java.lang.String) -> a
net.daum.adam.publisher.impl.b.j$g -> net.daum.adam.publisher.impl.b.au:
    void onExpand() -> a
net.daum.adam.publisher.impl.b.j$h -> net.daum.adam.publisher.impl.b.av:
net.daum.adam.publisher.impl.b.j$i -> net.daum.adam.publisher.impl.b.aw:
    boolean a(android.view.MotionEvent) -> a
net.daum.adam.publisher.impl.b.j$j -> net.daum.adam.publisher.impl.b.ax:
    boolean a(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
net.daum.adam.publisher.impl.b.j$k -> net.daum.adam.publisher.impl.b.ay:
    void a(android.view.MotionEvent) -> a
net.daum.adam.publisher.impl.b.j$l -> net.daum.adam.publisher.impl.b.az:
    boolean a(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
net.daum.adam.publisher.impl.b.j$m -> net.daum.adam.publisher.impl.b.ba:
    void a(android.view.MotionEvent) -> a
net.daum.adam.publisher.impl.b.j$n -> net.daum.adam.publisher.impl.b.bb:
    boolean onSingleTapUp(android.view.MotionEvent) -> a
net.daum.adam.publisher.impl.b.j$o -> net.daum.adam.publisher.impl.b.bc:
    void onOpen() -> a
net.daum.adam.publisher.impl.b.j$p -> net.daum.adam.publisher.impl.b.bd:
    void onReady() -> a
net.daum.adam.publisher.impl.b.j$q -> net.daum.adam.publisher.impl.b.be:
    void onResize() -> a
net.daum.adam.publisher.impl.b.k -> net.daum.adam.publisher.impl.b.bf:
    java.lang.String o -> a
    java.lang.ref.WeakReference r -> d
    int s -> e
    net.daum.adam.publisher.impl.b.f t -> f
    boolean p -> b
    java.lang.String q -> c
    net.daum.adam.publisher.impl.b.g$c u -> g
    net.daum.adam.publisher.impl.b.g$b v -> h
    org.json.JSONObject w -> i
    org.json.JSONObject x -> j
    int y -> k
    int z -> l
    android.widget.FrameLayout A -> m
    float B -> n
    float C -> o
    net.daum.adam.publisher.impl.b.g$c D -> p
    android.widget.ImageButton E -> q
    net.daum.adam.publisher.impl.b.h F -> r
    android.net.ConnectivityManager G -> s
    android.content.Context s() -> e
    net.daum.adam.publisher.impl.b.j d() -> d
    android.view.Display a() -> a
    void t() -> f
    void b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int a(int) -> a
    int b(int) -> b
    net.daum.adam.publisher.impl.b.g$c u() -> g
    void b(net.daum.adam.publisher.impl.b.g$c) -> a
    net.daum.adam.publisher.impl.b.g$c g() -> h
    void c(net.daum.adam.publisher.impl.b.g$c) -> b
    void f() -> i
    void a(java.lang.String,java.lang.String) -> a
    void a(net.daum.adam.publisher.impl.b.g$c) -> c
    void a(boolean) -> a
    void a(int,int) -> a
    void a(java.lang.String,java.lang.Object) -> a
    void f(java.lang.String) -> b
    void c(int) -> c
    void v() -> j
    void c() -> c
    java.lang.String w() -> k
    void x() -> l
    void g(java.lang.String) -> c
    net.daum.adam.publisher.impl.b.g$b h() -> m
    void a(net.daum.adam.publisher.impl.b.g$b) -> a
    void b(java.lang.String) -> d
    void l() -> n
    void c(org.json.JSONObject) -> b
    org.json.JSONObject k() -> o
    void b(org.json.JSONObject) -> c
    void b(boolean) -> b
    void j() -> p
    android.widget.RelativeLayout$LayoutParams b(int,int) -> b
    void y() -> q
    net.daum.adam.publisher.impl.b.j a(android.content.Context) -> a
    org.json.JSONObject n() -> r
    void d(org.json.JSONObject) -> d
    void m() -> s
    org.json.JSONObject a(android.view.View) -> a
    org.json.JSONObject o() -> t
    org.json.JSONObject p() -> u
    org.json.JSONObject q() -> v
    org.json.JSONObject r() -> w
    boolean c(java.lang.String) -> e
    void a(java.lang.String,android.os.Bundle) -> a
    void e(org.json.JSONObject) -> e
    void e(java.lang.String) -> f
    void b() -> b
    boolean a(android.view.View,boolean,android.widget.RelativeLayout$LayoutParams) -> a
    android.view.View d(android.content.Context) -> d
    void a(boolean,int,boolean) -> a
    void A() -> y
    void b(android.view.View) -> b
    void z() -> x
    void c(boolean) -> c
net.daum.adam.publisher.impl.b.k$1 -> net.daum.adam.publisher.impl.b.bg:
    net.daum.adam.publisher.impl.b.k a -> a
    void run() -> run
net.daum.adam.publisher.impl.b.k$2 -> net.daum.adam.publisher.impl.b.bh:
    net.daum.adam.publisher.impl.b.k a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
net.daum.adam.publisher.impl.b.k$3 -> net.daum.adam.publisher.impl.b.bi:
    net.daum.adam.publisher.impl.b.k a -> a
    void onClick(android.view.View) -> onClick
net.daum.adam.publisher.impl.b.k$4 -> net.daum.adam.publisher.impl.b.bj:
    net.daum.adam.publisher.impl.b.j a -> a
    net.daum.adam.publisher.impl.b.k b -> b
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
net.daum.adam.publisher.impl.b.k$5 -> net.daum.adam.publisher.impl.b.bk:
    int[] a -> a
net.daum.adam.publisher.impl.c -> net.daum.adam.publisher.impl.n:
    java.lang.String a -> a
    java.util.List a(java.io.InputStream) -> a
    java.lang.String a(org.xmlpull.v1.XmlPullParser,java.lang.String) -> a
    java.lang.String c(org.xmlpull.v1.XmlPullParser) -> c
    void a(org.xmlpull.v1.XmlPullParser) -> a
    java.util.List b(org.xmlpull.v1.XmlPullParser) -> b
net.daum.adam.publisher.impl.d -> net.daum.adam.publisher.impl.o:
    java.lang.String d -> a
    java.lang.String e -> b
    java.lang.String f -> c
    java.lang.String g -> d
    java.lang.String h -> e
    java.lang.String i -> f
    java.lang.String j -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String f() -> e
    void g(java.lang.String) -> e
    boolean equals(java.lang.Object) -> equals
    java.lang.String g() -> f
    void h(java.lang.String) -> f
net.daum.adam.publisher.impl.e -> net.daum.adam.publisher.impl.p:
    long a -> a
    net.daum.adam.publisher.impl.d b -> b
    void a(net.daum.adam.publisher.impl.d) -> a
    long a() -> a
    boolean b() -> b
    net.daum.adam.publisher.impl.d a(int) -> a
net.daum.adam.publisher.impl.f -> net.daum.adam.publisher.impl.q:
    java.util.List c(java.lang.String,java.util.List) -> c
    java.util.List a(java.io.InputStream) -> a
net.daum.adam.publisher.impl.g -> net.daum.adam.publisher.impl.r:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.String b -> b
    java.util.concurrent.atomic.AtomicBoolean e -> c
    net.daum.adam.publisher.impl.g$a f -> d
    net.daum.adam.publisher.impl.g$c g -> e
    net.daum.adam.publisher.impl.AdParameterBuilder h -> f
    java.lang.Thread i -> g
    net.daum.adam.publisher.impl.h j -> h
    net.daum.adam.publisher.AdView k -> i
    boolean l -> j
    net.daum.adam.publisher.impl.g$b m -> k
    void a(boolean) -> a
    void a() -> a
    void b(boolean) -> b
    net.daum.adam.publisher.impl.h f() -> e
    void c() -> b
    void a(android.os.Handler,net.daum.adam.publisher.AdView) -> a
    void a(net.daum.adam.publisher.AdView) -> a
    int d() -> c
    void a(int) -> a
    net.daum.adam.publisher.impl.h a(net.daum.adam.publisher.impl.g) -> a
    net.daum.adam.publisher.AdView b(net.daum.adam.publisher.impl.g) -> b
    net.daum.adam.publisher.impl.g$b c(net.daum.adam.publisher.impl.g) -> c
    java.lang.String e() -> d
    java.util.concurrent.atomic.AtomicBoolean d(net.daum.adam.publisher.impl.g) -> d
    void a(net.daum.adam.publisher.impl.g,net.daum.adam.publisher.AdView) -> a
    net.daum.adam.publisher.impl.g$a e(net.daum.adam.publisher.impl.g) -> e
net.daum.adam.publisher.impl.g$a -> net.daum.adam.publisher.impl.s:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.daum.adam.publisher.impl.g$b -> net.daum.adam.publisher.impl.t:
    net.daum.adam.publisher.impl.g$b a -> a
    net.daum.adam.publisher.impl.g$b b -> b
    net.daum.adam.publisher.impl.g$b c -> c
    net.daum.adam.publisher.impl.g$b d -> d
    net.daum.adam.publisher.impl.g$b[] e -> e
    net.daum.adam.publisher.impl.g$b[] values() -> values
    net.daum.adam.publisher.impl.g$b valueOf(java.lang.String) -> valueOf
net.daum.adam.publisher.impl.g$c -> net.daum.adam.publisher.impl.u:
    java.lang.Object b -> b
    java.lang.ref.WeakReference c -> c
    boolean d -> d
    net.daum.adam.publisher.impl.g a -> a
    void run() -> run
    void a() -> a
    void b() -> b
net.daum.adam.publisher.impl.h -> net.daum.adam.publisher.impl.v:
    void updateAd(net.daum.adam.publisher.impl.d) -> a
net.daum.adam.publisher.impl.i -> net.daum.adam.publisher.impl.w:
    java.lang.String a -> a
    java.util.List b(org.xmlpull.v1.XmlPullParser) -> b
    java.util.List c(org.xmlpull.v1.XmlPullParser) -> c
    net.daum.adam.publisher.impl.d d(org.xmlpull.v1.XmlPullParser) -> d
    void a(org.xmlpull.v1.XmlPullParser,net.daum.adam.publisher.impl.d) -> a
net.daum.adam.publisher.impl.j -> net.daum.adam.publisher.impl.x:
    java.lang.String a -> a
    boolean b -> b
    long c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void a(boolean) -> a
    long c() -> c
    void a(long) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
net.daum.adam.publisher.impl.k -> net.daum.adam.publisher.impl.y:
    net.daum.adam.publisher.impl.j b -> a
    net.daum.adam.publisher.impl.j a(android.content.Context) -> a
org.apache.commons.compress.archivers.ArchiveEntry -> org.apache.commons.compress.archivers.ArchiveEntry:
    long SIZE_UNKNOWN -> SIZE_UNKNOWN
    java.lang.String getName() -> getName
    long getSize() -> getSize
    boolean isDirectory() -> isDirectory
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
org.apache.commons.compress.archivers.ArchiveException -> org.apache.commons.compress.archivers.ArchiveException:
org.apache.commons.compress.archivers.ArchiveInputStream -> org.apache.commons.compress.archivers.ArchiveInputStream:
    byte[] SINGLE -> a
    long bytesRead -> b
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
    int read() -> read
    void count(int) -> a
    void count(long) -> a
    void pushedBackBytes(long) -> b
    int getCount() -> getCount
    long getBytesRead() -> getBytesRead
    boolean canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry) -> canReadEntryData
org.apache.commons.compress.archivers.ArchiveOutputStream -> org.apache.commons.compress.archivers.ArchiveOutputStream:
    byte[] oneByte -> a
    long bytesWritten -> b
    void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) -> putArchiveEntry
    void closeArchiveEntry() -> closeArchiveEntry
    void finish() -> finish
    org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File,java.lang.String) -> createArchiveEntry
    void write(int) -> write
    void count(int) -> a
    void count(long) -> a
    int getCount() -> getCount
    long getBytesWritten() -> getBytesWritten
    boolean canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry) -> canWriteEntryData
org.apache.commons.compress.archivers.ArchiveStreamFactory -> org.apache.commons.compress.archivers.ArchiveStreamFactory:
    java.lang.String AR -> AR
    java.lang.String ARJ -> ARJ
    java.lang.String CPIO -> CPIO
    java.lang.String DUMP -> DUMP
    java.lang.String JAR -> JAR
    java.lang.String TAR -> TAR
    java.lang.String ZIP -> ZIP
    java.lang.String SEVEN_Z -> SEVEN_Z
    java.lang.String entryEncoding -> a
    java.lang.String getEntryEncoding() -> getEntryEncoding
    void setEntryEncoding(java.lang.String) -> setEntryEncoding
    org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String,java.io.InputStream) -> createArchiveInputStream
    org.apache.commons.compress.archivers.ArchiveOutputStream createArchiveOutputStream(java.lang.String,java.io.OutputStream) -> createArchiveOutputStream
    org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.io.InputStream) -> createArchiveInputStream
org.apache.commons.compress.archivers.Lister -> org.apache.commons.compress.archivers.Lister:
    org.apache.commons.compress.archivers.ArchiveStreamFactory factory -> a
    void main(java.lang.String[]) -> main
    void usage() -> a
org.apache.commons.compress.archivers.StreamingNotSupportedException -> org.apache.commons.compress.archivers.StreamingNotSupportedException:
    java.lang.String format -> a
    java.lang.String getFormat() -> getFormat
org.apache.commons.compress.archivers.ar.ArArchiveEntry -> org.apache.commons.compress.archivers.ar.ArArchiveEntry:
    java.lang.String HEADER -> HEADER
    java.lang.String TRAILER -> TRAILER
    java.lang.String name -> a
    int userId -> b
    int groupId -> c
    int mode -> d
    long lastModified -> e
    long length -> f
    long getSize() -> getSize
    java.lang.String getName() -> getName
    int getUserId() -> getUserId
    int getGroupId() -> getGroupId
    int getMode() -> getMode
    long getLastModified() -> getLastModified
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    long getLength() -> getLength
    boolean isDirectory() -> isDirectory
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.compress.archivers.ar.ArArchiveInputStream -> org.apache.commons.compress.archivers.ar.ArArchiveInputStream:
    java.io.InputStream input -> a
    long offset -> b
    boolean closed -> c
    org.apache.commons.compress.archivers.ar.ArArchiveEntry currentEntry -> d
    byte[] namebuffer -> e
    long entryOffset -> f
    byte[] NAME_BUF -> g
    byte[] LAST_MODIFIED_BUF -> h
    byte[] ID_BUF -> i
    byte[] FILE_MODE_BUF -> j
    byte[] LENGTH_BUF -> k
    int BSD_LONGNAME_PREFIX_LEN -> l
    org.apache.commons.compress.archivers.ar.ArArchiveEntry getNextArEntry() -> getNextArEntry
    java.lang.String getExtendedName(int) -> b
    long asLong(byte[]) -> a
    int asInt(byte[]) -> b
    int asInt(byte[],boolean) -> a
    int asInt(byte[],int) -> a
    int asInt(byte[],int,boolean) -> a
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
    void close() -> close
    int read(byte[],int,int) -> read
    boolean matches(byte[],int) -> matches
    boolean isBSDLongName(java.lang.String) -> a
    java.lang.String getBSDLongName(java.lang.String) -> b
    boolean isGNUStringTable(java.lang.String) -> c
    org.apache.commons.compress.archivers.ar.ArArchiveEntry readGNUStringTable(byte[]) -> c
    boolean isGNULongName(java.lang.String) -> d
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream -> org.apache.commons.compress.archivers.ar.ArArchiveOutputStream:
    int LONGFILE_ERROR -> LONGFILE_ERROR
    int LONGFILE_BSD -> LONGFILE_BSD
    java.io.OutputStream out -> a
    long entryOffset -> b
    org.apache.commons.compress.archivers.ar.ArArchiveEntry prevEntry -> c
    boolean haveUnclosedEntry -> d
    int longFileMode -> e
    boolean finished -> f
    void setLongFileMode(int) -> setLongFileMode
    long writeArchiveHeader() -> a
    void closeArchiveEntry() -> closeArchiveEntry
    void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) -> putArchiveEntry
    long fill(long,long,char) -> a
    long write(java.lang.String) -> a
    long writeEntryHeader(org.apache.commons.compress.archivers.ar.ArArchiveEntry) -> a
    void write(byte[],int,int) -> write
    void close() -> close
    org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File,java.lang.String) -> createArchiveEntry
    void finish() -> finish
org.apache.commons.compress.archivers.arj.ArjArchiveEntry -> org.apache.commons.compress.archivers.arj.ArjArchiveEntry:
    org.apache.commons.compress.archivers.arj.LocalFileHeader localFileHeader -> a
    java.lang.String getName() -> getName
    long getSize() -> getSize
    boolean isDirectory() -> isDirectory
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    int getMode() -> getMode
    int getUnixMode() -> getUnixMode
    int getHostOs() -> getHostOs
    boolean isHostOsUnix() -> isHostOsUnix
    int getMethod() -> a
org.apache.commons.compress.archivers.arj.ArjArchiveEntry$HostOs -> org.apache.commons.compress.archivers.arj.ArjArchiveEntry$HostOs:
    int DOS -> DOS
    int PRIMOS -> PRIMOS
    int UNIX -> UNIX
    int AMIGA -> AMIGA
    int MAC_OS -> MAC_OS
    int OS_2 -> OS_2
    int APPLE_GS -> APPLE_GS
    int ATARI_ST -> ATARI_ST
    int NEXT -> NEXT
    int VAX_VMS -> VAX_VMS
    int WIN95 -> WIN95
    int WIN32 -> WIN32
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream -> org.apache.commons.compress.archivers.arj.ArjArchiveInputStream:
    java.io.DataInputStream in -> a
    java.lang.String charsetName -> b
    org.apache.commons.compress.archivers.arj.MainHeader mainHeader -> c
    org.apache.commons.compress.archivers.arj.LocalFileHeader currentLocalFileHeader -> d
    java.io.InputStream currentInputStream -> e
    void close() -> close
    int read8(java.io.DataInputStream) -> a
    int read16(java.io.DataInputStream) -> b
    int read32(java.io.DataInputStream) -> c
    java.lang.String readString(java.io.DataInputStream) -> d
    void readFully(java.io.DataInputStream,byte[]) -> a
    byte[] readHeader() -> a
    org.apache.commons.compress.archivers.arj.MainHeader readMainHeader() -> b
    org.apache.commons.compress.archivers.arj.LocalFileHeader readLocalFileHeader() -> c
    void readExtraData(int,java.io.DataInputStream,org.apache.commons.compress.archivers.arj.LocalFileHeader) -> a
    boolean matches(byte[],int) -> matches
    java.lang.String getArchiveName() -> getArchiveName
    java.lang.String getArchiveComment() -> getArchiveComment
    org.apache.commons.compress.archivers.arj.ArjArchiveEntry getNextEntry() -> getNextEntry
    boolean canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry) -> canReadEntryData
    int read(byte[],int,int) -> read
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
org.apache.commons.compress.archivers.arj.LocalFileHeader -> org.apache.commons.compress.archivers.arj.LocalFileHeader:
    int archiverVersionNumber -> a
    int minVersionToExtract -> b
    int hostOS -> c
    int arjFlags -> d
    int method -> e
    int fileType -> f
    int reserved -> g
    int dateTimeModified -> h
    long compressedSize -> i
    long originalSize -> j
    long originalCrc32 -> k
    int fileSpecPosition -> l
    int fileAccessMode -> m
    int firstChapter -> n
    int lastChapter -> o
    int extendedFilePosition -> p
    int dateTimeAccessed -> q
    int dateTimeCreated -> r
    int originalSizeEvenForVolumes -> s
    java.lang.String name -> t
    java.lang.String comment -> u
    byte[][] extendedHeaders -> v
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.arj.LocalFileHeader$FileTypes -> org.apache.commons.compress.archivers.arj.LocalFileHeader$FileTypes:
org.apache.commons.compress.archivers.arj.LocalFileHeader$Flags -> org.apache.commons.compress.archivers.arj.LocalFileHeader$Flags:
org.apache.commons.compress.archivers.arj.LocalFileHeader$Methods -> org.apache.commons.compress.archivers.arj.LocalFileHeader$Methods:
org.apache.commons.compress.archivers.arj.MainHeader -> org.apache.commons.compress.archivers.arj.MainHeader:
    int archiverVersionNumber -> a
    int minVersionToExtract -> b
    int hostOS -> c
    int arjFlags -> d
    int securityVersion -> e
    int fileType -> f
    int reserved -> g
    int dateTimeCreated -> h
    int dateTimeModified -> i
    long archiveSize -> j
    int securityEnvelopeFilePosition -> k
    int fileSpecPosition -> l
    int securityEnvelopeLength -> m
    int encryptionVersion -> n
    int lastChapter -> o
    int arjProtectionFactor -> p
    int arjFlags2 -> q
    java.lang.String name -> r
    java.lang.String comment -> s
    byte[] extendedHeaderBytes -> t
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.arj.MainHeader$Flags -> org.apache.commons.compress.archivers.arj.MainHeader$Flags:
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry -> org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:
    short fileFormat -> a
    int headerSize -> b
    int alignmentBoundary -> c
    long chksum -> d
    long filesize -> e
    long gid -> f
    long inode -> g
    long maj -> h
    long min -> i
    long mode -> j
    long mtime -> k
    java.lang.String name -> l
    long nlink -> m
    long rmaj -> n
    long rmin -> o
    long uid -> p
    void checkNewFormat() -> a
    void checkOldFormat() -> b
    long getChksum() -> getChksum
    long getDevice() -> getDevice
    long getDeviceMaj() -> getDeviceMaj
    long getDeviceMin() -> getDeviceMin
    long getSize() -> getSize
    short getFormat() -> getFormat
    long getGID() -> getGID
    int getHeaderSize() -> getHeaderSize
    int getAlignmentBoundary() -> getAlignmentBoundary
    int getHeaderPadCount() -> getHeaderPadCount
    int getDataPadCount() -> getDataPadCount
    long getInode() -> getInode
    long getMode() -> getMode
    java.lang.String getName() -> getName
    long getNumberOfLinks() -> getNumberOfLinks
    long getRemoteDevice() -> getRemoteDevice
    long getRemoteDeviceMaj() -> getRemoteDeviceMaj
    long getRemoteDeviceMin() -> getRemoteDeviceMin
    long getTime() -> getTime
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    long getUID() -> getUID
    boolean isBlockDevice() -> isBlockDevice
    boolean isCharacterDevice() -> isCharacterDevice
    boolean isDirectory() -> isDirectory
    boolean isNetwork() -> isNetwork
    boolean isPipe() -> isPipe
    boolean isRegularFile() -> isRegularFile
    boolean isSocket() -> isSocket
    boolean isSymbolicLink() -> isSymbolicLink
    void setChksum(long) -> setChksum
    void setDevice(long) -> setDevice
    void setDeviceMaj(long) -> setDeviceMaj
    void setDeviceMin(long) -> setDeviceMin
    void setSize(long) -> setSize
    void setGID(long) -> setGID
    void setInode(long) -> setInode
    void setMode(long) -> setMode
    void setName(java.lang.String) -> setName
    void setNumberOfLinks(long) -> setNumberOfLinks
    void setRemoteDevice(long) -> setRemoteDevice
    void setRemoteDeviceMaj(long) -> setRemoteDeviceMaj
    void setRemoteDeviceMin(long) -> setRemoteDeviceMin
    void setTime(long) -> setTime
    void setUID(long) -> setUID
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream -> org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream:
    boolean closed -> a
    org.apache.commons.compress.archivers.cpio.CpioArchiveEntry entry -> b
    long entryBytesRead -> c
    boolean entryEOF -> d
    byte[] tmpbuf -> e
    long crc -> f
    java.io.InputStream in -> g
    byte[] TWO_BYTES_BUF -> h
    byte[] FOUR_BYTES_BUF -> i
    byte[] SIX_BYTES_BUF -> j
    int blockSize -> k
    org.apache.commons.compress.archivers.zip.ZipEncoding encoding -> l
    int available() -> available
    void close() -> close
    void closeEntry() -> a
    void ensureOpen() -> b
    org.apache.commons.compress.archivers.cpio.CpioArchiveEntry getNextCPIOEntry() -> getNextCPIOEntry
    void skip(int) -> b
    int read(byte[],int,int) -> read
    int readFully(byte[],int,int) -> a
    long readBinaryLong(int,boolean) -> a
    long readAsciiLong(int,int) -> a
    org.apache.commons.compress.archivers.cpio.CpioArchiveEntry readNewEntry(boolean) -> a
    org.apache.commons.compress.archivers.cpio.CpioArchiveEntry readOldAsciiEntry() -> c
    org.apache.commons.compress.archivers.cpio.CpioArchiveEntry readOldBinaryEntry(boolean) -> b
    java.lang.String readCString(int) -> c
    long skip(long) -> skip
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
    void skipRemainderOfLastBlock() -> d
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream -> org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream:
    org.apache.commons.compress.archivers.cpio.CpioArchiveEntry entry -> a
    boolean closed -> b
    boolean finished -> c
    short entryFormat -> d
    java.util.HashMap names -> e
    long crc -> f
    long written -> g
    java.io.OutputStream out -> h
    int blockSize -> i
    long nextArtificalDeviceAndInode -> j
    org.apache.commons.compress.archivers.zip.ZipEncoding encoding -> k
    void ensureOpen() -> a
    void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) -> putArchiveEntry
    void writeHeader(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry) -> a
    void writeNewEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry) -> b
    void writeOldAsciiEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry) -> c
    void writeOldBinaryEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry,boolean) -> a
    void closeArchiveEntry() -> closeArchiveEntry
    void write(byte[],int,int) -> write
    void finish() -> finish
    void close() -> close
    void pad(int) -> b
    void writeBinaryLong(long,int,boolean) -> a
    void writeAsciiLong(long,int,int) -> a
    void writeCString(java.lang.String) -> a
    org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File,java.lang.String) -> createArchiveEntry
org.apache.commons.compress.archivers.cpio.CpioConstants -> org.apache.commons.compress.archivers.cpio.CpioConstants:
    java.lang.String MAGIC_NEW -> MAGIC_NEW
    java.lang.String MAGIC_NEW_CRC -> MAGIC_NEW_CRC
    java.lang.String MAGIC_OLD_ASCII -> MAGIC_OLD_ASCII
    int MAGIC_OLD_BINARY -> MAGIC_OLD_BINARY
    short FORMAT_NEW -> FORMAT_NEW
    short FORMAT_NEW_CRC -> FORMAT_NEW_CRC
    short FORMAT_OLD_ASCII -> FORMAT_OLD_ASCII
    short FORMAT_OLD_BINARY -> FORMAT_OLD_BINARY
    short FORMAT_NEW_MASK -> FORMAT_NEW_MASK
    short FORMAT_OLD_MASK -> FORMAT_OLD_MASK
    int S_IFMT -> S_IFMT
    int C_ISSOCK -> C_ISSOCK
    int C_ISLNK -> C_ISLNK
    int C_ISNWK -> C_ISNWK
    int C_ISREG -> C_ISREG
    int C_ISBLK -> C_ISBLK
    int C_ISDIR -> C_ISDIR
    int C_ISCHR -> C_ISCHR
    int C_ISFIFO -> C_ISFIFO
    int C_ISUID -> C_ISUID
    int C_ISGID -> C_ISGID
    int C_ISVTX -> C_ISVTX
    int C_IRUSR -> C_IRUSR
    int C_IWUSR -> C_IWUSR
    int C_IXUSR -> C_IXUSR
    int C_IRGRP -> C_IRGRP
    int C_IWGRP -> C_IWGRP
    int C_IXGRP -> C_IXGRP
    int C_IROTH -> C_IROTH
    int C_IWOTH -> C_IWOTH
    int C_IXOTH -> C_IXOTH
    java.lang.String CPIO_TRAILER -> CPIO_TRAILER
    int BLOCK_SIZE -> BLOCK_SIZE
org.apache.commons.compress.archivers.cpio.CpioUtil -> org.apache.commons.compress.archivers.cpio.CpioUtil:
    long fileType(long) -> a
    long byteArray2long(byte[],boolean) -> a
    byte[] long2byteArray(long,int,boolean) -> a
org.apache.commons.compress.archivers.dump.Dirent -> org.apache.commons.compress.archivers.dump.Dirent:
    int ino -> a
    int parentIno -> b
    int type -> c
    java.lang.String name -> d
    int getIno() -> a
    int getParentIno() -> b
    java.lang.String getName() -> c
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.dump.DumpArchiveConstants -> org.apache.commons.compress.archivers.dump.DumpArchiveConstants:
    int TP_SIZE -> TP_SIZE
    int NTREC -> NTREC
    int HIGH_DENSITY_NTREC -> HIGH_DENSITY_NTREC
    int OFS_MAGIC -> OFS_MAGIC
    int NFS_MAGIC -> NFS_MAGIC
    int FS_UFS2_MAGIC -> FS_UFS2_MAGIC
    int CHECKSUM -> CHECKSUM
    int LBLSIZE -> LBLSIZE
    int NAMELEN -> NAMELEN
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE -> org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE:
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE ZLIB -> ZLIB
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE BZLIB -> BZLIB
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE LZO -> LZO
    int code -> a
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] $VALUES -> b
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE[] values() -> values
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE valueOf(java.lang.String) -> valueOf
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE find(int) -> find
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE -> org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE:
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE TAPE -> TAPE
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE INODE -> INODE
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE BITS -> BITS
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE ADDR -> ADDR
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE END -> END
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE CLRI -> CLRI
    int code -> a
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE[] $VALUES -> b
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE[] values() -> values
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE valueOf(java.lang.String) -> valueOf
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE find(int) -> find
org.apache.commons.compress.archivers.dump.DumpArchiveEntry -> org.apache.commons.compress.archivers.dump.DumpArchiveEntry:
    java.lang.String name -> a
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE type -> b
    int mode -> c
    java.util.Set permissions -> d
    long size -> e
    long atime -> f
    long mtime -> g
    int uid -> h
    int gid -> i
    org.apache.commons.compress.archivers.dump.DumpArchiveSummary summary -> j
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader header -> k
    java.lang.String simpleName -> l
    java.lang.String originalName -> m
    int volume -> n
    long offset -> o
    int ino -> p
    int nlink -> q
    long ctime -> r
    int generation -> s
    boolean isDeleted -> t
    java.lang.String getSimpleName() -> getSimpleName
    void setSimpleName(java.lang.String) -> a
    int getIno() -> getIno
    int getNlink() -> getNlink
    void setNlink(int) -> setNlink
    java.util.Date getCreationTime() -> getCreationTime
    void setCreationTime(java.util.Date) -> setCreationTime
    int getGeneration() -> getGeneration
    void setGeneration(int) -> setGeneration
    boolean isDeleted() -> isDeleted
    void setDeleted(boolean) -> setDeleted
    long getOffset() -> getOffset
    void setOffset(long) -> setOffset
    int getVolume() -> getVolume
    void setVolume(int) -> setVolume
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE getHeaderType() -> getHeaderType
    int getHeaderCount() -> getHeaderCount
    int getHeaderHoles() -> getHeaderHoles
    boolean isSparseRecord(int) -> isSparseRecord
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry parse(byte[]) -> a
    java.lang.String getName() -> getName
    java.lang.String getOriginalName() -> a
    void setName(java.lang.String) -> setName
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    boolean isSocket() -> isSocket
    boolean isChrDev() -> isChrDev
    boolean isBlkDev() -> isBlkDev
    boolean isFifo() -> isFifo
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE getType() -> getType
    void setType(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE) -> setType
    int getMode() -> getMode
    void setMode(int) -> setMode
    java.util.Set getPermissions() -> getPermissions
    long getSize() -> getSize
    long getEntrySize() -> b
    void setSize(long) -> setSize
    void setLastModifiedDate(java.util.Date) -> setLastModifiedDate
    java.util.Date getAccessTime() -> getAccessTime
    void setAccessTime(java.util.Date) -> setAccessTime
    int getUserId() -> getUserId
    void setUserId(int) -> setUserId
    int getGroupId() -> getGroupId
    void setGroupId(int) -> setGroupId
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION -> org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION:
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION SETUID -> SETUID
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION SETGUI -> SETGUI
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION STICKY -> STICKY
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION USER_READ -> USER_READ
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION USER_WRITE -> USER_WRITE
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION USER_EXEC -> USER_EXEC
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION GROUP_READ -> GROUP_READ
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION GROUP_WRITE -> GROUP_WRITE
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION GROUP_EXEC -> GROUP_EXEC
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION WORLD_READ -> WORLD_READ
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION WORLD_WRITE -> WORLD_WRITE
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION WORLD_EXEC -> WORLD_EXEC
    int code -> a
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION[] $VALUES -> b
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION[] values() -> values
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION valueOf(java.lang.String) -> valueOf
    java.util.Set find(int) -> find
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE -> org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE:
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE WHITEOUT -> WHITEOUT
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE SOCKET -> SOCKET
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE LINK -> LINK
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE FILE -> FILE
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE BLKDEV -> BLKDEV
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE DIRECTORY -> DIRECTORY
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE CHRDEV -> CHRDEV
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE FIFO -> FIFO
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE UNKNOWN -> UNKNOWN
    int code -> a
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE[] $VALUES -> b
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE[] values() -> values
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE valueOf(java.lang.String) -> valueOf
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE find(int) -> find
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader -> org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader:
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE type -> a
    int volume -> b
    int ino -> c
    int count -> d
    int holes -> e
    byte[] cdata -> f
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE getType() -> getType
    int getVolume() -> getVolume
    int getIno() -> getIno
    int getCount() -> getCount
    int getHoles() -> getHoles
    int getCdata(int) -> getCdata
    org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE access$002(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE) -> a
    int access$102(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int) -> a
    int access$202(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int) -> b
    int access$302(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int) -> c
    int access$402(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader,int) -> d
    int access$300(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader) -> a
    int access$408(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader) -> b
    byte[] access$500(org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TapeSegmentHeader) -> c
org.apache.commons.compress.archivers.dump.DumpArchiveException -> org.apache.commons.compress.archivers.dump.DumpArchiveException:
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream -> org.apache.commons.compress.archivers.dump.DumpArchiveInputStream:
    org.apache.commons.compress.archivers.dump.DumpArchiveSummary summary -> b
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry active -> c
    boolean isClosed -> d
    boolean hasHitEOF -> e
    long entrySize -> f
    long entryOffset -> g
    int readIdx -> h
    byte[] readBuf -> i
    byte[] blockBuffer -> j
    int recordOffset -> k
    long filepos -> l
    org.apache.commons.compress.archivers.dump.TapeInputStream raw -> a
    java.util.Map names -> m
    java.util.Map pending -> n
    java.util.Queue queue -> o
    org.apache.commons.compress.archivers.zip.ZipEncoding encoding -> p
    int getCount() -> getCount
    long getBytesRead() -> getBytesRead
    org.apache.commons.compress.archivers.dump.DumpArchiveSummary getSummary() -> getSummary
    void readCLRI() -> a
    void readBITS() -> b
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry getNextDumpEntry() -> getNextDumpEntry
    org.apache.commons.compress.archivers.dump.DumpArchiveEntry getNextEntry() -> getNextEntry
    void readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry) -> a
    java.lang.String getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry) -> b
    int read(byte[],int,int) -> read
    void close() -> close
    boolean matches(byte[],int) -> matches
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream$1 -> org.apache.commons.compress.archivers.dump.DumpArchiveInputStream$1:
    org.apache.commons.compress.archivers.dump.DumpArchiveInputStream this$0 -> a
    int compare(org.apache.commons.compress.archivers.dump.DumpArchiveEntry,org.apache.commons.compress.archivers.dump.DumpArchiveEntry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.compress.archivers.dump.DumpArchiveSummary -> org.apache.commons.compress.archivers.dump.DumpArchiveSummary:
    long dumpDate -> a
    long previousDumpDate -> b
    int volume -> c
    java.lang.String label -> d
    int level -> e
    java.lang.String filesys -> f
    java.lang.String devname -> g
    java.lang.String hostname -> h
    int flags -> i
    int firstrec -> j
    int ntrec -> k
    java.util.Date getDumpDate() -> getDumpDate
    void setDumpDate(java.util.Date) -> setDumpDate
    java.util.Date getPreviousDumpDate() -> getPreviousDumpDate
    void setPreviousDumpDate(java.util.Date) -> setPreviousDumpDate
    int getVolume() -> getVolume
    void setVolume(int) -> setVolume
    int getLevel() -> getLevel
    void setLevel(int) -> setLevel
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getFilesystem() -> getFilesystem
    void setFilesystem(java.lang.String) -> setFilesystem
    java.lang.String getDevname() -> getDevname
    void setDevname(java.lang.String) -> setDevname
    java.lang.String getHostname() -> getHostname
    void setHostname(java.lang.String) -> setHostname
    int getFlags() -> getFlags
    void setFlags(int) -> setFlags
    int getFirstRecord() -> getFirstRecord
    void setFirstRecord(int) -> setFirstRecord
    int getNTRec() -> getNTRec
    void setNTRec(int) -> setNTRec
    boolean isNewHeader() -> isNewHeader
    boolean isNewInode() -> isNewInode
    boolean isCompressed() -> isCompressed
    boolean isMetaDataOnly() -> isMetaDataOnly
    boolean isExtendedAttributes() -> isExtendedAttributes
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.compress.archivers.dump.DumpArchiveUtil -> org.apache.commons.compress.archivers.dump.DumpArchiveUtil:
    int calculateChecksum(byte[]) -> calculateChecksum
    boolean verify(byte[]) -> verify
    int getIno(byte[]) -> getIno
    long convert64(byte[],int) -> convert64
    int convert32(byte[],int) -> convert32
    int convert16(byte[],int) -> convert16
    java.lang.String decode(org.apache.commons.compress.archivers.zip.ZipEncoding,byte[],int,int) -> a
org.apache.commons.compress.archivers.dump.InvalidFormatException -> org.apache.commons.compress.archivers.dump.InvalidFormatException:
    long offset -> a
    long getOffset() -> getOffset
org.apache.commons.compress.archivers.dump.ShortFileException -> org.apache.commons.compress.archivers.dump.ShortFileException:
org.apache.commons.compress.archivers.dump.TapeInputStream -> org.apache.commons.compress.archivers.dump.TapeInputStream:
    byte[] blockBuffer -> a
    int currBlkIdx -> b
    int blockSize -> c
    int readOffset -> d
    boolean isCompressed -> e
    long bytesRead -> f
    void resetBlockSize(int,boolean) -> resetBlockSize
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void close() -> close
    byte[] peek() -> peek
    byte[] readRecord() -> readRecord
    boolean readBlock(boolean) -> a
    boolean readFully(byte[],int,int) -> a
    long getBytesRead() -> getBytesRead
org.apache.commons.compress.archivers.dump.TapeInputStream$1 -> org.apache.commons.compress.archivers.dump.TapeInputStream$1:
    int[] $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE -> a
org.apache.commons.compress.archivers.dump.UnrecognizedFormatException -> org.apache.commons.compress.archivers.dump.UnrecognizedFormatException:
org.apache.commons.compress.archivers.dump.UnsupportedCompressionAlgorithmException -> org.apache.commons.compress.archivers.dump.UnsupportedCompressionAlgorithmException:
org.apache.commons.compress.archivers.jar.JarArchiveEntry -> org.apache.commons.compress.archivers.jar.JarArchiveEntry:
    java.util.jar.Attributes manifestAttributes -> a
    java.security.cert.Certificate[] certificates -> b
    java.util.jar.Attributes getManifestAttributes() -> getManifestAttributes
    java.security.cert.Certificate[] getCertificates() -> getCertificates
org.apache.commons.compress.archivers.jar.JarArchiveInputStream -> org.apache.commons.compress.archivers.jar.JarArchiveInputStream:
    org.apache.commons.compress.archivers.jar.JarArchiveEntry getNextJarEntry() -> getNextJarEntry
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream -> org.apache.commons.compress.archivers.jar.JarArchiveOutputStream:
    boolean jarMarkerAdded -> i
    void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) -> putArchiveEntry
org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder -> org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder:
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1 -> org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1:
    boolean isInitialized -> e
    javax.crypto.CipherInputStream cipherInputStream -> f
    org.apache.commons.compress.archivers.sevenz.Coder val$coder -> a
    byte[] val$passwordBytes -> b
    java.io.InputStream val$in -> c
    org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder this$0 -> d
    javax.crypto.CipherInputStream init() -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
org.apache.commons.compress.archivers.sevenz.Archive -> org.apache.commons.compress.archivers.sevenz.Archive:
    long packPos -> a
    long[] packSizes -> b
    java.util.BitSet packCrcsDefined -> c
    long[] packCrcs -> d
    org.apache.commons.compress.archivers.sevenz.Folder[] folders -> e
    org.apache.commons.compress.archivers.sevenz.SubStreamsInfo subStreamsInfo -> f
    org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files -> g
    org.apache.commons.compress.archivers.sevenz.StreamMap streamMap -> h
org.apache.commons.compress.archivers.sevenz.BindPair -> org.apache.commons.compress.archivers.sevenz.BindPair:
    long inIndex -> a
    long outIndex -> b
org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream -> org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream:
    java.io.RandomAccessFile file -> a
    long bytesRemaining -> b
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
org.apache.commons.compress.archivers.sevenz.Coder -> org.apache.commons.compress.archivers.sevenz.Coder:
    byte[] decompressionMethodId -> a
    long numInStreams -> b
    long numOutStreams -> c
    byte[] properties -> d
org.apache.commons.compress.archivers.sevenz.CoderBase -> org.apache.commons.compress.archivers.sevenz.CoderBase:
    java.lang.Class[] acceptableOptions -> a
    byte[] NONE -> b
    boolean canAcceptOptions(java.lang.Object) -> a
    byte[] getOptionsAsProperties(java.lang.Object) -> b
    java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder,java.io.InputStream) -> a
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream encode(java.io.OutputStream,java.lang.Object) -> a
    int numberOptionOrDefault(java.lang.Object,int) -> a
org.apache.commons.compress.archivers.sevenz.Coders -> org.apache.commons.compress.archivers.sevenz.Coders:
    java.util.Map CODER_MAP -> a
    org.apache.commons.compress.archivers.sevenz.CoderBase findByMethod(org.apache.commons.compress.archivers.sevenz.SevenZMethod) -> a
    java.io.InputStream addDecoder(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream addEncoder(java.io.OutputStream,org.apache.commons.compress.archivers.sevenz.SevenZMethod,java.lang.Object) -> a
org.apache.commons.compress.archivers.sevenz.Coders$1 -> org.apache.commons.compress.archivers.sevenz.Coders$1:
org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder -> org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder:
    org.tukaani.xz.FilterOptions opts -> a
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream encode(java.io.OutputStream,java.lang.Object) -> a
org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder$1 -> org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder$1:
    org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder this$0 -> a
    void flush() -> flush
org.apache.commons.compress.archivers.sevenz.Coders$BZIP2Decoder -> org.apache.commons.compress.archivers.sevenz.Coders$BZIP2Decoder:
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream encode(java.io.OutputStream,java.lang.Object) -> a
org.apache.commons.compress.archivers.sevenz.Coders$CopyDecoder -> org.apache.commons.compress.archivers.sevenz.Coders$CopyDecoder:
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream encode(java.io.OutputStream,java.lang.Object) -> a
org.apache.commons.compress.archivers.sevenz.Coders$DeflateDecoder -> org.apache.commons.compress.archivers.sevenz.Coders$DeflateDecoder:
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream encode(java.io.OutputStream,java.lang.Object) -> a
org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream -> org.apache.commons.compress.archivers.sevenz.Coders$DummyByteAddingInputStream:
    boolean addDummyByte -> a
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.commons.compress.archivers.sevenz.Coders$LZMADecoder -> org.apache.commons.compress.archivers.sevenz.Coders$LZMADecoder:
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
org.apache.commons.compress.archivers.sevenz.DeltaDecoder -> org.apache.commons.compress.archivers.sevenz.DeltaDecoder:
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream encode(java.io.OutputStream,java.lang.Object) -> a
    byte[] getOptionsAsProperties(java.lang.Object) -> b
    java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder,java.io.InputStream) -> a
    int getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder) -> a
org.apache.commons.compress.archivers.sevenz.Folder -> org.apache.commons.compress.archivers.sevenz.Folder:
    org.apache.commons.compress.archivers.sevenz.Coder[] coders -> a
    long totalInputStreams -> b
    long totalOutputStreams -> c
    org.apache.commons.compress.archivers.sevenz.BindPair[] bindPairs -> d
    long[] packedStreams -> e
    long[] unpackSizes -> f
    boolean hasCrc -> g
    long crc -> h
    int numUnpackSubStreams -> i
    java.lang.Iterable getOrderedCoders() -> a
    int findBindPairForInStream(int) -> a
    int findBindPairForOutStream(int) -> b
    long getUnpackSize() -> b
org.apache.commons.compress.archivers.sevenz.LZMA2Decoder -> org.apache.commons.compress.archivers.sevenz.LZMA2Decoder:
    java.io.InputStream decode(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[]) -> a
    java.io.OutputStream encode(java.io.OutputStream,java.lang.Object) -> a
    byte[] getOptionsAsProperties(java.lang.Object) -> b
    java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder,java.io.InputStream) -> a
    int getDictSize(java.lang.Object) -> c
    int getDictionarySize(org.apache.commons.compress.archivers.sevenz.Coder) -> a
    org.tukaani.xz.LZMA2Options getOptions(java.lang.Object) -> d
    int numberOptionOrDefault(java.lang.Object) -> e
org.apache.commons.compress.archivers.sevenz.NID -> org.apache.commons.compress.archivers.sevenz.NID:
    int kEnd -> kEnd
    int kHeader -> kHeader
    int kArchiveProperties -> kArchiveProperties
    int kAdditionalStreamsInfo -> kAdditionalStreamsInfo
    int kMainStreamsInfo -> kMainStreamsInfo
    int kFilesInfo -> kFilesInfo
    int kPackInfo -> kPackInfo
    int kUnpackInfo -> kUnpackInfo
    int kSubStreamsInfo -> kSubStreamsInfo
    int kSize -> kSize
    int kCRC -> kCRC
    int kFolder -> kFolder
    int kCodersUnpackSize -> kCodersUnpackSize
    int kNumUnpackStream -> kNumUnpackStream
    int kEmptyStream -> kEmptyStream
    int kEmptyFile -> kEmptyFile
    int kAnti -> kAnti
    int kName -> kName
    int kCTime -> kCTime
    int kATime -> kATime
    int kMTime -> kMTime
    int kWinAttributes -> kWinAttributes
    int kComment -> kComment
    int kEncodedHeader -> kEncodedHeader
    int kStartPos -> kStartPos
    int kDummy -> kDummy
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry -> org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry:
    java.lang.String name -> a
    boolean hasStream -> b
    boolean isDirectory -> c
    boolean isAntiItem -> d
    boolean hasCreationDate -> e
    boolean hasLastModifiedDate -> f
    boolean hasAccessDate -> g
    long creationDate -> h
    long lastModifiedDate -> i
    long accessDate -> j
    boolean hasWindowsAttributes -> k
    int windowsAttributes -> l
    boolean hasCrc -> m
    long crc -> n
    long compressedCrc -> o
    long size -> p
    long compressedSize -> q
    java.lang.Iterable contentMethods -> r
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasStream() -> hasStream
    void setHasStream(boolean) -> setHasStream
    boolean isDirectory() -> isDirectory
    void setDirectory(boolean) -> setDirectory
    boolean isAntiItem() -> isAntiItem
    void setAntiItem(boolean) -> setAntiItem
    boolean getHasCreationDate() -> getHasCreationDate
    void setHasCreationDate(boolean) -> setHasCreationDate
    java.util.Date getCreationDate() -> getCreationDate
    void setCreationDate(long) -> setCreationDate
    void setCreationDate(java.util.Date) -> setCreationDate
    boolean getHasLastModifiedDate() -> getHasLastModifiedDate
    void setHasLastModifiedDate(boolean) -> setHasLastModifiedDate
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    void setLastModifiedDate(long) -> setLastModifiedDate
    void setLastModifiedDate(java.util.Date) -> setLastModifiedDate
    boolean getHasAccessDate() -> getHasAccessDate
    void setHasAccessDate(boolean) -> setHasAccessDate
    java.util.Date getAccessDate() -> getAccessDate
    void setAccessDate(long) -> setAccessDate
    void setAccessDate(java.util.Date) -> setAccessDate
    boolean getHasWindowsAttributes() -> getHasWindowsAttributes
    void setHasWindowsAttributes(boolean) -> setHasWindowsAttributes
    int getWindowsAttributes() -> getWindowsAttributes
    void setWindowsAttributes(int) -> setWindowsAttributes
    boolean getHasCrc() -> getHasCrc
    void setHasCrc(boolean) -> setHasCrc
    int getCrc() -> getCrc
    void setCrc(int) -> setCrc
    long getCrcValue() -> getCrcValue
    void setCrcValue(long) -> setCrcValue
    long getCompressedCrcValue() -> a
    void setCompressedCrcValue(long) -> a
    long getSize() -> getSize
    void setSize(long) -> setSize
    long getCompressedSize() -> b
    void setCompressedSize(long) -> b
    void setContentMethods(java.lang.Iterable) -> setContentMethods
    java.lang.Iterable getContentMethods() -> getContentMethods
    java.util.Date ntfsTimeToJavaTime(long) -> ntfsTimeToJavaTime
    long javaTimeToNtfsTime(java.util.Date) -> javaTimeToNtfsTime
org.apache.commons.compress.archivers.sevenz.SevenZFile -> org.apache.commons.compress.archivers.sevenz.SevenZFile:
    java.io.RandomAccessFile file -> b
    org.apache.commons.compress.archivers.sevenz.Archive archive -> c
    int currentEntryIndex -> d
    int currentFolderIndex -> e
    java.io.InputStream currentFolderInputStream -> f
    java.io.InputStream currentEntryInputStream -> g
    byte[] password -> h
    byte[] sevenZSignature -> a
    void close() -> close
    org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry getNextEntry() -> getNextEntry
    org.apache.commons.compress.archivers.sevenz.Archive readHeaders(byte[]) -> a
    org.apache.commons.compress.archivers.sevenz.StartHeader readStartHeader(long) -> a
    void readHeader(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive) -> a
    void readArchiveProperties(java.io.DataInput) -> a
    java.io.DataInputStream readEncodedHeader(java.io.DataInputStream,org.apache.commons.compress.archivers.sevenz.Archive,byte[]) -> a
    void readStreamsInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive) -> b
    void readPackInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive) -> c
    void readUnpackInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive) -> d
    void readSubStreamsInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive) -> e
    org.apache.commons.compress.archivers.sevenz.Folder readFolder(java.io.DataInput) -> b
    java.util.BitSet readAllOrBits(java.io.DataInput,int) -> a
    java.util.BitSet readBits(java.io.DataInput,int) -> b
    void readFilesInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive) -> f
    void calculateStreamMap(org.apache.commons.compress.archivers.sevenz.Archive) -> a
    void buildDecodingStream() -> a
    void drainPreviousEntry() -> b
    java.io.InputStream buildDecoderStack(org.apache.commons.compress.archivers.sevenz.Folder,long,int,org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry) -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long readUint64(java.io.DataInput) -> c
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.archivers.sevenz.SevenZMethod -> org.apache.commons.compress.archivers.sevenz.SevenZMethod:
    org.apache.commons.compress.archivers.sevenz.SevenZMethod COPY -> COPY
    org.apache.commons.compress.archivers.sevenz.SevenZMethod LZMA -> LZMA
    org.apache.commons.compress.archivers.sevenz.SevenZMethod LZMA2 -> LZMA2
    org.apache.commons.compress.archivers.sevenz.SevenZMethod DEFLATE -> DEFLATE
    org.apache.commons.compress.archivers.sevenz.SevenZMethod BZIP2 -> BZIP2
    org.apache.commons.compress.archivers.sevenz.SevenZMethod AES256SHA256 -> AES256SHA256
    org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_X86_FILTER -> BCJ_X86_FILTER
    org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_PPC_FILTER -> BCJ_PPC_FILTER
    org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_IA64_FILTER -> BCJ_IA64_FILTER
    org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_ARM_FILTER -> BCJ_ARM_FILTER
    org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_ARM_THUMB_FILTER -> BCJ_ARM_THUMB_FILTER
    org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_SPARC_FILTER -> BCJ_SPARC_FILTER
    org.apache.commons.compress.archivers.sevenz.SevenZMethod DELTA_FILTER -> DELTA_FILTER
    byte[] id -> a
    org.apache.commons.compress.archivers.sevenz.SevenZMethod[] $VALUES -> b
    org.apache.commons.compress.archivers.sevenz.SevenZMethod[] values() -> values
    org.apache.commons.compress.archivers.sevenz.SevenZMethod valueOf(java.lang.String) -> valueOf
    byte[] getId() -> a
    org.apache.commons.compress.archivers.sevenz.SevenZMethod byId(byte[]) -> a
org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration -> org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration:
    org.apache.commons.compress.archivers.sevenz.SevenZMethod method -> a
    java.lang.Object options -> b
    org.apache.commons.compress.archivers.sevenz.SevenZMethod getMethod() -> getMethod
    java.lang.Object getOptions() -> getOptions
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile -> org.apache.commons.compress.archivers.sevenz.SevenZOutputFile:
    java.io.RandomAccessFile file -> a
    java.util.List files -> b
    int numNonEmptyStreams -> c
    java.util.zip.CRC32 crc32 -> d
    java.util.zip.CRC32 compressedCrc32 -> e
    long fileBytesWritten -> f
    boolean finished -> g
    org.apache.commons.compress.utils.CountingOutputStream currentOutputStream -> h
    org.apache.commons.compress.utils.CountingOutputStream[] additionalCountingStreams -> i
    java.lang.Iterable contentMethods -> j
    java.util.Map additionalSizes -> k
    void setContentCompression(org.apache.commons.compress.archivers.sevenz.SevenZMethod) -> setContentCompression
    void setContentMethods(java.lang.Iterable) -> setContentMethods
    void close() -> close
    org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry createArchiveEntry(java.io.File,java.lang.String) -> createArchiveEntry
    void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) -> putArchiveEntry
    void closeArchiveEntry() -> closeArchiveEntry
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void finish() -> finish
    java.io.OutputStream getCurrentOutputStream() -> a
    org.apache.commons.compress.utils.CountingOutputStream setupFileOutputStream() -> b
    java.lang.Iterable getContentMethods(org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry) -> a
    void writeHeader(java.io.DataOutput) -> a
    void writeStreamsInfo(java.io.DataOutput) -> b
    void writePackInfo(java.io.DataOutput) -> c
    void writeUnpackInfo(java.io.DataOutput) -> d
    void writeFolder(java.io.DataOutput,org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry) -> a
    void writeSingleCodec(org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration,java.io.OutputStream) -> a
    void writeSubStreamsInfo(java.io.DataOutput) -> e
    void writeFilesInfo(java.io.DataOutput) -> f
    void writeFileEmptyStreams(java.io.DataOutput) -> g
    void writeFileEmptyFiles(java.io.DataOutput) -> h
    void writeFileAntiItems(java.io.DataOutput) -> i
    void writeFileNames(java.io.DataOutput) -> j
    void writeFileCTimes(java.io.DataOutput) -> k
    void writeFileATimes(java.io.DataOutput) -> l
    void writeFileMTimes(java.io.DataOutput) -> m
    void writeFileWindowsAttributes(java.io.DataOutput) -> n
    void writeUint64(java.io.DataOutput,long) -> a
    void writeBits(java.io.DataOutput,java.util.BitSet,int) -> a
    java.lang.Iterable reverse(java.lang.Iterable) -> a
    java.util.zip.CRC32 access$100(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile) -> a
    java.io.RandomAccessFile access$200(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile) -> b
    java.util.zip.CRC32 access$300(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile) -> c
    long access$408(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile) -> d
    long access$414(org.apache.commons.compress.archivers.sevenz.SevenZOutputFile,long) -> a
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1 -> org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$1:
    org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0 -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper -> org.apache.commons.compress.archivers.sevenz.SevenZOutputFile$OutputStreamWrapper:
    org.apache.commons.compress.archivers.sevenz.SevenZOutputFile this$0 -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.compress.archivers.sevenz.StartHeader -> org.apache.commons.compress.archivers.sevenz.StartHeader:
    long nextHeaderOffset -> a
    long nextHeaderSize -> b
    long nextHeaderCrc -> c
org.apache.commons.compress.archivers.sevenz.StreamMap -> org.apache.commons.compress.archivers.sevenz.StreamMap:
    int[] folderFirstPackStreamIndex -> a
    long[] packStreamOffsets -> b
    int[] folderFirstFileIndex -> c
    int[] fileFolderIndex -> d
org.apache.commons.compress.archivers.sevenz.SubStreamsInfo -> org.apache.commons.compress.archivers.sevenz.SubStreamsInfo:
    long[] unpackSizes -> a
    java.util.BitSet hasCrc -> b
    long[] crcs -> c
org.apache.commons.compress.archivers.tar.TarArchiveEntry -> org.apache.commons.compress.archivers.tar.TarArchiveEntry:
    java.lang.String name -> a
    int mode -> b
    int userId -> c
    int groupId -> d
    long size -> e
    long modTime -> f
    boolean checkSumOK -> g
    byte linkFlag -> h
    java.lang.String linkName -> i
    java.lang.String magic -> j
    java.lang.String version -> k
    java.lang.String userName -> l
    java.lang.String groupName -> m
    int devMajor -> n
    int devMinor -> o
    boolean isExtended -> p
    long realSize -> q
    java.io.File file -> r
    int MAX_NAMELEN -> MAX_NAMELEN
    int DEFAULT_DIR_MODE -> DEFAULT_DIR_MODE
    int DEFAULT_FILE_MODE -> DEFAULT_FILE_MODE
    int MILLIS_PER_SECOND -> MILLIS_PER_SECOND
    boolean equals(org.apache.commons.compress.archivers.tar.TarArchiveEntry) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isDescendent(org.apache.commons.compress.archivers.tar.TarArchiveEntry) -> isDescendent
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void setMode(int) -> setMode
    java.lang.String getLinkName() -> getLinkName
    void setLinkName(java.lang.String) -> setLinkName
    int getUserId() -> getUserId
    void setUserId(int) -> setUserId
    int getGroupId() -> getGroupId
    void setGroupId(int) -> setGroupId
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    void setIds(int,int) -> setIds
    void setNames(java.lang.String,java.lang.String) -> setNames
    void setModTime(long) -> setModTime
    void setModTime(java.util.Date) -> setModTime
    java.util.Date getModTime() -> getModTime
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    boolean isCheckSumOK() -> isCheckSumOK
    java.io.File getFile() -> getFile
    int getMode() -> getMode
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getDevMajor() -> getDevMajor
    void setDevMajor(int) -> setDevMajor
    int getDevMinor() -> getDevMinor
    void setDevMinor(int) -> setDevMinor
    boolean isExtended() -> isExtended
    long getRealSize() -> getRealSize
    boolean isGNUSparse() -> isGNUSparse
    boolean isGNULongLinkEntry() -> isGNULongLinkEntry
    boolean isGNULongNameEntry() -> isGNULongNameEntry
    boolean isPaxHeader() -> isPaxHeader
    boolean isGlobalPaxHeader() -> isGlobalPaxHeader
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    boolean isSymbolicLink() -> isSymbolicLink
    boolean isLink() -> isLink
    boolean isCharacterDevice() -> isCharacterDevice
    boolean isBlockDevice() -> isBlockDevice
    boolean isFIFO() -> isFIFO
    org.apache.commons.compress.archivers.tar.TarArchiveEntry[] getDirectoryEntries() -> getDirectoryEntries
    void writeEntryHeader(byte[]) -> writeEntryHeader
    void writeEntryHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean) -> writeEntryHeader
    int writeEntryHeaderField(long,byte[],int,int,boolean) -> a
    void parseTarHeader(byte[]) -> parseTarHeader
    void parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding) -> parseTarHeader
    void parseTarHeader(byte[],org.apache.commons.compress.archivers.zip.ZipEncoding,boolean) -> a
    java.lang.String normalizeFileName(java.lang.String,boolean) -> a
    int evaluateType(byte[]) -> a
org.apache.commons.compress.archivers.tar.TarArchiveInputStream -> org.apache.commons.compress.archivers.tar.TarArchiveInputStream:
    byte[] SMALL_BUF -> a
    int recordSize -> b
    int blockSize -> c
    boolean hasHitEOF -> d
    long entrySize -> e
    long entryOffset -> f
    java.io.InputStream is -> g
    org.apache.commons.compress.archivers.tar.TarArchiveEntry currEntry -> h
    org.apache.commons.compress.archivers.zip.ZipEncoding encoding -> i
    void close() -> close
    int getRecordSize() -> getRecordSize
    int available() -> available
    long skip(long) -> skip
    void reset() -> reset
    org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry() -> getNextTarEntry
    void skipRecordPadding() -> c
    byte[] getLongNameData() -> a
    byte[] getRecord() -> d
    boolean isEOFRecord(byte[]) -> a
    byte[] readRecord() -> b
    void paxHeaders() -> e
    java.util.Map parsePaxHeaders(java.io.InputStream) -> a
    void applyPaxHeadersToCurrentEntry(java.util.Map) -> a
    void readGNUSparse() -> f
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
    void tryToConsumeSecondEOFRecord() -> g
    int read(byte[],int,int) -> read
    boolean canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry) -> canReadEntryData
    org.apache.commons.compress.archivers.tar.TarArchiveEntry getCurrentEntry() -> getCurrentEntry
    void consumeRemainderOfLastBlock() -> h
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream -> org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:
    int LONGFILE_ERROR -> LONGFILE_ERROR
    int LONGFILE_TRUNCATE -> LONGFILE_TRUNCATE
    int LONGFILE_GNU -> LONGFILE_GNU
    int LONGFILE_POSIX -> LONGFILE_POSIX
    int BIGNUMBER_ERROR -> BIGNUMBER_ERROR
    int BIGNUMBER_STAR -> BIGNUMBER_STAR
    int BIGNUMBER_POSIX -> BIGNUMBER_POSIX
    long currSize -> a
    java.lang.String currName -> b
    long currBytes -> c
    byte[] recordBuf -> d
    int assemLen -> e
    byte[] assemBuf -> f
    int longFileMode -> g
    int bigNumberMode -> h
    int recordsWritten -> i
    int recordsPerBlock -> j
    int recordSize -> k
    boolean closed -> l
    boolean haveUnclosedEntry -> m
    boolean finished -> n
    java.io.OutputStream out -> o
    org.apache.commons.compress.archivers.zip.ZipEncoding encoding -> p
    boolean addPaxHeadersForNonAsciiNames -> q
    org.apache.commons.compress.archivers.zip.ZipEncoding ASCII -> r
    void setLongFileMode(int) -> setLongFileMode
    void setBigNumberMode(int) -> setBigNumberMode
    void setAddPaxHeadersForNonAsciiNames(boolean) -> setAddPaxHeadersForNonAsciiNames
    int getCount() -> getCount
    long getBytesWritten() -> getBytesWritten
    void finish() -> finish
    void close() -> close
    int getRecordSize() -> getRecordSize
    void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) -> putArchiveEntry
    void closeArchiveEntry() -> closeArchiveEntry
    void write(byte[],int,int) -> write
    void writePaxHeaders(java.lang.String,java.util.Map) -> a
    java.lang.String stripTo7Bits(java.lang.String) -> a
    boolean shouldBeReplaced(char) -> a
    void writeEOFRecord() -> a
    void flush() -> flush
    org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File,java.lang.String) -> createArchiveEntry
    void writeRecord(byte[]) -> a
    void writeRecord(byte[],int) -> a
    void padAsNeeded() -> b
    void addPaxHeadersForBigNumbers(java.util.Map,org.apache.commons.compress.archivers.tar.TarArchiveEntry) -> a
    void addPaxHeaderForBigNumber(java.util.Map,java.lang.String,long,long) -> a
    void failForBigNumbers(org.apache.commons.compress.archivers.tar.TarArchiveEntry) -> a
    void failForBigNumber(java.lang.String,long,long) -> a
    boolean handleLongName(java.lang.String,java.util.Map,java.lang.String,byte,java.lang.String) -> a
org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry -> org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry:
    boolean isExtended -> a
    boolean isExtended() -> isExtended
org.apache.commons.compress.archivers.tar.TarConstants -> org.apache.commons.compress.archivers.tar.TarConstants:
    int DEFAULT_RCDSIZE -> DEFAULT_RCDSIZE
    int DEFAULT_BLKSIZE -> DEFAULT_BLKSIZE
    int FORMAT_OLDGNU -> FORMAT_OLDGNU
    int FORMAT_POSIX -> FORMAT_POSIX
    int NAMELEN -> NAMELEN
    int MODELEN -> MODELEN
    int UIDLEN -> UIDLEN
    int GIDLEN -> GIDLEN
    long MAXID -> MAXID
    int CHKSUMLEN -> CHKSUMLEN
    int CHKSUM_OFFSET -> CHKSUM_OFFSET
    int SIZELEN -> SIZELEN
    long MAXSIZE -> MAXSIZE
    int MAGIC_OFFSET -> MAGIC_OFFSET
    int MAGICLEN -> MAGICLEN
    int VERSION_OFFSET -> VERSION_OFFSET
    int VERSIONLEN -> VERSIONLEN
    int MODTIMELEN -> MODTIMELEN
    int UNAMELEN -> UNAMELEN
    int GNAMELEN -> GNAMELEN
    int DEVLEN -> DEVLEN
    int PREFIXLEN -> PREFIXLEN
    int ATIMELEN_GNU -> ATIMELEN_GNU
    int CTIMELEN_GNU -> CTIMELEN_GNU
    int OFFSETLEN_GNU -> OFFSETLEN_GNU
    int LONGNAMESLEN_GNU -> LONGNAMESLEN_GNU
    int PAD2LEN_GNU -> PAD2LEN_GNU
    int SPARSELEN_GNU -> SPARSELEN_GNU
    int ISEXTENDEDLEN_GNU -> ISEXTENDEDLEN_GNU
    int REALSIZELEN_GNU -> REALSIZELEN_GNU
    int SPARSELEN_GNU_SPARSE -> SPARSELEN_GNU_SPARSE
    int ISEXTENDEDLEN_GNU_SPARSE -> ISEXTENDEDLEN_GNU_SPARSE
    byte LF_OLDNORM -> LF_OLDNORM
    byte LF_NORMAL -> LF_NORMAL
    byte LF_LINK -> LF_LINK
    byte LF_SYMLINK -> LF_SYMLINK
    byte LF_CHR -> LF_CHR
    byte LF_BLK -> LF_BLK
    byte LF_DIR -> LF_DIR
    byte LF_FIFO -> LF_FIFO
    byte LF_CONTIG -> LF_CONTIG
    byte LF_GNUTYPE_LONGLINK -> LF_GNUTYPE_LONGLINK
    byte LF_GNUTYPE_LONGNAME -> LF_GNUTYPE_LONGNAME
    byte LF_GNUTYPE_SPARSE -> LF_GNUTYPE_SPARSE
    byte LF_PAX_EXTENDED_HEADER_LC -> LF_PAX_EXTENDED_HEADER_LC
    byte LF_PAX_EXTENDED_HEADER_UC -> LF_PAX_EXTENDED_HEADER_UC
    byte LF_PAX_GLOBAL_EXTENDED_HEADER -> LF_PAX_GLOBAL_EXTENDED_HEADER
    java.lang.String MAGIC_POSIX -> MAGIC_POSIX
    java.lang.String VERSION_POSIX -> VERSION_POSIX
    java.lang.String MAGIC_GNU -> MAGIC_GNU
    java.lang.String VERSION_GNU_SPACE -> VERSION_GNU_SPACE
    java.lang.String VERSION_GNU_ZERO -> VERSION_GNU_ZERO
    java.lang.String MAGIC_ANT -> MAGIC_ANT
    java.lang.String VERSION_ANT -> VERSION_ANT
    java.lang.String GNU_LONGLINK -> GNU_LONGLINK
org.apache.commons.compress.archivers.tar.TarUtils -> org.apache.commons.compress.archivers.tar.TarUtils:
    org.apache.commons.compress.archivers.zip.ZipEncoding DEFAULT_ENCODING -> a
    org.apache.commons.compress.archivers.zip.ZipEncoding FALLBACK_ENCODING -> b
    long parseOctal(byte[],int,int) -> parseOctal
    long parseOctalOrBinary(byte[],int,int) -> parseOctalOrBinary
    long parseBinaryLong(byte[],int,int,boolean) -> a
    long parseBinaryBigInteger(byte[],int,int,boolean) -> b
    boolean parseBoolean(byte[],int) -> parseBoolean
    java.lang.String exceptionMessage(byte[],int,int,int,byte) -> a
    java.lang.String parseName(byte[],int,int) -> parseName
    java.lang.String parseName(byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding) -> parseName
    int formatNameBytes(java.lang.String,byte[],int,int) -> formatNameBytes
    int formatNameBytes(java.lang.String,byte[],int,int,org.apache.commons.compress.archivers.zip.ZipEncoding) -> formatNameBytes
    void formatUnsignedOctalString(long,byte[],int,int) -> formatUnsignedOctalString
    int formatOctalBytes(long,byte[],int,int) -> formatOctalBytes
    int formatLongOctalBytes(long,byte[],int,int) -> formatLongOctalBytes
    int formatLongOctalOrBinaryBytes(long,byte[],int,int) -> formatLongOctalOrBinaryBytes
    void formatLongBinary(long,byte[],int,int,boolean) -> a
    void formatBigIntegerBinary(long,byte[],int,int,boolean) -> b
    int formatCheckSumOctalBytes(long,byte[],int,int) -> formatCheckSumOctalBytes
    long computeCheckSum(byte[]) -> computeCheckSum
    boolean verifyCheckSum(byte[]) -> verifyCheckSum
org.apache.commons.compress.archivers.tar.TarUtils$1 -> org.apache.commons.compress.archivers.tar.TarUtils$1:
    boolean canEncode(java.lang.String) -> canEncode
    java.nio.ByteBuffer encode(java.lang.String) -> encode
    java.lang.String decode(byte[]) -> decode
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField -> org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField:
    long nameCRC32 -> a
    byte[] unicodeName -> b
    byte[] data -> c
    void assembleData() -> a
    long getNameCRC32() -> getNameCRC32
    void setNameCRC32(long) -> setNameCRC32
    byte[] getUnicodeName() -> getUnicodeName
    void setUnicodeName(byte[]) -> setUnicodeName
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
org.apache.commons.compress.archivers.zip.AsiExtraField -> org.apache.commons.compress.archivers.zip.AsiExtraField:
    org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID -> a
    int mode -> b
    int uid -> c
    int gid -> d
    java.lang.String link -> e
    boolean dirFlag -> f
    java.util.zip.CRC32 crc -> g
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void setUserId(int) -> setUserId
    int getUserId() -> getUserId
    void setGroupId(int) -> setGroupId
    int getGroupId() -> getGroupId
    void setLinkedFile(java.lang.String) -> setLinkedFile
    java.lang.String getLinkedFile() -> getLinkedFile
    boolean isLink() -> isLink
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setDirectory(boolean) -> setDirectory
    boolean isDirectory() -> isDirectory
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
    int getMode(int) -> a
    java.lang.Object clone() -> clone
org.apache.commons.compress.archivers.zip.BinaryTree -> org.apache.commons.compress.archivers.zip.BinaryTree:
    int[] tree -> a
    void addLeaf(int,int,int,int) -> addLeaf
    int read(org.apache.commons.compress.archivers.zip.BitStream) -> read
    org.apache.commons.compress.archivers.zip.BinaryTree decode(java.io.InputStream,int) -> a
org.apache.commons.compress.archivers.zip.BitStream -> org.apache.commons.compress.archivers.zip.BitStream:
    java.io.InputStream in -> a
    long bitCache -> b
    int bitCacheSize -> c
    int[] MASKS -> d
    boolean fillCache() -> b
    int nextBit() -> a
    int nextBits(int) -> a
org.apache.commons.compress.archivers.zip.CircularBuffer -> org.apache.commons.compress.archivers.zip.CircularBuffer:
    int size -> a
    byte[] buffer -> b
    int readIndex -> c
    int writeIndex -> d
    boolean available() -> available
    void put(int) -> put
    int get() -> get
    void copy(int,int) -> copy
org.apache.commons.compress.archivers.zip.ExplodingInputStream -> org.apache.commons.compress.archivers.zip.ExplodingInputStream:
    java.io.InputStream in -> a
    org.apache.commons.compress.archivers.zip.BitStream bits -> b
    int dictionarySize -> c
    int numberOfTrees -> d
    int minimumMatchLength -> e
    org.apache.commons.compress.archivers.zip.BinaryTree literalTree -> f
    org.apache.commons.compress.archivers.zip.BinaryTree lengthTree -> g
    org.apache.commons.compress.archivers.zip.BinaryTree distanceTree -> h
    org.apache.commons.compress.archivers.zip.CircularBuffer buffer -> i
    void init() -> a
    int read() -> read
    void fillBuffer() -> b
org.apache.commons.compress.archivers.zip.ExtraFieldUtils -> org.apache.commons.compress.archivers.zip.ExtraFieldUtils:
    java.util.Map implementations -> a
    void register(java.lang.Class) -> register
    org.apache.commons.compress.archivers.zip.ZipExtraField createExtraField(org.apache.commons.compress.archivers.zip.ZipShort) -> createExtraField
    org.apache.commons.compress.archivers.zip.ZipExtraField[] parse(byte[]) -> parse
    org.apache.commons.compress.archivers.zip.ZipExtraField[] parse(byte[],boolean) -> parse
    org.apache.commons.compress.archivers.zip.ZipExtraField[] parse(byte[],boolean,org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField) -> parse
    byte[] mergeLocalFileDataData(org.apache.commons.compress.archivers.zip.ZipExtraField[]) -> mergeLocalFileDataData
    byte[] mergeCentralDirectoryData(org.apache.commons.compress.archivers.zip.ZipExtraField[]) -> mergeCentralDirectoryData
org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField -> org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField:
    int THROW_KEY -> THROW_KEY
    int SKIP_KEY -> SKIP_KEY
    int READ_KEY -> READ_KEY
    org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField THROW -> THROW
    org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField SKIP -> SKIP
    org.apache.commons.compress.archivers.zip.ExtraFieldUtils$UnparseableExtraField READ -> READ
    int key -> a
    int getKey() -> getKey
org.apache.commons.compress.archivers.zip.FallbackZipEncoding -> org.apache.commons.compress.archivers.zip.FallbackZipEncoding:
    java.lang.String charsetName -> a
    boolean canEncode(java.lang.String) -> canEncode
    java.nio.ByteBuffer encode(java.lang.String) -> encode
    java.lang.String decode(byte[]) -> decode
org.apache.commons.compress.archivers.zip.GeneralPurposeBit -> org.apache.commons.compress.archivers.zip.GeneralPurposeBit:
    int UFT8_NAMES_FLAG -> UFT8_NAMES_FLAG
    boolean languageEncodingFlag -> a
    boolean dataDescriptorFlag -> b
    boolean encryptionFlag -> c
    boolean strongEncryptionFlag -> d
    int slidingDictionarySize -> e
    int numberOfShannonFanoTrees -> f
    boolean usesUTF8ForNames() -> usesUTF8ForNames
    void useUTF8ForNames(boolean) -> useUTF8ForNames
    boolean usesDataDescriptor() -> usesDataDescriptor
    void useDataDescriptor(boolean) -> useDataDescriptor
    boolean usesEncryption() -> usesEncryption
    void useEncryption(boolean) -> useEncryption
    boolean usesStrongEncryption() -> usesStrongEncryption
    void useStrongEncryption(boolean) -> useStrongEncryption
    int getSlidingDictionarySize() -> a
    int getNumberOfShannonFanoTrees() -> b
    byte[] encode() -> encode
    org.apache.commons.compress.archivers.zip.GeneralPurposeBit parse(byte[],int) -> parse
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.compress.archivers.zip.JarMarker -> org.apache.commons.compress.archivers.zip.JarMarker:
    org.apache.commons.compress.archivers.zip.ZipShort ID -> a
    org.apache.commons.compress.archivers.zip.ZipShort NULL -> b
    byte[] NO_BYTES -> c
    org.apache.commons.compress.archivers.zip.JarMarker DEFAULT -> d
    org.apache.commons.compress.archivers.zip.JarMarker getInstance() -> getInstance
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
org.apache.commons.compress.archivers.zip.NioZipEncoding -> org.apache.commons.compress.archivers.zip.NioZipEncoding:
    java.nio.charset.Charset charset -> a
    boolean canEncode(java.lang.String) -> canEncode
    java.nio.ByteBuffer encode(java.lang.String) -> encode
    java.lang.String decode(byte[]) -> decode
org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding -> org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding:
    char[] highChars -> a
    java.util.List reverseMapping -> b
    char decodeByte(byte) -> decodeByte
    boolean canEncodeChar(char) -> canEncodeChar
    boolean pushEncodedChar(java.nio.ByteBuffer,char) -> pushEncodedChar
    org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar encodeHighChar(char) -> a
    boolean canEncode(java.lang.String) -> canEncode
    java.nio.ByteBuffer encode(java.lang.String) -> encode
    java.lang.String decode(byte[]) -> decode
org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar -> org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar:
    char unicode -> unicode
    byte code -> code
    int compareTo(org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar) -> compareTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField -> org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField:
    org.apache.commons.compress.archivers.zip.ZipShort UCOM_ID -> UCOM_ID
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
org.apache.commons.compress.archivers.zip.UnicodePathExtraField -> org.apache.commons.compress.archivers.zip.UnicodePathExtraField:
    org.apache.commons.compress.archivers.zip.ZipShort UPATH_ID -> UPATH_ID
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
org.apache.commons.compress.archivers.zip.UnixStat -> org.apache.commons.compress.archivers.zip.UnixStat:
    int PERM_MASK -> PERM_MASK
    int LINK_FLAG -> LINK_FLAG
    int FILE_FLAG -> FILE_FLAG
    int DIR_FLAG -> DIR_FLAG
    int DEFAULT_LINK_PERM -> DEFAULT_LINK_PERM
    int DEFAULT_DIR_PERM -> DEFAULT_DIR_PERM
    int DEFAULT_FILE_PERM -> DEFAULT_FILE_PERM
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData -> org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData:
    org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID -> a
    byte[] localFileData -> b
    byte[] centralDirectoryData -> c
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField -> org.apache.commons.compress.archivers.zip.UnrecognizedExtraField:
    org.apache.commons.compress.archivers.zip.ZipShort headerId -> a
    byte[] localData -> b
    byte[] centralData -> c
    void setHeaderId(org.apache.commons.compress.archivers.zip.ZipShort) -> setHeaderId
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    void setLocalFileDataData(byte[]) -> setLocalFileDataData
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    void setCentralDirectoryData(byte[]) -> setCentralDirectoryData
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream -> org.apache.commons.compress.archivers.zip.UnshrinkingInputStream:
    boolean[] isUsed -> j
    int addEntry(int,byte) -> a
    void partialClear() -> d
    int decompressNextSymbol() -> a
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException -> org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException:
    org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason -> a
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry -> b
    org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature getFeature() -> getFeature
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry() -> getEntry
org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature -> org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature:
    org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature ENCRYPTION -> ENCRYPTION
    org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature METHOD -> METHOD
    org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature DATA_DESCRIPTOR -> DATA_DESCRIPTOR
    org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature SPLITTING -> SPLITTING
    java.lang.String name -> a
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp -> org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp:
    org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID -> a
    byte MODIFY_TIME_BIT -> MODIFY_TIME_BIT
    byte ACCESS_TIME_BIT -> ACCESS_TIME_BIT
    byte CREATE_TIME_BIT -> CREATE_TIME_BIT
    byte flags -> b
    boolean bit0_modifyTimePresent -> c
    boolean bit1_accessTimePresent -> d
    boolean bit2_createTimePresent -> e
    org.apache.commons.compress.archivers.zip.ZipLong modifyTime -> f
    org.apache.commons.compress.archivers.zip.ZipLong accessTime -> g
    org.apache.commons.compress.archivers.zip.ZipLong createTime -> h
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
    void reset() -> a
    void setFlags(byte) -> setFlags
    byte getFlags() -> getFlags
    boolean isBit0_modifyTimePresent() -> isBit0_modifyTimePresent
    boolean isBit1_accessTimePresent() -> isBit1_accessTimePresent
    boolean isBit2_createTimePresent() -> isBit2_createTimePresent
    org.apache.commons.compress.archivers.zip.ZipLong getModifyTime() -> getModifyTime
    org.apache.commons.compress.archivers.zip.ZipLong getAccessTime() -> getAccessTime
    org.apache.commons.compress.archivers.zip.ZipLong getCreateTime() -> getCreateTime
    java.util.Date getModifyJavaTime() -> getModifyJavaTime
    java.util.Date getAccessJavaTime() -> getAccessJavaTime
    java.util.Date getCreateJavaTime() -> getCreateJavaTime
    void setModifyTime(org.apache.commons.compress.archivers.zip.ZipLong) -> setModifyTime
    void setAccessTime(org.apache.commons.compress.archivers.zip.ZipLong) -> setAccessTime
    void setCreateTime(org.apache.commons.compress.archivers.zip.ZipLong) -> setCreateTime
    void setModifyJavaTime(java.util.Date) -> setModifyJavaTime
    void setAccessJavaTime(java.util.Date) -> setAccessJavaTime
    void setCreateJavaTime(java.util.Date) -> setCreateJavaTime
    org.apache.commons.compress.archivers.zip.ZipLong dateToZipLong(java.util.Date) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.compress.archivers.zip.X7875_NewUnix -> org.apache.commons.compress.archivers.zip.X7875_NewUnix:
    org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID -> a
    java.math.BigInteger ONE_THOUSAND -> b
    int version -> c
    java.math.BigInteger uid -> d
    java.math.BigInteger gid -> e
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    long getUID() -> getUID
    long getGID() -> getGID
    void setUID(long) -> setUID
    void setGID(long) -> setGID
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
    void reset() -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    byte[] trimLeadingZeroesForceMinLength(byte[]) -> a
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField -> org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField:
    org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID -> a
    byte[] EMPTY -> b
    org.apache.commons.compress.archivers.zip.ZipEightByteInteger size -> c
    org.apache.commons.compress.archivers.zip.ZipEightByteInteger compressedSize -> d
    org.apache.commons.compress.archivers.zip.ZipEightByteInteger relativeHeaderOffset -> e
    org.apache.commons.compress.archivers.zip.ZipLong diskStart -> f
    byte[] rawCentralDirectoryData -> g
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
    void reparseCentralDirectoryData(boolean,boolean,boolean,boolean) -> reparseCentralDirectoryData
    org.apache.commons.compress.archivers.zip.ZipEightByteInteger getSize() -> getSize
    void setSize(org.apache.commons.compress.archivers.zip.ZipEightByteInteger) -> setSize
    org.apache.commons.compress.archivers.zip.ZipEightByteInteger getCompressedSize() -> getCompressedSize
    void setCompressedSize(org.apache.commons.compress.archivers.zip.ZipEightByteInteger) -> setCompressedSize
    org.apache.commons.compress.archivers.zip.ZipEightByteInteger getRelativeHeaderOffset() -> getRelativeHeaderOffset
    void setRelativeHeaderOffset(org.apache.commons.compress.archivers.zip.ZipEightByteInteger) -> setRelativeHeaderOffset
    org.apache.commons.compress.archivers.zip.ZipLong getDiskStartNumber() -> getDiskStartNumber
    void setDiskStartNumber(org.apache.commons.compress.archivers.zip.ZipLong) -> setDiskStartNumber
    int addSizes(byte[]) -> a
org.apache.commons.compress.archivers.zip.Zip64Mode -> org.apache.commons.compress.archivers.zip.Zip64Mode:
    org.apache.commons.compress.archivers.zip.Zip64Mode Always -> Always
    org.apache.commons.compress.archivers.zip.Zip64Mode Never -> Never
    org.apache.commons.compress.archivers.zip.Zip64Mode AsNeeded -> AsNeeded
    org.apache.commons.compress.archivers.zip.Zip64Mode[] $VALUES -> a
    org.apache.commons.compress.archivers.zip.Zip64Mode[] values() -> values
    org.apache.commons.compress.archivers.zip.Zip64Mode valueOf(java.lang.String) -> valueOf
org.apache.commons.compress.archivers.zip.Zip64RequiredException -> org.apache.commons.compress.archivers.zip.Zip64RequiredException:
    java.lang.String getEntryTooBigMessage(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> a
org.apache.commons.compress.archivers.zip.ZipArchiveEntry -> org.apache.commons.compress.archivers.zip.ZipArchiveEntry:
    int PLATFORM_UNIX -> PLATFORM_UNIX
    int PLATFORM_FAT -> PLATFORM_FAT
    byte[] EMPTY -> a
    int method -> b
    long size -> c
    int internalAttributes -> d
    int platform -> e
    long externalAttributes -> f
    java.util.LinkedHashMap extraFields -> g
    org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData unparseableExtra -> h
    java.lang.String name -> i
    byte[] rawName -> j
    org.apache.commons.compress.archivers.zip.GeneralPurposeBit gpb -> k
    java.lang.Object clone() -> clone
    int getMethod() -> getMethod
    void setMethod(int) -> setMethod
    int getInternalAttributes() -> getInternalAttributes
    void setInternalAttributes(int) -> setInternalAttributes
    long getExternalAttributes() -> getExternalAttributes
    void setExternalAttributes(long) -> setExternalAttributes
    void setUnixMode(int) -> setUnixMode
    int getUnixMode() -> getUnixMode
    boolean isUnixSymlink() -> isUnixSymlink
    int getPlatform() -> getPlatform
    void setPlatform(int) -> a
    void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[]) -> setExtraFields
    org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields() -> getExtraFields
    org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(boolean) -> getExtraFields
    void addExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField) -> addExtraField
    void addAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField) -> addAsFirstExtraField
    void removeExtraField(org.apache.commons.compress.archivers.zip.ZipShort) -> removeExtraField
    void removeUnparseableExtraFieldData() -> removeUnparseableExtraFieldData
    org.apache.commons.compress.archivers.zip.ZipExtraField getExtraField(org.apache.commons.compress.archivers.zip.ZipShort) -> getExtraField
    org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData getUnparseableExtraFieldData() -> getUnparseableExtraFieldData
    void setExtra(byte[]) -> setExtra
    void setExtra() -> a
    void setCentralDirectoryExtra(byte[]) -> setCentralDirectoryExtra
    byte[] getLocalFileDataExtra() -> getLocalFileDataExtra
    byte[] getCentralDirectoryExtra() -> getCentralDirectoryExtra
    java.lang.String getName() -> getName
    boolean isDirectory() -> isDirectory
    void setName(java.lang.String) -> a
    long getSize() -> getSize
    void setSize(long) -> setSize
    void setName(java.lang.String,byte[]) -> a
    byte[] getRawName() -> getRawName
    int hashCode() -> hashCode
    org.apache.commons.compress.archivers.zip.GeneralPurposeBit getGeneralPurposeBit() -> getGeneralPurposeBit
    void setGeneralPurposeBit(org.apache.commons.compress.archivers.zip.GeneralPurposeBit) -> setGeneralPurposeBit
    void mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[],boolean) -> a
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    boolean equals(java.lang.Object) -> equals
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream -> org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:
    org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding -> a
    boolean useUnicodeExtraFields -> b
    java.io.InputStream in -> c
    java.util.zip.Inflater inf -> d
    java.nio.ByteBuffer buf -> e
    org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry current -> f
    boolean closed -> g
    boolean hitCentralDirectory -> h
    java.io.ByteArrayInputStream lastStoredEntry -> i
    boolean allowStoredEntriesWithDataDescriptor -> j
    byte[] LFH_BUF -> k
    byte[] SKIP_BUF -> l
    byte[] SHORT_BUF -> m
    byte[] WORD_BUF -> n
    byte[] TWO_DWORD_BUF -> o
    int entriesRead -> p
    byte[] LFH -> q
    byte[] CFH -> r
    byte[] DD -> s
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry() -> getNextZipEntry
    void readFirstLocalFileHeader(byte[]) -> a
    void processZip64Extra(org.apache.commons.compress.archivers.zip.ZipLong,org.apache.commons.compress.archivers.zip.ZipLong) -> a
    org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() -> getNextEntry
    boolean canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry) -> canReadEntryData
    int read(byte[],int,int) -> read
    int readStored(byte[],int,int) -> a
    int readDeflated(byte[],int,int) -> b
    int readFromInflater(byte[],int,int) -> c
    void close() -> close
    long skip(long) -> skip
    boolean matches(byte[],int) -> matches
    boolean checksig(byte[],byte[]) -> a
    void closeEntry() -> a
    void drainCurrentEntryData() -> b
    long getBytesInflated() -> c
    int fill() -> d
    void readFully(byte[]) -> b
    void readDataDescriptor() -> e
    boolean supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> a
    void readStoredEntry() -> f
    boolean bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int) -> a
    int cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int) -> b
    void pushback(byte[],int,int) -> d
    void skipRemainderOfArchive() -> g
    void findEocdRecord() -> h
    void realSkip(long) -> c
    int readOneByte() -> i
    boolean isFirstByteOfEocdSig(int) -> b
    void access$800(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,int) -> a
    org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry access$900(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream) -> a
    void access$1000(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream,int) -> b
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$1 -> org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$1:
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream -> org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream:
    java.io.InputStream in -> b
    long max -> c
    long pos -> d
    org.apache.commons.compress.archivers.zip.ZipArchiveInputStream this$0 -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry -> org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry:
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry -> a
    boolean hasDataDescriptor -> b
    boolean usesZip64 -> c
    long bytesRead -> d
    long bytesReadFromStream -> e
    java.util.zip.CRC32 crc -> f
    java.io.InputStream in -> g
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$100(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> a
    boolean access$202(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,boolean) -> a
    boolean access$200(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> b
    java.io.InputStream access$302(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,java.io.InputStream) -> a
    boolean access$402(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,boolean) -> b
    java.io.InputStream access$300(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> c
    java.util.zip.CRC32 access$500(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> d
    long access$600(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> e
    long access$714(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,long) -> a
    long access$614(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry,long) -> b
    long access$700(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> f
    boolean access$400(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> g
    long access$708(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry) -> h
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream -> org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:
    boolean finished -> a
    int DEFLATED -> DEFLATED
    int DEFAULT_COMPRESSION -> DEFAULT_COMPRESSION
    int STORED -> STORED
    int EFS_FLAG -> EFS_FLAG
    byte[] EMPTY -> i
    org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry entry -> j
    java.lang.String comment -> k
    int level -> l
    boolean hasCompressionLevelChanged -> m
    int method -> n
    java.util.List entries -> o
    java.util.zip.CRC32 crc -> p
    long written -> q
    long cdOffset -> r
    long cdLength -> s
    byte[] ZERO -> t
    byte[] LZERO -> u
    java.util.Map offsets -> v
    java.lang.String encoding -> w
    org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding -> x
    java.util.zip.Deflater def -> b
    byte[] buf -> y
    java.io.RandomAccessFile raf -> z
    java.io.OutputStream out -> A
    boolean useUTF8Flag -> B
    boolean fallbackToUTF8 -> C
    org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy createUnicodeExtraFields -> D
    boolean hasUsedZip64 -> E
    org.apache.commons.compress.archivers.zip.Zip64Mode zip64Mode -> F
    byte[] LFH_SIG -> c
    byte[] DD_SIG -> d
    byte[] CFH_SIG -> e
    byte[] EOCD_SIG -> f
    byte[] ZIP64_EOCD_SIG -> g
    byte[] ZIP64_EOCD_LOC_SIG -> h
    byte[] ONE -> G
    boolean isSeekable() -> isSeekable
    void setEncoding(java.lang.String) -> setEncoding
    java.lang.String getEncoding() -> getEncoding
    void setUseLanguageEncodingFlag(boolean) -> setUseLanguageEncodingFlag
    void setCreateUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy) -> setCreateUnicodeExtraFields
    void setFallbackToUTF8(boolean) -> setFallbackToUTF8
    void setUseZip64(org.apache.commons.compress.archivers.zip.Zip64Mode) -> setUseZip64
    void finish() -> finish
    void closeArchiveEntry() -> closeArchiveEntry
    void flushDeflater() -> e
    boolean handleSizesAndCrc(long,long,org.apache.commons.compress.archivers.zip.Zip64Mode) -> a
    void rewriteSizesAndCrc(boolean) -> a
    void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) -> putArchiveEntry
    void setDefaults(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> d
    void validateSizeInformation(org.apache.commons.compress.archivers.zip.Zip64Mode) -> a
    boolean shouldAddZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,org.apache.commons.compress.archivers.zip.Zip64Mode) -> a
    void setComment(java.lang.String) -> setComment
    void setLevel(int) -> setLevel
    void setMethod(int) -> setMethod
    boolean canWriteEntryData(org.apache.commons.compress.archivers.ArchiveEntry) -> canWriteEntryData
    void write(byte[],int,int) -> write
    void writeDeflated(byte[],int,int) -> b
    void close() -> close
    void flush() -> flush
    void deflate() -> a
    void writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> a
    void addUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,boolean,java.nio.ByteBuffer) -> a
    void writeDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> b
    void writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> c
    void handleZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,long,boolean) -> a
    void writeCentralDirectoryEnd() -> b
    void writeZip64CentralDirectory() -> c
    void writeOut(byte[]) -> a
    void writeOut(byte[],int,int) -> a
    void deflateUntilInputIsNeeded() -> f
    void writeVersionNeededToExtractAndGeneralPurposeBits(int,boolean,boolean) -> a
    org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File,java.lang.String) -> createArchiveEntry
    org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField getZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> e
    boolean hasZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> f
    org.apache.commons.compress.archivers.zip.Zip64Mode getEffectiveZip64Mode(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> g
    org.apache.commons.compress.archivers.zip.ZipEncoding getEntryEncoding(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> h
    java.nio.ByteBuffer getName(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> i
    void destroy() -> d
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$1 -> org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$1:
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry -> org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry:
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry -> a
    long localDataStart -> b
    long dataStart -> c
    long bytesRead -> d
    boolean causedUseOfZip64 -> e
    boolean hasWritten -> f
    boolean access$000(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry) -> a
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$100(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry) -> b
    long access$200(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry) -> c
    long access$300(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry) -> d
    long access$400(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry) -> e
    boolean access$500(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry) -> f
    boolean access$002(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry,boolean) -> a
    long access$314(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry,long) -> a
    long access$402(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry,long) -> b
    long access$202(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry,long) -> c
    boolean access$502(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry,boolean) -> b
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy -> org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy:
    org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy ALWAYS -> ALWAYS
    org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy NEVER -> NEVER
    org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy NOT_ENCODEABLE -> NOT_ENCODEABLE
    java.lang.String name -> a
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.zip.ZipConstants -> org.apache.commons.compress.archivers.zip.ZipConstants:
org.apache.commons.compress.archivers.zip.ZipEightByteInteger -> org.apache.commons.compress.archivers.zip.ZipEightByteInteger:
    java.math.BigInteger value -> a
    org.apache.commons.compress.archivers.zip.ZipEightByteInteger ZERO -> ZERO
    byte[] getBytes() -> getBytes
    long getLongValue() -> getLongValue
    java.math.BigInteger getValue() -> getValue
    byte[] getBytes(long) -> getBytes
    byte[] getBytes(java.math.BigInteger) -> getBytes
    long getLongValue(byte[],int) -> getLongValue
    java.math.BigInteger getValue(byte[],int) -> getValue
    long getLongValue(byte[]) -> getLongValue
    java.math.BigInteger getValue(byte[]) -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.zip.ZipEncoding -> org.apache.commons.compress.archivers.zip.ZipEncoding:
    boolean canEncode(java.lang.String) -> canEncode
    java.nio.ByteBuffer encode(java.lang.String) -> encode
    java.lang.String decode(byte[]) -> decode
org.apache.commons.compress.archivers.zip.ZipEncodingHelper -> org.apache.commons.compress.archivers.zip.ZipEncodingHelper:
    java.util.Map simpleEncodings -> b
    byte[] HEX_DIGITS -> c
    org.apache.commons.compress.archivers.zip.ZipEncoding UTF8_ZIP_ENCODING -> a
    java.nio.ByteBuffer growBuffer(java.nio.ByteBuffer,int) -> a
    void appendSurrogate(java.nio.ByteBuffer,char) -> a
    org.apache.commons.compress.archivers.zip.ZipEncoding getZipEncoding(java.lang.String) -> getZipEncoding
    boolean isUTF8(java.lang.String) -> a
org.apache.commons.compress.archivers.zip.ZipEncodingHelper$SimpleEncodingHolder -> org.apache.commons.compress.archivers.zip.ZipEncodingHelper$SimpleEncodingHolder:
    char[] highChars -> a
    org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding encoding -> b
    org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding getEncoding() -> getEncoding
org.apache.commons.compress.archivers.zip.ZipExtraField -> org.apache.commons.compress.archivers.zip.ZipExtraField:
    org.apache.commons.compress.archivers.zip.ZipShort getHeaderId() -> getHeaderId
    org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength() -> getLocalFileDataLength
    org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength() -> getCentralDirectoryLength
    byte[] getLocalFileDataData() -> getLocalFileDataData
    byte[] getCentralDirectoryData() -> getCentralDirectoryData
    void parseFromLocalFileData(byte[],int,int) -> parseFromLocalFileData
    void parseFromCentralDirectoryData(byte[],int,int) -> parseFromCentralDirectoryData
org.apache.commons.compress.archivers.zip.ZipFile -> org.apache.commons.compress.archivers.zip.ZipFile:
    java.util.List entries -> a
    java.util.Map nameMap -> b
    java.lang.String encoding -> c
    org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding -> d
    java.lang.String archiveName -> e
    java.io.RandomAccessFile archive -> f
    boolean useUnicodeExtraFields -> g
    boolean closed -> h
    byte[] DWORD_BUF -> i
    byte[] WORD_BUF -> j
    byte[] CFH_BUF -> k
    byte[] SHORT_BUF -> l
    long CFH_SIG -> m
    java.util.Comparator OFFSET_COMPARATOR -> n
    java.lang.String getEncoding() -> getEncoding
    void close() -> close
    void closeQuietly(org.apache.commons.compress.archivers.zip.ZipFile) -> closeQuietly
    java.util.Enumeration getEntries() -> getEntries
    java.util.Enumeration getEntriesInPhysicalOrder() -> getEntriesInPhysicalOrder
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry(java.lang.String) -> getEntry
    java.lang.Iterable getEntries(java.lang.String) -> getEntries
    java.lang.Iterable getEntriesInPhysicalOrder(java.lang.String) -> getEntriesInPhysicalOrder
    boolean canReadEntryData(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> canReadEntryData
    java.io.InputStream getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> getInputStream
    java.lang.String getUnixSymlink(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> getUnixSymlink
    void finalize() -> finalize
    java.util.Map populateFromCentralDirectory() -> a
    void readCentralDirectoryEntry(java.util.Map) -> a
    void setSizesAndOffsetFromZip64Extra(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry,int) -> a
    void positionAtCentralDirectory() -> b
    void positionAtCentralDirectory64() -> c
    void positionAtCentralDirectory32() -> d
    void positionAtEndOfCentralDirectoryRecord() -> e
    boolean tryToLocateSignature(long,long,byte[]) -> a
    void skipBytes(int) -> a
    void resolveLocalFileHeaderData(java.util.Map) -> b
    boolean startsWithLocalFileHeader() -> f
    java.io.RandomAccessFile access$600(org.apache.commons.compress.archivers.zip.ZipFile) -> a
org.apache.commons.compress.archivers.zip.ZipFile$1 -> org.apache.commons.compress.archivers.zip.ZipFile$1:
    java.util.zip.Inflater val$inflater -> a
    org.apache.commons.compress.archivers.zip.ZipFile this$0 -> b
    void close() -> close
org.apache.commons.compress.archivers.zip.ZipFile$2 -> org.apache.commons.compress.archivers.zip.ZipFile$2:
    org.apache.commons.compress.archivers.zip.ZipFile this$0 -> a
    int compare(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.compress.archivers.zip.ZipFile$3 -> org.apache.commons.compress.archivers.zip.ZipFile$3:
    int[] $SwitchMap$org$apache$commons$compress$archivers$zip$ZipMethod -> a
org.apache.commons.compress.archivers.zip.ZipFile$BoundedInputStream -> org.apache.commons.compress.archivers.zip.ZipFile$BoundedInputStream:
    long remaining -> b
    long loc -> c
    boolean addDummyByte -> d
    org.apache.commons.compress.archivers.zip.ZipFile this$0 -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void addDummy() -> a
org.apache.commons.compress.archivers.zip.ZipFile$Entry -> org.apache.commons.compress.archivers.zip.ZipFile$Entry:
    org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry offsetEntry -> a
    org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry getOffsetEntry() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment -> org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment:
    byte[] name -> a
    byte[] comment -> b
    byte[] access$400(org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment) -> a
    byte[] access$500(org.apache.commons.compress.archivers.zip.ZipFile$NameAndComment) -> b
org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry -> org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry:
    long headerOffset -> a
    long dataOffset -> b
    long access$000(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry) -> a
    long access$202(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry,long) -> a
    long access$200(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry) -> b
    long access$002(org.apache.commons.compress.archivers.zip.ZipFile$OffsetEntry,long) -> b
org.apache.commons.compress.archivers.zip.ZipLong -> org.apache.commons.compress.archivers.zip.ZipLong:
    long value -> b
    org.apache.commons.compress.archivers.zip.ZipLong CFH_SIG -> CFH_SIG
    org.apache.commons.compress.archivers.zip.ZipLong LFH_SIG -> LFH_SIG
    org.apache.commons.compress.archivers.zip.ZipLong DD_SIG -> DD_SIG
    org.apache.commons.compress.archivers.zip.ZipLong ZIP64_MAGIC -> a
    org.apache.commons.compress.archivers.zip.ZipLong SINGLE_SEGMENT_SPLIT_MARKER -> SINGLE_SEGMENT_SPLIT_MARKER
    org.apache.commons.compress.archivers.zip.ZipLong AED_SIG -> AED_SIG
    byte[] getBytes() -> getBytes
    long getValue() -> getValue
    byte[] getBytes(long) -> getBytes
    long getValue(byte[],int) -> getValue
    long getValue(byte[]) -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.zip.ZipMethod -> org.apache.commons.compress.archivers.zip.ZipMethod:
    org.apache.commons.compress.archivers.zip.ZipMethod STORED -> STORED
    org.apache.commons.compress.archivers.zip.ZipMethod UNSHRINKING -> UNSHRINKING
    org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_1 -> EXPANDING_LEVEL_1
    org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_2 -> EXPANDING_LEVEL_2
    org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_3 -> EXPANDING_LEVEL_3
    org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_4 -> EXPANDING_LEVEL_4
    org.apache.commons.compress.archivers.zip.ZipMethod IMPLODING -> IMPLODING
    org.apache.commons.compress.archivers.zip.ZipMethod TOKENIZATION -> TOKENIZATION
    org.apache.commons.compress.archivers.zip.ZipMethod DEFLATED -> DEFLATED
    org.apache.commons.compress.archivers.zip.ZipMethod ENHANCED_DEFLATED -> ENHANCED_DEFLATED
    org.apache.commons.compress.archivers.zip.ZipMethod PKWARE_IMPLODING -> PKWARE_IMPLODING
    org.apache.commons.compress.archivers.zip.ZipMethod BZIP2 -> BZIP2
    org.apache.commons.compress.archivers.zip.ZipMethod LZMA -> LZMA
    org.apache.commons.compress.archivers.zip.ZipMethod JPEG -> JPEG
    org.apache.commons.compress.archivers.zip.ZipMethod WAVPACK -> WAVPACK
    org.apache.commons.compress.archivers.zip.ZipMethod PPMD -> PPMD
    org.apache.commons.compress.archivers.zip.ZipMethod AES_ENCRYPTED -> AES_ENCRYPTED
    org.apache.commons.compress.archivers.zip.ZipMethod UNKNOWN -> UNKNOWN
    int code -> a
    java.util.Map codeToEnum -> b
    org.apache.commons.compress.archivers.zip.ZipMethod[] $VALUES -> c
    org.apache.commons.compress.archivers.zip.ZipMethod[] values() -> values
    org.apache.commons.compress.archivers.zip.ZipMethod valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    org.apache.commons.compress.archivers.zip.ZipMethod getMethodByCode(int) -> getMethodByCode
org.apache.commons.compress.archivers.zip.ZipShort -> org.apache.commons.compress.archivers.zip.ZipShort:
    int value -> a
    byte[] getBytes() -> getBytes
    int getValue() -> getValue
    byte[] getBytes(int) -> getBytes
    int getValue(byte[],int) -> getValue
    int getValue(byte[]) -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.commons.compress.archivers.zip.ZipUtil -> org.apache.commons.compress.archivers.zip.ZipUtil:
    byte[] DOS_TIME_MIN -> a
    org.apache.commons.compress.archivers.zip.ZipLong toDosTime(java.util.Date) -> toDosTime
    byte[] toDosTime(long) -> toDosTime
    long adjustToLong(int) -> adjustToLong
    byte[] reverse(byte[]) -> reverse
    long bigToLong(java.math.BigInteger) -> a
    java.math.BigInteger longToBig(long) -> a
    int signedByteToUnsignedInt(byte) -> signedByteToUnsignedInt
    byte unsignedIntToSignedByte(int) -> unsignedIntToSignedByte
    java.util.Date fromDosTime(org.apache.commons.compress.archivers.zip.ZipLong) -> fromDosTime
    long dosToJavaTime(long) -> dosToJavaTime
    void setNameAndCommentFromExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntry,byte[],byte[]) -> a
    java.lang.String getUnicodeStringIfOriginalMatches(org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField,byte[]) -> a
    byte[] copy(byte[]) -> a
    boolean canHandleEntryData(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> a
    boolean supportsEncryptionOf(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> c
    boolean supportsMethodOf(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> d
    void checkRequestedFeatures(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) -> b
org.apache.commons.compress.changes.Change -> org.apache.commons.compress.changes.Change:
    java.lang.String targetFile -> a
    org.apache.commons.compress.archivers.ArchiveEntry entry -> b
    java.io.InputStream input -> c
    boolean replaceMode -> d
    int type -> e
    org.apache.commons.compress.archivers.ArchiveEntry getEntry() -> a
    java.io.InputStream getInput() -> b
    java.lang.String targetFile() -> c
    int type() -> d
    boolean isReplaceMode() -> e
org.apache.commons.compress.changes.ChangeSet -> org.apache.commons.compress.changes.ChangeSet:
    java.util.Set changes -> a
    void delete(java.lang.String) -> delete
    void deleteDir(java.lang.String) -> deleteDir
    void add(org.apache.commons.compress.archivers.ArchiveEntry,java.io.InputStream) -> add
    void add(org.apache.commons.compress.archivers.ArchiveEntry,java.io.InputStream,boolean) -> add
    void addAddition(org.apache.commons.compress.changes.Change) -> a
    void addDeletion(org.apache.commons.compress.changes.Change) -> b
    java.util.Set getChanges() -> a
org.apache.commons.compress.changes.ChangeSetPerformer -> org.apache.commons.compress.changes.ChangeSetPerformer:
    java.util.Set changes -> a
    org.apache.commons.compress.changes.ChangeSetResults perform(org.apache.commons.compress.archivers.ArchiveInputStream,org.apache.commons.compress.archivers.ArchiveOutputStream) -> perform
    org.apache.commons.compress.changes.ChangeSetResults perform(org.apache.commons.compress.archivers.zip.ZipFile,org.apache.commons.compress.archivers.ArchiveOutputStream) -> perform
    org.apache.commons.compress.changes.ChangeSetResults perform(org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveEntryIterator,org.apache.commons.compress.archivers.ArchiveOutputStream) -> a
    boolean isDeletedLater(java.util.Set,org.apache.commons.compress.archivers.ArchiveEntry) -> a
    void copyStream(java.io.InputStream,org.apache.commons.compress.archivers.ArchiveOutputStream,org.apache.commons.compress.archivers.ArchiveEntry) -> a
org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveEntryIterator -> org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveEntryIterator:
    boolean hasNext() -> hasNext
    org.apache.commons.compress.archivers.ArchiveEntry next() -> next
    java.io.InputStream getInputStream() -> getInputStream
org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator -> org.apache.commons.compress.changes.ChangeSetPerformer$ArchiveInputStreamIterator:
    org.apache.commons.compress.archivers.ArchiveInputStream in -> a
    org.apache.commons.compress.archivers.ArchiveEntry next -> b
    boolean hasNext() -> hasNext
    org.apache.commons.compress.archivers.ArchiveEntry next() -> next
    java.io.InputStream getInputStream() -> getInputStream
org.apache.commons.compress.changes.ChangeSetPerformer$ZipFileIterator -> org.apache.commons.compress.changes.ChangeSetPerformer$ZipFileIterator:
    org.apache.commons.compress.archivers.zip.ZipFile in -> a
    java.util.Enumeration nestedEnum -> b
    org.apache.commons.compress.archivers.zip.ZipArchiveEntry current -> c
    boolean hasNext() -> hasNext
    org.apache.commons.compress.archivers.ArchiveEntry next() -> next
    java.io.InputStream getInputStream() -> getInputStream
org.apache.commons.compress.changes.ChangeSetResults -> org.apache.commons.compress.changes.ChangeSetResults:
    java.util.List addedFromChangeSet -> a
    java.util.List addedFromStream -> b
    java.util.List deleted -> c
    void deleted(java.lang.String) -> a
    void addedFromStream(java.lang.String) -> b
    void addedFromChangeSet(java.lang.String) -> c
    java.util.List getAddedFromChangeSet() -> getAddedFromChangeSet
    java.util.List getAddedFromStream() -> getAddedFromStream
    java.util.List getDeleted() -> getDeleted
    boolean hasBeenAdded(java.lang.String) -> d
org.apache.commons.compress.compressors.CompressorException -> org.apache.commons.compress.compressors.CompressorException:
org.apache.commons.compress.compressors.CompressorInputStream -> org.apache.commons.compress.compressors.CompressorInputStream:
    long bytesRead -> a
    void count(int) -> a
    void count(long) -> a
    void pushedBackBytes(long) -> b
    int getCount() -> getCount
    long getBytesRead() -> getBytesRead
org.apache.commons.compress.compressors.CompressorOutputStream -> org.apache.commons.compress.compressors.CompressorOutputStream:
org.apache.commons.compress.compressors.CompressorStreamFactory -> org.apache.commons.compress.compressors.CompressorStreamFactory:
    java.lang.String BZIP2 -> BZIP2
    java.lang.String GZIP -> GZIP
    java.lang.String PACK200 -> PACK200
    java.lang.String XZ -> XZ
    java.lang.String LZMA -> LZMA
    java.lang.String SNAPPY_FRAMED -> SNAPPY_FRAMED
    java.lang.String SNAPPY_RAW -> SNAPPY_RAW
    java.lang.String Z -> Z
    boolean decompressConcatenated -> a
    void setDecompressConcatenated(boolean) -> setDecompressConcatenated
    org.apache.commons.compress.compressors.CompressorInputStream createCompressorInputStream(java.io.InputStream) -> createCompressorInputStream
    org.apache.commons.compress.compressors.CompressorInputStream createCompressorInputStream(java.lang.String,java.io.InputStream) -> createCompressorInputStream
    org.apache.commons.compress.compressors.CompressorOutputStream createCompressorOutputStream(java.lang.String,java.io.OutputStream) -> createCompressorOutputStream
org.apache.commons.compress.compressors.FileNameUtil -> org.apache.commons.compress.compressors.FileNameUtil:
    java.util.Map compressSuffix -> a
    java.util.Map uncompressSuffix -> b
    int longestCompressedSuffix -> c
    int shortestCompressedSuffix -> d
    int longestUncompressedSuffix -> e
    int shortestUncompressedSuffix -> f
    java.lang.String defaultExtension -> g
    boolean isCompressedFilename(java.lang.String) -> isCompressedFilename
    java.lang.String getUncompressedFilename(java.lang.String) -> getUncompressedFilename
    java.lang.String getCompressedFilename(java.lang.String) -> getCompressedFilename
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream -> org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:
    int last -> a
    int origPtr -> b
    int blockSize100k -> c
    boolean blockRandomised -> d
    int bsBuff -> e
    int bsLive -> f
    org.apache.commons.compress.compressors.bzip2.CRC crc -> g
    int nInUse -> h
    java.io.InputStream in -> i
    boolean decompressConcatenated -> j
    int currentState -> k
    int storedBlockCRC -> l
    int storedCombinedCRC -> m
    int computedBlockCRC -> n
    int computedCombinedCRC -> o
    int su_count -> p
    int su_ch2 -> q
    int su_chPrev -> r
    int su_i2 -> s
    int su_j2 -> t
    int su_rNToGo -> u
    int su_rTPos -> v
    int su_tPos -> w
    char su_z -> x
    org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data data -> y
    int read() -> read
    int read(byte[],int,int) -> read
    void makeMaps() -> a
    int read0() -> b
    boolean init(boolean) -> a
    void initBlock() -> c
    void endBlock() -> d
    boolean complete() -> e
    void close() -> close
    int bsR(int) -> b
    boolean bsGetBit() -> f
    char bsGetUByte() -> g
    int bsGetInt() -> h
    void hbCreateDecodeTables(int[],int[],int[],char[],int,int,int) -> a
    void recvDecodingTables() -> i
    void createHuffmanDecodingTables(int,int) -> a
    void getAndMoveToFrontDecode() -> j
    int getAndMoveToFrontDecode0(int) -> c
    int setupBlock() -> k
    int setupRandPartA() -> l
    int setupNoRandPartA() -> m
    int setupRandPartB() -> n
    int setupRandPartC() -> o
    int setupNoRandPartB() -> p
    int setupNoRandPartC() -> q
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data -> org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream$Data:
    boolean[] inUse -> a
    byte[] seqToUnseq -> b
    byte[] selector -> c
    byte[] selectorMtf -> d
    int[] unzftab -> e
    int[][] limit -> f
    int[][] base -> g
    int[][] perm -> h
    int[] minLens -> i
    int[] cftab -> j
    char[] getAndMoveToFrontDecode_yy -> k
    char[][] temp_charArray2d -> l
    byte[] recvDecodingTables_pos -> m
    int[] tt -> n
    byte[] ll8 -> o
    int[] initTT(int) -> a
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream -> org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream:
    int MIN_BLOCKSIZE -> MIN_BLOCKSIZE
    int MAX_BLOCKSIZE -> MAX_BLOCKSIZE
    int last -> a
    int blockSize100k -> b
    int bsBuff -> c
    int bsLive -> d
    org.apache.commons.compress.compressors.bzip2.CRC crc -> e
    int nInUse -> f
    int nMTF -> g
    int currentChar -> h
    int runLength -> i
    int blockCRC -> j
    int combinedCRC -> k
    int allowableBlockSize -> l
    org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data data -> m
    org.apache.commons.compress.compressors.bzip2.BlockSort blockSorter -> n
    java.io.OutputStream out -> o
    void hbMakeCodeLengths(byte[],int[],org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data,int,int) -> a
    int chooseBlockSize(long) -> chooseBlockSize
    void write(int) -> write
    void writeRun() -> a
    void finalize() -> finalize
    void finish() -> finish
    void close() -> close
    void flush() -> flush
    void init() -> b
    void initBlock() -> c
    void endBlock() -> d
    void endCompression() -> e
    int getBlockSize() -> getBlockSize
    void write(byte[],int,int) -> write
    void write0(int) -> a
    void hbAssignCodes(int[],byte[],int,int,int) -> a
    void bsFinishedWithStream() -> f
    void bsW(int,int) -> a
    void bsPutUByte(int) -> b
    void bsPutInt(int) -> c
    void sendMTFValues() -> g
    void sendMTFValues0(int,int) -> b
    int sendMTFValues1(int,int) -> c
    void sendMTFValues2(int,int) -> d
    void sendMTFValues3(int,int) -> e
    void sendMTFValues4() -> h
    void sendMTFValues5(int,int) -> f
    void sendMTFValues6(int,int) -> g
    void sendMTFValues7() -> i
    void moveToFrontCodeAndSend() -> j
    void blockSort() -> k
    void generateMTFValues() -> l
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data -> org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data:
    boolean[] inUse -> a
    byte[] unseqToSeq -> b
    int[] mtfFreq -> c
    byte[] selector -> d
    byte[] selectorMtf -> e
    byte[] generateMTFValues_yy -> f
    byte[][] sendMTFValues_len -> g
    int[][] sendMTFValues_rfreq -> h
    int[] sendMTFValues_fave -> i
    short[] sendMTFValues_cost -> j
    int[][] sendMTFValues_code -> k
    byte[] sendMTFValues2_pos -> l
    boolean[] sentMTFValues4_inUse16 -> m
    int[] heap -> n
    int[] weight -> o
    int[] parent -> p
    byte[] block -> q
    int[] fmap -> r
    char[] sfmap -> s
    int origPtr -> t
org.apache.commons.compress.compressors.bzip2.BZip2Constants -> org.apache.commons.compress.compressors.bzip2.BZip2Constants:
    int BASEBLOCKSIZE -> BASEBLOCKSIZE
    int MAX_ALPHA_SIZE -> MAX_ALPHA_SIZE
    int MAX_CODE_LEN -> MAX_CODE_LEN
    int RUNA -> RUNA
    int RUNB -> RUNB
    int N_GROUPS -> N_GROUPS
    int G_SIZE -> G_SIZE
    int N_ITERS -> N_ITERS
    int MAX_SELECTORS -> MAX_SELECTORS
    int NUM_OVERSHOOT_BYTES -> NUM_OVERSHOOT_BYTES
org.apache.commons.compress.compressors.bzip2.BZip2Utils -> org.apache.commons.compress.compressors.bzip2.BZip2Utils:
    org.apache.commons.compress.compressors.FileNameUtil fileNameUtil -> a
    boolean isCompressedFilename(java.lang.String) -> isCompressedFilename
    java.lang.String getUncompressedFilename(java.lang.String) -> getUncompressedFilename
    java.lang.String getCompressedFilename(java.lang.String) -> getCompressedFilename
org.apache.commons.compress.compressors.bzip2.BlockSort -> org.apache.commons.compress.compressors.bzip2.BlockSort:
    int workDone -> a
    int workLimit -> b
    boolean firstAttempt -> c
    int[] stack_ll -> d
    int[] stack_hh -> e
    int[] stack_dd -> f
    int[] mainSort_runningOrder -> g
    int[] mainSort_copy -> h
    boolean[] mainSort_bigDone -> i
    int[] ftab -> j
    char[] quadrant -> k
    int[] eclass -> l
    int[] INCS -> m
    void blockSort(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data,int) -> a
    void fallbackSort(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data,int) -> b
    void fallbackSimpleSort(int[],int[],int,int) -> a
    void fswap(int[],int,int) -> a
    void fvswap(int[],int,int,int) -> a
    int fmin(int,int) -> a
    void fpush(int,int,int) -> a
    int[] fpop(int) -> a
    void fallbackQSort3(int[],int[],int,int) -> b
    int[] getEclass() -> a
    void fallbackSort(int[],byte[],int) -> a
    boolean mainSimpleSort(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data,int,int,int,int) -> a
    void vswap(int[],int,int,int) -> b
    byte med3(byte,byte,byte) -> a
    void mainQSort3(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data,int,int,int,int) -> b
    void mainSort(org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream$Data,int) -> c
org.apache.commons.compress.compressors.bzip2.CRC -> org.apache.commons.compress.compressors.bzip2.CRC:
    int[] crc32Table -> a
    int globalCrc -> b
    void initialiseCRC() -> a
    int getFinalCRC() -> b
    void updateCRC(int) -> a
    void updateCRC(int,int) -> a
org.apache.commons.compress.compressors.bzip2.Rand -> org.apache.commons.compress.compressors.bzip2.Rand:
    int[] RNUMS -> a
    int rNums(int) -> a
org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream -> org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:
    java.io.InputStream in -> b
    boolean decompressConcatenated -> c
    byte[] buf -> d
    int bufUsed -> e
    java.util.zip.Inflater inf -> f
    java.util.zip.CRC32 crc -> g
    int memberSize -> h
    boolean endReached -> i
    byte[] oneByte -> j
    org.apache.commons.compress.compressors.gzip.GzipParameters parameters -> k
    boolean $assertionsDisabled -> a
    org.apache.commons.compress.compressors.gzip.GzipParameters getMetaData() -> getMetaData
    boolean init(boolean) -> a
    byte[] readToNull(java.io.DataInputStream) -> a
    int readLittleEndianInt(java.io.DataInputStream) -> b
    int read() -> read
    int read(byte[],int,int) -> read
    boolean matches(byte[],int) -> matches
    void close() -> close
org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream -> org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:
    java.io.OutputStream out -> a
    java.util.zip.Deflater deflater -> b
    byte[] deflateBuffer -> c
    boolean closed -> d
    java.util.zip.CRC32 crc -> e
    void writeHeader(org.apache.commons.compress.compressors.gzip.GzipParameters) -> a
    void writeTrailer() -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void deflate() -> b
    void finish() -> finish
    void flush() -> flush
    void close() -> close
org.apache.commons.compress.compressors.gzip.GzipParameters -> org.apache.commons.compress.compressors.gzip.GzipParameters:
    int compressionLevel -> a
    long modificationTime -> b
    java.lang.String filename -> c
    java.lang.String comment -> d
    int operatingSystem -> e
    int getCompressionLevel() -> getCompressionLevel
    void setCompressionLevel(int) -> setCompressionLevel
    long getModificationTime() -> getModificationTime
    void setModificationTime(long) -> setModificationTime
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    int getOperatingSystem() -> getOperatingSystem
    void setOperatingSystem(int) -> setOperatingSystem
org.apache.commons.compress.compressors.gzip.GzipUtils -> org.apache.commons.compress.compressors.gzip.GzipUtils:
    org.apache.commons.compress.compressors.FileNameUtil fileNameUtil -> a
    boolean isCompressedFilename(java.lang.String) -> isCompressedFilename
    java.lang.String getUncompressedFilename(java.lang.String) -> getUncompressedFilename
    java.lang.String getCompressedFilename(java.lang.String) -> getCompressedFilename
org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream -> org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream:
    java.io.InputStream in -> a
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
org.apache.commons.compress.compressors.pack200.InMemoryCachingStreamBridge -> org.apache.commons.compress.compressors.pack200.InMemoryCachingStreamBridge:
    java.io.InputStream getInputView() -> a
org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream -> org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream:
    java.io.InputStream originalInput -> a
    org.apache.commons.compress.compressors.pack200.StreamBridge streamBridge -> b
    byte[] CAFE_DOOD -> c
    int SIG_LENGTH -> d
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    int available() -> available
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    long skip(long) -> skip
    void close() -> close
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream$1 -> org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream$1:
    org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream this$0 -> a
    void close() -> close
org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream -> org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream:
    boolean finished -> a
    java.io.OutputStream originalOutput -> b
    org.apache.commons.compress.compressors.pack200.StreamBridge streamBridge -> c
    java.util.Map properties -> d
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void finish() -> finish
org.apache.commons.compress.compressors.pack200.Pack200Strategy -> org.apache.commons.compress.compressors.pack200.Pack200Strategy:
    org.apache.commons.compress.compressors.pack200.Pack200Strategy IN_MEMORY -> IN_MEMORY
    org.apache.commons.compress.compressors.pack200.Pack200Strategy TEMP_FILE -> TEMP_FILE
    org.apache.commons.compress.compressors.pack200.Pack200Strategy[] $VALUES -> a
    org.apache.commons.compress.compressors.pack200.Pack200Strategy[] values() -> values
    org.apache.commons.compress.compressors.pack200.Pack200Strategy valueOf(java.lang.String) -> valueOf
    org.apache.commons.compress.compressors.pack200.StreamBridge newStreamBridge() -> a
org.apache.commons.compress.compressors.pack200.Pack200Strategy$1 -> org.apache.commons.compress.compressors.pack200.Pack200Strategy$1:
    org.apache.commons.compress.compressors.pack200.StreamBridge newStreamBridge() -> a
org.apache.commons.compress.compressors.pack200.Pack200Strategy$2 -> org.apache.commons.compress.compressors.pack200.Pack200Strategy$2:
    org.apache.commons.compress.compressors.pack200.StreamBridge newStreamBridge() -> a
org.apache.commons.compress.compressors.pack200.Pack200Utils -> org.apache.commons.compress.compressors.pack200.Pack200Utils:
    void normalize(java.io.File) -> normalize
    void normalize(java.io.File,java.util.Map) -> normalize
    void normalize(java.io.File,java.io.File) -> normalize
    void normalize(java.io.File,java.io.File,java.util.Map) -> normalize
org.apache.commons.compress.compressors.pack200.StreamBridge -> org.apache.commons.compress.compressors.pack200.StreamBridge:
    java.io.InputStream input -> a
    java.lang.Object INPUT_LOCK -> b
    java.io.InputStream getInput() -> b
    java.io.InputStream getInputView() -> a
    void stop() -> c
org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge -> org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge:
    java.io.File f -> a
    java.io.InputStream getInputView() -> a
    java.io.File access$000(org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge) -> a
org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1 -> org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1:
    org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge this$0 -> a
    void close() -> close
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream -> org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream:
    byte[] SZ_SIGNATURE -> a
    java.io.PushbackInputStream in -> b
    org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream currentCompressedChunk -> c
    byte[] oneByte -> d
    boolean endReached -> e
    boolean inUncompressedChunk -> f
    int uncompressedBytesRemaining -> g
    long expectedChecksum -> h
    org.apache.commons.compress.compressors.snappy.PureJavaCrc32C checksum -> i
    int read() -> read
    void close() -> close
    int read(byte[],int,int) -> read
    int available() -> available
    int readOnce(byte[],int,int) -> a
    void readNextBlock() -> a
    long readCrc() -> b
    long unmask(long) -> c
    int readSize() -> c
    void skipBlock() -> d
    void readStreamIdentifier() -> e
    int readOneByte() -> f
    void verifyLastChecksumAndReset() -> g
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.compressors.snappy.PureJavaCrc32C -> org.apache.commons.compress.compressors.snappy.PureJavaCrc32C:
    int crc -> a
    int[] T -> b
    long getValue() -> getValue
    void reset() -> reset
    void update(byte[],int,int) -> update
    void update(int) -> update
org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream -> org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream:
    int DEFAULT_BLOCK_SIZE -> DEFAULT_BLOCK_SIZE
    byte[] decompressBuf -> a
    int writeIndex -> b
    int readIndex -> c
    int blockSize -> d
    java.io.InputStream in -> e
    int size -> f
    int uncompressedBytesRemaining -> g
    byte[] oneByte -> h
    boolean endReached -> i
    int read() -> read
    void close() -> close
    int available() -> available
    int read(byte[],int,int) -> read
    void fill(int) -> b
    void slideBuffer() -> a
    int readLiteralLength(int) -> c
    boolean expandLiteral(int) -> d
    boolean expandCopy(long,int) -> a
    int readOneByte() -> b
    long readSize() -> c
    int getSize() -> getSize
org.apache.commons.compress.compressors.xz.XZCompressorInputStream -> org.apache.commons.compress.compressors.xz.XZCompressorInputStream:
    java.io.InputStream in -> a
    boolean matches(byte[],int) -> matches
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
org.apache.commons.compress.compressors.xz.XZCompressorOutputStream -> org.apache.commons.compress.compressors.xz.XZCompressorOutputStream:
    org.tukaani.xz.XZOutputStream out -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void finish() -> finish
    void close() -> close
org.apache.commons.compress.compressors.xz.XZUtils -> org.apache.commons.compress.compressors.xz.XZUtils:
    org.apache.commons.compress.compressors.FileNameUtil fileNameUtil -> a
    boolean isXZCompressionAvailable() -> isXZCompressionAvailable
    boolean isCompressedFilename(java.lang.String) -> isCompressedFilename
    java.lang.String getUncompressedFilename(java.lang.String) -> getUncompressedFilename
    java.lang.String getCompressedFilename(java.lang.String) -> getCompressedFilename
org.apache.commons.compress.compressors.z.ZCompressorInputStream -> org.apache.commons.compress.compressors.z.ZCompressorInputStream:
    boolean blockMode -> j
    int maxCodeSize -> k
    long totalCodesRead -> l
    void clearEntries() -> d
    int readNextCode() -> b
    void reAlignReading() -> e
    int addEntry(int,byte) -> a
    int decompressNextSymbol() -> a
    boolean matches(byte[],int) -> matches
org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream -> org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream:
    byte[] oneByte -> j
    java.io.InputStream in -> a
    int clearCode -> b
    int codeSize -> c
    int bitsCached -> d
    int bitsCachedSize -> e
    int previousCode -> f
    int tableSize -> g
    int[] prefixes -> h
    byte[] characters -> i
    byte[] outputStack -> k
    int outputStackLocation -> l
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
    int decompressNextSymbol() -> a
    int addEntry(int,byte) -> a
    void setClearCode(int) -> b
    void initializeTables(int) -> c
    int readNextCode() -> b
    int addEntry(int,byte,int) -> a
    int addRepeatOfPreviousCode() -> c
    int expandCodeToOutputStack(int,boolean) -> a
    int readFromStack(byte[],int,int) -> a
org.apache.commons.compress.utils.ArchiveUtils -> org.apache.commons.compress.utils.ArchiveUtils:
    java.lang.String toString(org.apache.commons.compress.archivers.ArchiveEntry) -> toString
    boolean matchAsciiBuffer(java.lang.String,byte[],int,int) -> matchAsciiBuffer
    boolean matchAsciiBuffer(java.lang.String,byte[]) -> matchAsciiBuffer
    byte[] toAsciiBytes(java.lang.String) -> toAsciiBytes
    java.lang.String toAsciiString(byte[]) -> toAsciiString
    java.lang.String toAsciiString(byte[],int,int) -> toAsciiString
    boolean isEqual(byte[],int,int,byte[],int,int,boolean) -> isEqual
    boolean isEqual(byte[],int,int,byte[],int,int) -> isEqual
    boolean isEqual(byte[],byte[]) -> isEqual
    boolean isEqual(byte[],byte[],boolean) -> isEqual
    boolean isEqualWithNull(byte[],int,int,byte[],int,int) -> isEqualWithNull
    boolean isArrayZero(byte[],int) -> isArrayZero
org.apache.commons.compress.utils.BoundedInputStream -> org.apache.commons.compress.utils.BoundedInputStream:
    java.io.InputStream in -> a
    long bytesRemaining -> b
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
org.apache.commons.compress.utils.CRC32VerifyingInputStream -> org.apache.commons.compress.utils.CRC32VerifyingInputStream:
org.apache.commons.compress.utils.CharsetNames -> org.apache.commons.compress.utils.CharsetNames:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
org.apache.commons.compress.utils.Charsets -> org.apache.commons.compress.utils.Charsets:
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset toCharset(java.nio.charset.Charset) -> toCharset
    java.nio.charset.Charset toCharset(java.lang.String) -> toCharset
org.apache.commons.compress.utils.ChecksumVerifyingInputStream -> org.apache.commons.compress.utils.ChecksumVerifyingInputStream:
    java.io.InputStream in -> a
    long bytesRemaining -> b
    long expectedChecksum -> c
    java.util.zip.Checksum checksum -> d
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void close() -> close
org.apache.commons.compress.utils.CountingInputStream -> org.apache.commons.compress.utils.CountingInputStream:
    long bytesRead -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void count(long) -> a
    long getBytesRead() -> getBytesRead
org.apache.commons.compress.utils.CountingOutputStream -> org.apache.commons.compress.utils.CountingOutputStream:
    long bytesWritten -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void count(long) -> a
    long getBytesWritten() -> getBytesWritten
org.apache.commons.compress.utils.IOUtils -> org.apache.commons.compress.utils.IOUtils:
    byte[] SKIP_BUF -> a
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    long skip(java.io.InputStream,long) -> skip
    int readFully(java.io.InputStream,byte[]) -> readFully
    int readFully(java.io.InputStream,byte[],int,int) -> readFully
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    void closeQuietly(java.io.Closeable) -> closeQuietly
org.apache.commons.net.DatagramSocketClient -> org.apache.commons.net.DatagramSocketClient:
    org.apache.commons.net.DatagramSocketFactory __DEFAULT_SOCKET_FACTORY -> e
    java.nio.charset.Charset charset -> f
    int _timeout_ -> a
    java.net.DatagramSocket _socket_ -> b
    boolean _isOpen_ -> c
    org.apache.commons.net.DatagramSocketFactory _socketFactory_ -> d
    void open() -> open
    void open(int) -> open
    void open(int,java.net.InetAddress) -> open
    void close() -> close
    boolean isOpen() -> isOpen
    void setDefaultTimeout(int) -> setDefaultTimeout
    int getDefaultTimeout() -> getDefaultTimeout
    void setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    void setDatagramSocketFactory(org.apache.commons.net.DatagramSocketFactory) -> setDatagramSocketFactory
    java.lang.String getCharsetName() -> getCharsetName
    java.nio.charset.Charset getCharset() -> getCharset
    void setCharset(java.nio.charset.Charset) -> setCharset
org.apache.commons.net.DatagramSocketFactory -> org.apache.commons.net.DatagramSocketFactory:
    java.net.DatagramSocket createDatagramSocket() -> createDatagramSocket
    java.net.DatagramSocket createDatagramSocket(int) -> createDatagramSocket
    java.net.DatagramSocket createDatagramSocket(int,java.net.InetAddress) -> createDatagramSocket
org.apache.commons.net.DefaultDatagramSocketFactory -> org.apache.commons.net.DefaultDatagramSocketFactory:
    java.net.DatagramSocket createDatagramSocket() -> createDatagramSocket
    java.net.DatagramSocket createDatagramSocket(int) -> createDatagramSocket
    java.net.DatagramSocket createDatagramSocket(int,java.net.InetAddress) -> createDatagramSocket
org.apache.commons.net.DefaultSocketFactory -> org.apache.commons.net.DefaultSocketFactory:
    java.net.Proxy connProxy -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.ServerSocket createServerSocket(int) -> createServerSocket
    java.net.ServerSocket createServerSocket(int,int) -> createServerSocket
    java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress) -> createServerSocket
org.apache.commons.net.MalformedServerReplyException -> org.apache.commons.net.MalformedServerReplyException:
org.apache.commons.net.PrintCommandListener -> org.apache.commons.net.PrintCommandListener:
    java.io.PrintWriter __writer -> a
    boolean __nologin -> b
    char __eolMarker -> c
    boolean __directionMarker -> d
    void protocolCommandSent(org.apache.commons.net.ProtocolCommandEvent) -> protocolCommandSent
    java.lang.String getPrintableString(java.lang.String) -> a
    void protocolReplyReceived(org.apache.commons.net.ProtocolCommandEvent) -> protocolReplyReceived
org.apache.commons.net.ProtocolCommandEvent -> org.apache.commons.net.ProtocolCommandEvent:
    int __replyCode -> a
    boolean __isCommand -> b
    java.lang.String __message -> c
    java.lang.String __command -> d
    java.lang.String getCommand() -> getCommand
    int getReplyCode() -> getReplyCode
    boolean isCommand() -> isCommand
    boolean isReply() -> isReply
    java.lang.String getMessage() -> getMessage
org.apache.commons.net.ProtocolCommandListener -> org.apache.commons.net.ProtocolCommandListener:
    void protocolCommandSent(org.apache.commons.net.ProtocolCommandEvent) -> protocolCommandSent
    void protocolReplyReceived(org.apache.commons.net.ProtocolCommandEvent) -> protocolReplyReceived
org.apache.commons.net.ProtocolCommandSupport -> org.apache.commons.net.ProtocolCommandSupport:
    java.lang.Object __source -> a
    org.apache.commons.net.util.ListenerList __listeners -> b
    void fireCommandSent(java.lang.String,java.lang.String) -> fireCommandSent
    void fireReplyReceived(int,java.lang.String) -> fireReplyReceived
    void addProtocolCommandListener(org.apache.commons.net.ProtocolCommandListener) -> addProtocolCommandListener
    void removeProtocolCommandListener(org.apache.commons.net.ProtocolCommandListener) -> removeProtocolCommandListener
    int getListenerCount() -> getListenerCount
org.apache.commons.net.SocketClient -> org.apache.commons.net.SocketClient:
    java.lang.String NETASCII_EOL -> NETASCII_EOL
    javax.net.SocketFactory __DEFAULT_SOCKET_FACTORY -> i
    javax.net.ServerSocketFactory __DEFAULT_SERVER_SOCKET_FACTORY -> j
    org.apache.commons.net.ProtocolCommandSupport __commandSupport -> k
    int _timeout_ -> a
    java.net.Socket _socket_ -> b
    int _defaultPort_ -> c
    java.io.InputStream _input_ -> d
    java.io.OutputStream _output_ -> e
    javax.net.SocketFactory _socketFactory_ -> f
    javax.net.ServerSocketFactory _serverSocketFactory_ -> g
    int connectTimeout -> h
    int receiveBufferSize -> l
    int sendBufferSize -> m
    java.net.Proxy connProxy -> n
    java.nio.charset.Charset charset -> o
    void _connectAction_() -> a
    void connect(java.net.InetAddress,int) -> connect
    void connect(java.lang.String,int) -> connect
    void connect(java.net.InetAddress,int,java.net.InetAddress,int) -> connect
    void connect(java.lang.String,int,java.net.InetAddress,int) -> connect
    void connect(java.net.InetAddress) -> connect
    void connect(java.lang.String) -> connect
    void disconnect() -> disconnect
    void closeQuietly(java.net.Socket) -> a
    void closeQuietly(java.io.Closeable) -> a
    boolean isConnected() -> isConnected
    boolean isAvailable() -> isAvailable
    void setDefaultPort(int) -> setDefaultPort
    int getDefaultPort() -> getDefaultPort
    void setDefaultTimeout(int) -> setDefaultTimeout
    int getDefaultTimeout() -> getDefaultTimeout
    void setSoTimeout(int) -> setSoTimeout
    void setSendBufferSize(int) -> setSendBufferSize
    void setReceiveBufferSize(int) -> setReceiveBufferSize
    int getSoTimeout() -> getSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    boolean getTcpNoDelay() -> getTcpNoDelay
    void setKeepAlive(boolean) -> setKeepAlive
    boolean getKeepAlive() -> getKeepAlive
    void setSoLinger(boolean,int) -> setSoLinger
    int getSoLinger() -> getSoLinger
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getRemotePort() -> getRemotePort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    boolean verifyRemote(java.net.Socket) -> verifyRemote
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    void setServerSocketFactory(javax.net.ServerSocketFactory) -> setServerSocketFactory
    void setConnectTimeout(int) -> setConnectTimeout
    int getConnectTimeout() -> getConnectTimeout
    javax.net.ServerSocketFactory getServerSocketFactory() -> getServerSocketFactory
    void addProtocolCommandListener(org.apache.commons.net.ProtocolCommandListener) -> addProtocolCommandListener
    void removeProtocolCommandListener(org.apache.commons.net.ProtocolCommandListener) -> removeProtocolCommandListener
    void fireReplyReceived(int,java.lang.String) -> a
    void fireCommandSent(java.lang.String,java.lang.String) -> a
    void createCommandSupport() -> b
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> c
    void setProxy(java.net.Proxy) -> setProxy
    java.net.Proxy getProxy() -> getProxy
    java.lang.String getCharsetName() -> getCharsetName
    java.nio.charset.Charset getCharset() -> getCharset
    void setCharset(java.nio.charset.Charset) -> setCharset
org.apache.commons.net.bsd.RCommandClient -> org.apache.commons.net.bsd.RCommandClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    int MIN_CLIENT_PORT -> MIN_CLIENT_PORT
    int MAX_CLIENT_PORT -> MAX_CLIENT_PORT
    java.io.InputStream _createErrorStream() -> d
    void connect(java.net.InetAddress,int,java.net.InetAddress) -> connect
    void connect(java.net.InetAddress,int) -> connect
    void connect(java.lang.String,int) -> connect
    void connect(java.lang.String,int,java.net.InetAddress) -> connect
    void connect(java.net.InetAddress,int,java.net.InetAddress,int) -> connect
    void connect(java.lang.String,int,java.net.InetAddress,int) -> connect
    void rcommand(java.lang.String,java.lang.String,java.lang.String,boolean) -> rcommand
    void rcommand(java.lang.String,java.lang.String,java.lang.String) -> rcommand
org.apache.commons.net.bsd.RExecClient -> org.apache.commons.net.bsd.RExecClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    boolean __remoteVerificationEnabled -> j
    java.io.InputStream _errorStream_ -> i
    java.io.InputStream _createErrorStream() -> d
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    void rexec(java.lang.String,java.lang.String,java.lang.String,boolean) -> rexec
    void rexec(java.lang.String,java.lang.String,java.lang.String) -> rexec
    void disconnect() -> disconnect
    void setRemoteVerificationEnabled(boolean) -> setRemoteVerificationEnabled
    boolean isRemoteVerificationEnabled() -> isRemoteVerificationEnabled
org.apache.commons.net.bsd.RLoginClient -> org.apache.commons.net.bsd.RLoginClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    void rlogin(java.lang.String,java.lang.String,java.lang.String,int) -> rlogin
    void rlogin(java.lang.String,java.lang.String,java.lang.String) -> rlogin
org.apache.commons.net.chargen.CharGenTCPClient -> org.apache.commons.net.chargen.CharGenTCPClient:
    int SYSTAT_PORT -> SYSTAT_PORT
    int NETSTAT_PORT -> NETSTAT_PORT
    int QUOTE_OF_DAY_PORT -> QUOTE_OF_DAY_PORT
    int CHARGEN_PORT -> CHARGEN_PORT
    int DEFAULT_PORT -> DEFAULT_PORT
    java.io.InputStream getInputStream() -> getInputStream
org.apache.commons.net.chargen.CharGenUDPClient -> org.apache.commons.net.chargen.CharGenUDPClient:
    int SYSTAT_PORT -> SYSTAT_PORT
    int NETSTAT_PORT -> NETSTAT_PORT
    int QUOTE_OF_DAY_PORT -> QUOTE_OF_DAY_PORT
    int CHARGEN_PORT -> CHARGEN_PORT
    int DEFAULT_PORT -> DEFAULT_PORT
    byte[] __receiveData -> e
    java.net.DatagramPacket __receivePacket -> f
    java.net.DatagramPacket __sendPacket -> g
    void send(java.net.InetAddress,int) -> send
    void send(java.net.InetAddress) -> send
    byte[] receive() -> receive
org.apache.commons.net.daytime.DaytimeTCPClient -> org.apache.commons.net.daytime.DaytimeTCPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    char[] __buffer -> i
    java.lang.String getTime() -> getTime
org.apache.commons.net.daytime.DaytimeUDPClient -> org.apache.commons.net.daytime.DaytimeUDPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    byte[] __dummyData -> e
    byte[] __timeData -> f
    java.lang.String getTime(java.net.InetAddress,int) -> getTime
    java.lang.String getTime(java.net.InetAddress) -> getTime
org.apache.commons.net.discard.DiscardTCPClient -> org.apache.commons.net.discard.DiscardTCPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.io.OutputStream getOutputStream() -> getOutputStream
org.apache.commons.net.discard.DiscardUDPClient -> org.apache.commons.net.discard.DiscardUDPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.net.DatagramPacket _sendPacket -> e
    void send(byte[],int,java.net.InetAddress,int) -> send
    void send(byte[],int,java.net.InetAddress) -> send
    void send(byte[],java.net.InetAddress) -> send
org.apache.commons.net.echo.EchoTCPClient -> org.apache.commons.net.echo.EchoTCPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.io.InputStream getInputStream() -> getInputStream
org.apache.commons.net.echo.EchoUDPClient -> org.apache.commons.net.echo.EchoUDPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.net.DatagramPacket __receivePacket -> f
    void send(byte[],int,java.net.InetAddress) -> send
    void send(byte[],java.net.InetAddress) -> send
    int receive(byte[],int) -> receive
    int receive(byte[]) -> receive
org.apache.commons.net.finger.FingerClient -> org.apache.commons.net.finger.FingerClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    char[] __buffer -> i
    java.lang.String query(boolean,java.lang.String) -> query
    java.lang.String query(boolean) -> query
    java.io.InputStream getInputStream(boolean,java.lang.String) -> getInputStream
    java.io.InputStream getInputStream(boolean,java.lang.String,java.lang.String) -> getInputStream
    java.io.InputStream getInputStream(boolean) -> getInputStream
org.apache.commons.net.ftp.Configurable -> org.apache.commons.net.ftp.Configurable:
    void configure(org.apache.commons.net.ftp.FTPClientConfig) -> configure
org.apache.commons.net.ftp.FTP -> org.apache.commons.net.ftp.FTP:
    int DEFAULT_DATA_PORT -> DEFAULT_DATA_PORT
    int DEFAULT_PORT -> DEFAULT_PORT
    int ASCII_FILE_TYPE -> ASCII_FILE_TYPE
    int EBCDIC_FILE_TYPE -> EBCDIC_FILE_TYPE
    int BINARY_FILE_TYPE -> BINARY_FILE_TYPE
    int LOCAL_FILE_TYPE -> LOCAL_FILE_TYPE
    int NON_PRINT_TEXT_FORMAT -> NON_PRINT_TEXT_FORMAT
    int TELNET_TEXT_FORMAT -> TELNET_TEXT_FORMAT
    int CARRIAGE_CONTROL_TEXT_FORMAT -> CARRIAGE_CONTROL_TEXT_FORMAT
    int FILE_STRUCTURE -> FILE_STRUCTURE
    int RECORD_STRUCTURE -> RECORD_STRUCTURE
    int PAGE_STRUCTURE -> PAGE_STRUCTURE
    int STREAM_TRANSFER_MODE -> STREAM_TRANSFER_MODE
    int BLOCK_TRANSFER_MODE -> BLOCK_TRANSFER_MODE
    int COMPRESSED_TRANSFER_MODE -> COMPRESSED_TRANSFER_MODE
    java.lang.String DEFAULT_CONTROL_ENCODING -> DEFAULT_CONTROL_ENCODING
    int REPLY_CODE_LEN -> REPLY_CODE_LEN
    int _replyCode -> i
    java.util.ArrayList _replyLines -> j
    boolean _newReplyString -> k
    java.lang.String _replyString -> l
    java.lang.String _controlEncoding -> m
    org.apache.commons.net.ProtocolCommandSupport _commandSupport_ -> n
    boolean strictMultilineParsing -> o
    java.io.BufferedReader _controlInput_ -> p
    java.io.BufferedWriter _controlOutput_ -> q
    boolean __strictCheck(java.lang.String,java.lang.String) -> b
    boolean __lenientCheck(java.lang.String) -> a
    void __getReply() -> f
    void __getReplyNoReport() -> d
    void __getReply(boolean) -> a
    void _connectAction_() -> a
    void setControlEncoding(java.lang.String) -> setControlEncoding
    java.lang.String getControlEncoding() -> getControlEncoding
    void disconnect() -> disconnect
    int sendCommand(java.lang.String,java.lang.String) -> sendCommand
    java.lang.String __buildMessage(java.lang.String,java.lang.String) -> c
    void __send(java.lang.String) -> b
    void __noop() -> e
    int sendCommand(int,java.lang.String) -> sendCommand
    int sendCommand(org.apache.commons.net.ftp.FTPCmd) -> sendCommand
    int sendCommand(org.apache.commons.net.ftp.FTPCmd,java.lang.String) -> sendCommand
    int sendCommand(java.lang.String) -> sendCommand
    int sendCommand(int) -> sendCommand
    int getReplyCode() -> getReplyCode
    int getReply() -> getReply
    java.lang.String[] getReplyStrings() -> getReplyStrings
    java.lang.String getReplyString() -> getReplyString
    int user(java.lang.String) -> user
    int pass(java.lang.String) -> pass
    int acct(java.lang.String) -> acct
    int abor() -> abor
    int cwd(java.lang.String) -> cwd
    int cdup() -> cdup
    int quit() -> quit
    int rein() -> rein
    int smnt(java.lang.String) -> smnt
    int port(java.net.InetAddress,int) -> port
    int eprt(java.net.InetAddress,int) -> eprt
    int pasv() -> pasv
    int epsv() -> epsv
    int type(int,int) -> type
    int type(int) -> type
    int stru(int) -> stru
    int mode(int) -> mode
    int retr(java.lang.String) -> retr
    int stor(java.lang.String) -> stor
    int stou() -> stou
    int stou(java.lang.String) -> stou
    int appe(java.lang.String) -> appe
    int allo(int) -> allo
    int feat() -> feat
    int allo(int,int) -> allo
    int rest(java.lang.String) -> rest
    int mdtm(java.lang.String) -> mdtm
    int mfmt(java.lang.String,java.lang.String) -> mfmt
    int rnfr(java.lang.String) -> rnfr
    int rnto(java.lang.String) -> rnto
    int dele(java.lang.String) -> dele
    int rmd(java.lang.String) -> rmd
    int mkd(java.lang.String) -> mkd
    int pwd() -> pwd
    int list() -> list
    int list(java.lang.String) -> list
    int mlsd() -> mlsd
    int mlsd(java.lang.String) -> mlsd
    int mlst() -> mlst
    int mlst(java.lang.String) -> mlst
    int nlst() -> nlst
    int nlst(java.lang.String) -> nlst
    int site(java.lang.String) -> site
    int syst() -> syst
    int stat() -> stat
    int stat(java.lang.String) -> stat
    int help() -> help
    int help(java.lang.String) -> help
    int noop() -> noop
    boolean isStrictMultilineParsing() -> isStrictMultilineParsing
    void setStrictMultilineParsing(boolean) -> setStrictMultilineParsing
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> c
org.apache.commons.net.ftp.FTPClient -> org.apache.commons.net.ftp.FTPClient:
    java.lang.String FTP_SYSTEM_TYPE -> FTP_SYSTEM_TYPE
    java.lang.String FTP_SYSTEM_TYPE_DEFAULT -> FTP_SYSTEM_TYPE_DEFAULT
    java.lang.String SYSTEM_TYPE_PROPERTIES -> SYSTEM_TYPE_PROPERTIES
    int ACTIVE_LOCAL_DATA_CONNECTION_MODE -> ACTIVE_LOCAL_DATA_CONNECTION_MODE
    int ACTIVE_REMOTE_DATA_CONNECTION_MODE -> ACTIVE_REMOTE_DATA_CONNECTION_MODE
    int PASSIVE_LOCAL_DATA_CONNECTION_MODE -> PASSIVE_LOCAL_DATA_CONNECTION_MODE
    int PASSIVE_REMOTE_DATA_CONNECTION_MODE -> PASSIVE_REMOTE_DATA_CONNECTION_MODE
    int __dataConnectionMode -> r
    int __dataTimeout -> s
    int __passivePort -> t
    java.lang.String __passiveHost -> u
    java.util.Random __random -> v
    int __activeMinPort -> w
    int __activeMaxPort -> x
    java.net.InetAddress __activeExternalHost -> y
    java.net.InetAddress __reportActiveExternalHost -> z
    java.net.InetAddress __passiveLocalHost -> A
    int __fileType -> B
    int __fileFormat -> C
    int __fileStructure -> D
    int __fileTransferMode -> E
    boolean __remoteVerificationEnabled -> F
    long __restartOffset -> G
    org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory __parserFactory -> H
    int __bufferSize -> I
    int __sendDataSocketBufferSize -> J
    int __receiveDataSocketBufferSize -> K
    boolean __listHiddenFiles -> L
    boolean __useEPSVwithIPv4 -> M
    java.lang.String __systemName -> N
    org.apache.commons.net.ftp.FTPFileEntryParser __entryParser -> O
    java.lang.String __entryParserKey -> P
    org.apache.commons.net.ftp.FTPClientConfig __configuration -> Q
    org.apache.commons.net.io.CopyStreamListener __copyStreamListener -> R
    long __controlKeepAliveTimeout -> S
    int __controlKeepAliveReplyTimeout -> T
    boolean __passiveNatWorkaround -> U
    java.util.regex.Pattern __PARMS_PAT -> V
    boolean __autodetectEncoding -> W
    java.util.HashMap __featuresMap -> X
    java.util.Properties getOverrideProperties() -> f
    void __initDefaults() -> g
    java.lang.String __parsePathname(java.lang.String) -> a
    void _parsePassiveModeReply(java.lang.String) -> b
    void _parseExtendedPassiveModeReply(java.lang.String) -> c
    boolean __storeFile(org.apache.commons.net.ftp.FTPCmd,java.lang.String,java.io.InputStream) -> a
    boolean _storeFile(java.lang.String,java.lang.String,java.io.InputStream) -> a
    java.io.OutputStream __storeFileStream(org.apache.commons.net.ftp.FTPCmd,java.lang.String) -> b
    java.io.OutputStream _storeFileStream(java.lang.String,java.lang.String) -> b
    java.net.Socket _openDataConnection_(org.apache.commons.net.ftp.FTPCmd,java.lang.String) -> a
    java.net.Socket _openDataConnection_(java.lang.String,java.lang.String) -> c
    void _connectAction_() -> a
    void setDataTimeout(int) -> setDataTimeout
    void setParserFactory(org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory) -> setParserFactory
    void disconnect() -> disconnect
    void setRemoteVerificationEnabled(boolean) -> setRemoteVerificationEnabled
    boolean isRemoteVerificationEnabled() -> isRemoteVerificationEnabled
    boolean login(java.lang.String,java.lang.String) -> login
    boolean login(java.lang.String,java.lang.String,java.lang.String) -> login
    boolean logout() -> logout
    boolean changeWorkingDirectory(java.lang.String) -> changeWorkingDirectory
    boolean changeToParentDirectory() -> changeToParentDirectory
    boolean structureMount(java.lang.String) -> structureMount
    void enterLocalActiveMode() -> enterLocalActiveMode
    void enterLocalPassiveMode() -> enterLocalPassiveMode
    boolean enterRemoteActiveMode(java.net.InetAddress,int) -> enterRemoteActiveMode
    boolean enterRemotePassiveMode() -> enterRemotePassiveMode
    java.lang.String getPassiveHost() -> getPassiveHost
    int getPassivePort() -> getPassivePort
    int getDataConnectionMode() -> getDataConnectionMode
    int getActivePort() -> h
    java.net.InetAddress getHostAddress() -> i
    java.net.InetAddress getReportHostAddress() -> j
    void setActivePortRange(int,int) -> setActivePortRange
    void setActiveExternalIPAddress(java.lang.String) -> setActiveExternalIPAddress
    void setPassiveLocalIPAddress(java.lang.String) -> setPassiveLocalIPAddress
    void setPassiveLocalIPAddress(java.net.InetAddress) -> setPassiveLocalIPAddress
    java.net.InetAddress getPassiveLocalIPAddress() -> getPassiveLocalIPAddress
    void setReportActiveExternalIPAddress(java.lang.String) -> setReportActiveExternalIPAddress
    boolean setFileType(int) -> setFileType
    boolean setFileType(int,int) -> setFileType
    boolean setFileStructure(int) -> setFileStructure
    boolean setFileTransferMode(int) -> setFileTransferMode
    boolean remoteRetrieve(java.lang.String) -> remoteRetrieve
    boolean remoteStore(java.lang.String) -> remoteStore
    boolean remoteStoreUnique(java.lang.String) -> remoteStoreUnique
    boolean remoteStoreUnique() -> remoteStoreUnique
    boolean remoteAppend(java.lang.String) -> remoteAppend
    boolean completePendingCommand() -> completePendingCommand
    boolean retrieveFile(java.lang.String,java.io.OutputStream) -> retrieveFile
    boolean _retrieveFile(java.lang.String,java.lang.String,java.io.OutputStream) -> a
    java.io.InputStream retrieveFileStream(java.lang.String) -> retrieveFileStream
    java.io.InputStream _retrieveFileStream(java.lang.String,java.lang.String) -> d
    boolean storeFile(java.lang.String,java.io.InputStream) -> storeFile
    java.io.OutputStream storeFileStream(java.lang.String) -> storeFileStream
    boolean appendFile(java.lang.String,java.io.InputStream) -> appendFile
    java.io.OutputStream appendFileStream(java.lang.String) -> appendFileStream
    boolean storeUniqueFile(java.lang.String,java.io.InputStream) -> storeUniqueFile
    java.io.OutputStream storeUniqueFileStream(java.lang.String) -> storeUniqueFileStream
    boolean storeUniqueFile(java.io.InputStream) -> storeUniqueFile
    java.io.OutputStream storeUniqueFileStream() -> storeUniqueFileStream
    boolean allocate(int) -> allocate
    boolean features() -> features
    java.lang.String[] featureValues(java.lang.String) -> featureValues
    java.lang.String featureValue(java.lang.String) -> featureValue
    boolean hasFeature(java.lang.String) -> hasFeature
    boolean hasFeature(java.lang.String,java.lang.String) -> hasFeature
    boolean initFeatureMap() -> k
    boolean allocate(int,int) -> allocate
    boolean doCommand(java.lang.String,java.lang.String) -> doCommand
    java.lang.String[] doCommandAsStrings(java.lang.String,java.lang.String) -> doCommandAsStrings
    org.apache.commons.net.ftp.FTPFile mlistFile(java.lang.String) -> mlistFile
    org.apache.commons.net.ftp.FTPFile[] mlistDir() -> mlistDir
    org.apache.commons.net.ftp.FTPFile[] mlistDir(java.lang.String) -> mlistDir
    org.apache.commons.net.ftp.FTPFile[] mlistDir(java.lang.String,org.apache.commons.net.ftp.FTPFileFilter) -> mlistDir
    boolean restart(long) -> a
    void setRestartOffset(long) -> setRestartOffset
    long getRestartOffset() -> getRestartOffset
    boolean rename(java.lang.String,java.lang.String) -> rename
    boolean abort() -> abort
    boolean deleteFile(java.lang.String) -> deleteFile
    boolean removeDirectory(java.lang.String) -> removeDirectory
    boolean makeDirectory(java.lang.String) -> makeDirectory
    java.lang.String printWorkingDirectory() -> printWorkingDirectory
    boolean sendSiteCommand(java.lang.String) -> sendSiteCommand
    java.lang.String getSystemType() -> getSystemType
    java.lang.String listHelp() -> listHelp
    java.lang.String listHelp(java.lang.String) -> listHelp
    boolean sendNoOp() -> sendNoOp
    java.lang.String[] listNames(java.lang.String) -> listNames
    java.lang.String[] listNames() -> listNames
    org.apache.commons.net.ftp.FTPFile[] listFiles(java.lang.String) -> listFiles
    org.apache.commons.net.ftp.FTPFile[] listFiles() -> listFiles
    org.apache.commons.net.ftp.FTPFile[] listFiles(java.lang.String,org.apache.commons.net.ftp.FTPFileFilter) -> listFiles
    org.apache.commons.net.ftp.FTPFile[] listDirectories() -> listDirectories
    org.apache.commons.net.ftp.FTPFile[] listDirectories(java.lang.String) -> listDirectories
    org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing() -> initiateListParsing
    org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(java.lang.String) -> initiateListParsing
    org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(java.lang.String,java.lang.String) -> initiateListParsing
    org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(org.apache.commons.net.ftp.FTPFileEntryParser,java.lang.String) -> a
    org.apache.commons.net.ftp.FTPListParseEngine initiateMListParsing(java.lang.String) -> e
    java.lang.String getListArguments(java.lang.String) -> d
    java.lang.String getStatus() -> getStatus
    java.lang.String getStatus(java.lang.String) -> getStatus
    java.lang.String getModificationTime(java.lang.String) -> getModificationTime
    boolean setModificationTime(java.lang.String,java.lang.String) -> setModificationTime
    void setBufferSize(int) -> setBufferSize
    int getBufferSize() -> getBufferSize
    void setSendDataSocketBufferSize(int) -> setSendDataSocketBufferSize
    int getSendDataSocketBufferSize() -> getSendDataSocketBufferSize
    void setReceieveDataSocketBufferSize(int) -> setReceieveDataSocketBufferSize
    int getReceiveDataSocketBufferSize() -> getReceiveDataSocketBufferSize
    void configure(org.apache.commons.net.ftp.FTPClientConfig) -> configure
    void setListHiddenFiles(boolean) -> setListHiddenFiles
    boolean getListHiddenFiles() -> getListHiddenFiles
    boolean isUseEPSVwithIPv4() -> isUseEPSVwithIPv4
    void setUseEPSVwithIPv4(boolean) -> setUseEPSVwithIPv4
    void setCopyStreamListener(org.apache.commons.net.io.CopyStreamListener) -> setCopyStreamListener
    org.apache.commons.net.io.CopyStreamListener getCopyStreamListener() -> getCopyStreamListener
    void setControlKeepAliveTimeout(long) -> setControlKeepAliveTimeout
    long getControlKeepAliveTimeout() -> getControlKeepAliveTimeout
    void setControlKeepAliveReplyTimeout(int) -> setControlKeepAliveReplyTimeout
    int getControlKeepAliveReplyTimeout() -> getControlKeepAliveReplyTimeout
    void setPassiveNatWorkaround(boolean) -> setPassiveNatWorkaround
    java.io.OutputStream getBufferedOutputStream(java.io.OutputStream) -> a
    java.io.InputStream getBufferedInputStream(java.io.InputStream) -> a
    org.apache.commons.net.io.CopyStreamListener __mergeListeners(org.apache.commons.net.io.CopyStreamListener) -> a
    void setAutodetectUTF8(boolean) -> setAutodetectUTF8
    boolean getAutodetectUTF8() -> getAutodetectUTF8
    java.lang.String getSystemName() -> getSystemName
org.apache.commons.net.ftp.FTPClient$CSL -> org.apache.commons.net.ftp.FTPClient$CSL:
    org.apache.commons.net.ftp.FTPClient parent -> a
    long idle -> b
    int currentSoTimeout -> c
    long time -> d
    int notAcked -> e
    void bytesTransferred(org.apache.commons.net.io.CopyStreamEvent) -> bytesTransferred
    void bytesTransferred(long,int,long) -> bytesTransferred
    void cleanUp() -> a
org.apache.commons.net.ftp.FTPClient$PropertiesSingleton -> org.apache.commons.net.ftp.FTPClient$PropertiesSingleton:
    java.util.Properties PROPERTIES -> a
org.apache.commons.net.ftp.FTPClientConfig -> org.apache.commons.net.ftp.FTPClientConfig:
    java.lang.String SYST_UNIX -> SYST_UNIX
    java.lang.String SYST_VMS -> SYST_VMS
    java.lang.String SYST_NT -> SYST_NT
    java.lang.String SYST_OS2 -> SYST_OS2
    java.lang.String SYST_OS400 -> SYST_OS400
    java.lang.String SYST_AS400 -> SYST_AS400
    java.lang.String SYST_MVS -> SYST_MVS
    java.lang.String SYST_L8 -> SYST_L8
    java.lang.String SYST_NETWARE -> SYST_NETWARE
    java.lang.String SYST_MACOS_PETER -> SYST_MACOS_PETER
    java.lang.String serverSystemKey -> a
    java.lang.String defaultDateFormatStr -> b
    java.lang.String recentDateFormatStr -> c
    boolean lenientFutureDates -> d
    java.lang.String serverLanguageCode -> e
    java.lang.String shortMonthNames -> f
    java.lang.String serverTimeZoneId -> g
    java.util.Map LANGUAGE_CODE_MAP -> h
    java.lang.String getServerSystemKey() -> getServerSystemKey
    java.lang.String getDefaultDateFormatStr() -> getDefaultDateFormatStr
    java.lang.String getRecentDateFormatStr() -> getRecentDateFormatStr
    java.lang.String getServerTimeZoneId() -> getServerTimeZoneId
    java.lang.String getShortMonthNames() -> getShortMonthNames
    java.lang.String getServerLanguageCode() -> getServerLanguageCode
    boolean isLenientFutureDates() -> isLenientFutureDates
    void setDefaultDateFormatStr(java.lang.String) -> setDefaultDateFormatStr
    void setRecentDateFormatStr(java.lang.String) -> setRecentDateFormatStr
    void setLenientFutureDates(boolean) -> setLenientFutureDates
    void setServerTimeZoneId(java.lang.String) -> setServerTimeZoneId
    void setShortMonthNames(java.lang.String) -> setShortMonthNames
    void setServerLanguageCode(java.lang.String) -> setServerLanguageCode
    java.text.DateFormatSymbols lookupDateFormatSymbols(java.lang.String) -> lookupDateFormatSymbols
    java.text.DateFormatSymbols getDateFormatSymbols(java.lang.String) -> getDateFormatSymbols
    java.lang.String[] splitShortMonthString(java.lang.String) -> a
    java.util.Collection getSupportedLanguageCodes() -> getSupportedLanguageCodes
org.apache.commons.net.ftp.FTPCmd -> org.apache.commons.net.ftp.FTPCmd:
    org.apache.commons.net.ftp.FTPCmd ABOR -> ABOR
    org.apache.commons.net.ftp.FTPCmd ACCT -> ACCT
    org.apache.commons.net.ftp.FTPCmd ALLO -> ALLO
    org.apache.commons.net.ftp.FTPCmd APPE -> APPE
    org.apache.commons.net.ftp.FTPCmd CDUP -> CDUP
    org.apache.commons.net.ftp.FTPCmd CWD -> CWD
    org.apache.commons.net.ftp.FTPCmd DELE -> DELE
    org.apache.commons.net.ftp.FTPCmd EPRT -> EPRT
    org.apache.commons.net.ftp.FTPCmd EPSV -> EPSV
    org.apache.commons.net.ftp.FTPCmd FEAT -> FEAT
    org.apache.commons.net.ftp.FTPCmd HELP -> HELP
    org.apache.commons.net.ftp.FTPCmd LIST -> LIST
    org.apache.commons.net.ftp.FTPCmd MDTM -> MDTM
    org.apache.commons.net.ftp.FTPCmd MFMT -> MFMT
    org.apache.commons.net.ftp.FTPCmd MKD -> MKD
    org.apache.commons.net.ftp.FTPCmd MLSD -> MLSD
    org.apache.commons.net.ftp.FTPCmd MLST -> MLST
    org.apache.commons.net.ftp.FTPCmd MODE -> MODE
    org.apache.commons.net.ftp.FTPCmd NLST -> NLST
    org.apache.commons.net.ftp.FTPCmd NOOP -> NOOP
    org.apache.commons.net.ftp.FTPCmd PASS -> PASS
    org.apache.commons.net.ftp.FTPCmd PASV -> PASV
    org.apache.commons.net.ftp.FTPCmd PORT -> PORT
    org.apache.commons.net.ftp.FTPCmd PWD -> PWD
    org.apache.commons.net.ftp.FTPCmd QUIT -> QUIT
    org.apache.commons.net.ftp.FTPCmd REIN -> REIN
    org.apache.commons.net.ftp.FTPCmd REST -> REST
    org.apache.commons.net.ftp.FTPCmd RETR -> RETR
    org.apache.commons.net.ftp.FTPCmd RMD -> RMD
    org.apache.commons.net.ftp.FTPCmd RNFR -> RNFR
    org.apache.commons.net.ftp.FTPCmd RNTO -> RNTO
    org.apache.commons.net.ftp.FTPCmd SITE -> SITE
    org.apache.commons.net.ftp.FTPCmd SMNT -> SMNT
    org.apache.commons.net.ftp.FTPCmd STAT -> STAT
    org.apache.commons.net.ftp.FTPCmd STOR -> STOR
    org.apache.commons.net.ftp.FTPCmd STOU -> STOU
    org.apache.commons.net.ftp.FTPCmd STRU -> STRU
    org.apache.commons.net.ftp.FTPCmd SYST -> SYST
    org.apache.commons.net.ftp.FTPCmd TYPE -> TYPE
    org.apache.commons.net.ftp.FTPCmd USER -> USER
    org.apache.commons.net.ftp.FTPCmd ABORT -> ABORT
    org.apache.commons.net.ftp.FTPCmd ACCOUNT -> ACCOUNT
    org.apache.commons.net.ftp.FTPCmd ALLOCATE -> ALLOCATE
    org.apache.commons.net.ftp.FTPCmd APPEND -> APPEND
    org.apache.commons.net.ftp.FTPCmd CHANGE_TO_PARENT_DIRECTORY -> CHANGE_TO_PARENT_DIRECTORY
    org.apache.commons.net.ftp.FTPCmd CHANGE_WORKING_DIRECTORY -> CHANGE_WORKING_DIRECTORY
    org.apache.commons.net.ftp.FTPCmd DATA_PORT -> DATA_PORT
    org.apache.commons.net.ftp.FTPCmd DELETE -> DELETE
    org.apache.commons.net.ftp.FTPCmd FEATURES -> FEATURES
    org.apache.commons.net.ftp.FTPCmd FILE_STRUCTURE -> FILE_STRUCTURE
    org.apache.commons.net.ftp.FTPCmd GET_MOD_TIME -> GET_MOD_TIME
    org.apache.commons.net.ftp.FTPCmd LOGOUT -> LOGOUT
    org.apache.commons.net.ftp.FTPCmd MAKE_DIRECTORY -> MAKE_DIRECTORY
    org.apache.commons.net.ftp.FTPCmd MOD_TIME -> MOD_TIME
    org.apache.commons.net.ftp.FTPCmd NAME_LIST -> NAME_LIST
    org.apache.commons.net.ftp.FTPCmd PASSIVE -> PASSIVE
    org.apache.commons.net.ftp.FTPCmd PASSWORD -> PASSWORD
    org.apache.commons.net.ftp.FTPCmd PRINT_WORKING_DIRECTORY -> PRINT_WORKING_DIRECTORY
    org.apache.commons.net.ftp.FTPCmd REINITIALIZE -> REINITIALIZE
    org.apache.commons.net.ftp.FTPCmd REMOVE_DIRECTORY -> REMOVE_DIRECTORY
    org.apache.commons.net.ftp.FTPCmd RENAME_FROM -> RENAME_FROM
    org.apache.commons.net.ftp.FTPCmd RENAME_TO -> RENAME_TO
    org.apache.commons.net.ftp.FTPCmd REPRESENTATION_TYPE -> REPRESENTATION_TYPE
    org.apache.commons.net.ftp.FTPCmd RESTART -> RESTART
    org.apache.commons.net.ftp.FTPCmd RETRIEVE -> RETRIEVE
    org.apache.commons.net.ftp.FTPCmd SET_MOD_TIME -> SET_MOD_TIME
    org.apache.commons.net.ftp.FTPCmd SITE_PARAMETERS -> SITE_PARAMETERS
    org.apache.commons.net.ftp.FTPCmd STATUS -> STATUS
    org.apache.commons.net.ftp.FTPCmd STORE -> STORE
    org.apache.commons.net.ftp.FTPCmd STORE_UNIQUE -> STORE_UNIQUE
    org.apache.commons.net.ftp.FTPCmd STRUCTURE_MOUNT -> STRUCTURE_MOUNT
    org.apache.commons.net.ftp.FTPCmd SYSTEM -> SYSTEM
    org.apache.commons.net.ftp.FTPCmd TRANSFER_MODE -> TRANSFER_MODE
    org.apache.commons.net.ftp.FTPCmd USERNAME -> USERNAME
    org.apache.commons.net.ftp.FTPCmd[] $VALUES -> a
    org.apache.commons.net.ftp.FTPCmd[] values() -> values
    org.apache.commons.net.ftp.FTPCmd valueOf(java.lang.String) -> valueOf
    java.lang.String getCommand() -> getCommand
org.apache.commons.net.ftp.FTPCommand -> org.apache.commons.net.ftp.FTPCommand:
    int USER -> USER
    int PASS -> PASS
    int ACCT -> ACCT
    int CWD -> CWD
    int CDUP -> CDUP
    int SMNT -> SMNT
    int REIN -> REIN
    int QUIT -> QUIT
    int PORT -> PORT
    int PASV -> PASV
    int TYPE -> TYPE
    int STRU -> STRU
    int MODE -> MODE
    int RETR -> RETR
    int STOR -> STOR
    int STOU -> STOU
    int APPE -> APPE
    int ALLO -> ALLO
    int REST -> REST
    int RNFR -> RNFR
    int RNTO -> RNTO
    int ABOR -> ABOR
    int DELE -> DELE
    int RMD -> RMD
    int MKD -> MKD
    int PWD -> PWD
    int LIST -> LIST
    int NLST -> NLST
    int SITE -> SITE
    int SYST -> SYST
    int STAT -> STAT
    int HELP -> HELP
    int NOOP -> NOOP
    int MDTM -> MDTM
    int FEAT -> FEAT
    int MFMT -> MFMT
    int EPSV -> EPSV
    int EPRT -> EPRT
    int MLSD -> MLSD
    int MLST -> MLST
    int USERNAME -> USERNAME
    int PASSWORD -> PASSWORD
    int ACCOUNT -> ACCOUNT
    int CHANGE_WORKING_DIRECTORY -> CHANGE_WORKING_DIRECTORY
    int CHANGE_TO_PARENT_DIRECTORY -> CHANGE_TO_PARENT_DIRECTORY
    int STRUCTURE_MOUNT -> STRUCTURE_MOUNT
    int REINITIALIZE -> REINITIALIZE
    int LOGOUT -> LOGOUT
    int DATA_PORT -> DATA_PORT
    int PASSIVE -> PASSIVE
    int REPRESENTATION_TYPE -> REPRESENTATION_TYPE
    int FILE_STRUCTURE -> FILE_STRUCTURE
    int TRANSFER_MODE -> TRANSFER_MODE
    int RETRIEVE -> RETRIEVE
    int STORE -> STORE
    int STORE_UNIQUE -> STORE_UNIQUE
    int APPEND -> APPEND
    int ALLOCATE -> ALLOCATE
    int RESTART -> RESTART
    int RENAME_FROM -> RENAME_FROM
    int RENAME_TO -> RENAME_TO
    int ABORT -> ABORT
    int DELETE -> DELETE
    int REMOVE_DIRECTORY -> REMOVE_DIRECTORY
    int MAKE_DIRECTORY -> MAKE_DIRECTORY
    int PRINT_WORKING_DIRECTORY -> PRINT_WORKING_DIRECTORY
    int NAME_LIST -> NAME_LIST
    int SITE_PARAMETERS -> SITE_PARAMETERS
    int SYSTEM -> SYSTEM
    int STATUS -> STATUS
    int MOD_TIME -> MOD_TIME
    int FEATURES -> FEATURES
    int GET_MOD_TIME -> GET_MOD_TIME
    int SET_MOD_TIME -> SET_MOD_TIME
    java.lang.String[] _commands -> a
    java.lang.String getCommand(int) -> getCommand
org.apache.commons.net.ftp.FTPConnectionClosedException -> org.apache.commons.net.ftp.FTPConnectionClosedException:
org.apache.commons.net.ftp.FTPFile -> org.apache.commons.net.ftp.FTPFile:
    int FILE_TYPE -> FILE_TYPE
    int DIRECTORY_TYPE -> DIRECTORY_TYPE
    int SYMBOLIC_LINK_TYPE -> SYMBOLIC_LINK_TYPE
    int UNKNOWN_TYPE -> UNKNOWN_TYPE
    int USER_ACCESS -> USER_ACCESS
    int GROUP_ACCESS -> GROUP_ACCESS
    int WORLD_ACCESS -> WORLD_ACCESS
    int READ_PERMISSION -> READ_PERMISSION
    int WRITE_PERMISSION -> WRITE_PERMISSION
    int EXECUTE_PERMISSION -> EXECUTE_PERMISSION
    int _type -> a
    int _hardLinkCount -> b
    long _size -> c
    java.lang.String _rawListing -> d
    java.lang.String _user -> e
    java.lang.String _group -> f
    java.lang.String _name -> g
    java.lang.String _link -> h
    java.util.Calendar _date -> i
    boolean[][] _permissions -> j
    void setRawListing(java.lang.String) -> setRawListing
    java.lang.String getRawListing() -> getRawListing
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    boolean isSymbolicLink() -> isSymbolicLink
    boolean isUnknown() -> isUnknown
    void setType(int) -> setType
    int getType() -> getType
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setSize(long) -> setSize
    long getSize() -> getSize
    void setHardLinkCount(int) -> setHardLinkCount
    int getHardLinkCount() -> getHardLinkCount
    void setGroup(java.lang.String) -> setGroup
    java.lang.String getGroup() -> getGroup
    void setUser(java.lang.String) -> setUser
    java.lang.String getUser() -> getUser
    void setLink(java.lang.String) -> setLink
    java.lang.String getLink() -> getLink
    void setTimestamp(java.util.Calendar) -> setTimestamp
    java.util.Calendar getTimestamp() -> getTimestamp
    void setPermission(int,int,boolean) -> setPermission
    boolean hasPermission(int,int) -> hasPermission
    java.lang.String toString() -> toString
    java.lang.String toFormattedString() -> toFormattedString
    char formatType() -> a
    java.lang.String permissionToString(int) -> a
org.apache.commons.net.ftp.FTPFileEntryParser -> org.apache.commons.net.ftp.FTPFileEntryParser:
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    java.lang.String readNextEntry(java.io.BufferedReader) -> readNextEntry
    java.util.List preParse(java.util.List) -> preParse
org.apache.commons.net.ftp.FTPFileEntryParserImpl -> org.apache.commons.net.ftp.FTPFileEntryParserImpl:
    java.lang.String readNextEntry(java.io.BufferedReader) -> readNextEntry
    java.util.List preParse(java.util.List) -> preParse
org.apache.commons.net.ftp.FTPFileFilter -> org.apache.commons.net.ftp.FTPFileFilter:
    boolean accept(org.apache.commons.net.ftp.FTPFile) -> accept
org.apache.commons.net.ftp.FTPFileFilters -> org.apache.commons.net.ftp.FTPFileFilters:
    org.apache.commons.net.ftp.FTPFileFilter ALL -> ALL
    org.apache.commons.net.ftp.FTPFileFilter NON_NULL -> NON_NULL
    org.apache.commons.net.ftp.FTPFileFilter DIRECTORIES -> DIRECTORIES
org.apache.commons.net.ftp.FTPFileFilters$1 -> org.apache.commons.net.ftp.FTPFileFilters$1:
    boolean accept(org.apache.commons.net.ftp.FTPFile) -> accept
org.apache.commons.net.ftp.FTPFileFilters$2 -> org.apache.commons.net.ftp.FTPFileFilters$2:
    boolean accept(org.apache.commons.net.ftp.FTPFile) -> accept
org.apache.commons.net.ftp.FTPFileFilters$3 -> org.apache.commons.net.ftp.FTPFileFilters$3:
    boolean accept(org.apache.commons.net.ftp.FTPFile) -> accept
org.apache.commons.net.ftp.FTPHTTPClient -> org.apache.commons.net.ftp.FTPHTTPClient:
    java.lang.String proxyHost -> r
    int proxyPort -> s
    java.lang.String proxyUsername -> t
    java.lang.String proxyPassword -> u
    byte[] CRLF -> v
    org.apache.commons.net.util.Base64 base64 -> w
    java.lang.String tunnelHost -> x
    java.net.Socket _openDataConnection_(java.lang.String,java.lang.String) -> c
    void connect(java.lang.String,int) -> connect
    void tunnelHandshake(java.lang.String,int,java.io.InputStream,java.io.OutputStream) -> a
org.apache.commons.net.ftp.FTPListParseEngine -> org.apache.commons.net.ftp.FTPListParseEngine:
    java.util.List entries -> a
    java.util.ListIterator _internalIterator -> b
    org.apache.commons.net.ftp.FTPFileEntryParser parser -> c
    void readServerList(java.io.InputStream,java.lang.String) -> readServerList
    void readStream(java.io.InputStream,java.lang.String) -> a
    org.apache.commons.net.ftp.FTPFile[] getNext(int) -> getNext
    org.apache.commons.net.ftp.FTPFile[] getPrevious(int) -> getPrevious
    org.apache.commons.net.ftp.FTPFile[] getFiles() -> getFiles
    org.apache.commons.net.ftp.FTPFile[] getFiles(org.apache.commons.net.ftp.FTPFileFilter) -> getFiles
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    void resetIterator() -> resetIterator
    void readServerList(java.io.InputStream) -> readServerList
org.apache.commons.net.ftp.FTPReply -> org.apache.commons.net.ftp.FTPReply:
    int RESTART_MARKER -> RESTART_MARKER
    int SERVICE_NOT_READY -> SERVICE_NOT_READY
    int DATA_CONNECTION_ALREADY_OPEN -> DATA_CONNECTION_ALREADY_OPEN
    int FILE_STATUS_OK -> FILE_STATUS_OK
    int COMMAND_OK -> COMMAND_OK
    int COMMAND_IS_SUPERFLUOUS -> COMMAND_IS_SUPERFLUOUS
    int SYSTEM_STATUS -> SYSTEM_STATUS
    int DIRECTORY_STATUS -> DIRECTORY_STATUS
    int FILE_STATUS -> FILE_STATUS
    int HELP_MESSAGE -> HELP_MESSAGE
    int NAME_SYSTEM_TYPE -> NAME_SYSTEM_TYPE
    int SERVICE_READY -> SERVICE_READY
    int SERVICE_CLOSING_CONTROL_CONNECTION -> SERVICE_CLOSING_CONTROL_CONNECTION
    int DATA_CONNECTION_OPEN -> DATA_CONNECTION_OPEN
    int CLOSING_DATA_CONNECTION -> CLOSING_DATA_CONNECTION
    int ENTERING_PASSIVE_MODE -> ENTERING_PASSIVE_MODE
    int ENTERING_EPSV_MODE -> ENTERING_EPSV_MODE
    int USER_LOGGED_IN -> USER_LOGGED_IN
    int FILE_ACTION_OK -> FILE_ACTION_OK
    int PATHNAME_CREATED -> PATHNAME_CREATED
    int NEED_PASSWORD -> NEED_PASSWORD
    int NEED_ACCOUNT -> NEED_ACCOUNT
    int FILE_ACTION_PENDING -> FILE_ACTION_PENDING
    int SERVICE_NOT_AVAILABLE -> SERVICE_NOT_AVAILABLE
    int CANNOT_OPEN_DATA_CONNECTION -> CANNOT_OPEN_DATA_CONNECTION
    int TRANSFER_ABORTED -> TRANSFER_ABORTED
    int FILE_ACTION_NOT_TAKEN -> FILE_ACTION_NOT_TAKEN
    int ACTION_ABORTED -> ACTION_ABORTED
    int INSUFFICIENT_STORAGE -> INSUFFICIENT_STORAGE
    int UNRECOGNIZED_COMMAND -> UNRECOGNIZED_COMMAND
    int SYNTAX_ERROR_IN_ARGUMENTS -> SYNTAX_ERROR_IN_ARGUMENTS
    int COMMAND_NOT_IMPLEMENTED -> COMMAND_NOT_IMPLEMENTED
    int BAD_COMMAND_SEQUENCE -> BAD_COMMAND_SEQUENCE
    int COMMAND_NOT_IMPLEMENTED_FOR_PARAMETER -> COMMAND_NOT_IMPLEMENTED_FOR_PARAMETER
    int NOT_LOGGED_IN -> NOT_LOGGED_IN
    int NEED_ACCOUNT_FOR_STORING_FILES -> NEED_ACCOUNT_FOR_STORING_FILES
    int FILE_UNAVAILABLE -> FILE_UNAVAILABLE
    int PAGE_TYPE_UNKNOWN -> PAGE_TYPE_UNKNOWN
    int STORAGE_ALLOCATION_EXCEEDED -> STORAGE_ALLOCATION_EXCEEDED
    int FILE_NAME_NOT_ALLOWED -> FILE_NAME_NOT_ALLOWED
    int SECURITY_DATA_EXCHANGE_COMPLETE -> SECURITY_DATA_EXCHANGE_COMPLETE
    int SECURITY_DATA_EXCHANGE_SUCCESSFULLY -> SECURITY_DATA_EXCHANGE_SUCCESSFULLY
    int SECURITY_MECHANISM_IS_OK -> SECURITY_MECHANISM_IS_OK
    int SECURITY_DATA_IS_ACCEPTABLE -> SECURITY_DATA_IS_ACCEPTABLE
    int UNAVAILABLE_RESOURCE -> UNAVAILABLE_RESOURCE
    int BAD_TLS_NEGOTIATION_OR_DATA_ENCRYPTION_REQUIRED -> BAD_TLS_NEGOTIATION_OR_DATA_ENCRYPTION_REQUIRED
    int DENIED_FOR_POLICY_REASONS -> DENIED_FOR_POLICY_REASONS
    int REQUEST_DENIED -> REQUEST_DENIED
    int FAILED_SECURITY_CHECK -> FAILED_SECURITY_CHECK
    int REQUESTED_PROT_LEVEL_NOT_SUPPORTED -> REQUESTED_PROT_LEVEL_NOT_SUPPORTED
    int EXTENDED_PORT_FAILURE -> EXTENDED_PORT_FAILURE
    boolean isPositivePreliminary(int) -> isPositivePreliminary
    boolean isPositiveCompletion(int) -> isPositiveCompletion
    boolean isPositiveIntermediate(int) -> isPositiveIntermediate
    boolean isNegativeTransient(int) -> isNegativeTransient
    boolean isNegativePermanent(int) -> isNegativePermanent
    boolean isProtectedReplyCode(int) -> isProtectedReplyCode
org.apache.commons.net.ftp.FTPSClient -> org.apache.commons.net.ftp.FTPSClient:
    int DEFAULT_FTPS_DATA_PORT -> DEFAULT_FTPS_DATA_PORT
    int DEFAULT_FTPS_PORT -> DEFAULT_FTPS_PORT
    java.lang.String[] PROT_COMMAND_VALUE -> r
    boolean isImplicit -> s
    java.lang.String protocol -> t
    java.lang.String auth -> u
    javax.net.ssl.SSLContext context -> v
    java.net.Socket plainSocket -> w
    boolean isCreation -> x
    boolean isClientMode -> y
    boolean isNeedClientAuth -> z
    boolean isWantClientAuth -> A
    java.lang.String[] suites -> B
    java.lang.String[] protocols -> C
    javax.net.ssl.TrustManager trustManager -> D
    javax.net.ssl.KeyManager keyManager -> E
    java.lang.String KEYSTORE_ALGORITHM -> KEYSTORE_ALGORITHM
    java.lang.String TRUSTSTORE_ALGORITHM -> TRUSTSTORE_ALGORITHM
    java.lang.String PROVIDER -> PROVIDER
    java.lang.String STORE_TYPE -> STORE_TYPE
    void setAuthValue(java.lang.String) -> setAuthValue
    java.lang.String getAuthValue() -> getAuthValue
    void _connectAction_() -> a
    void execAUTH() -> f
    void initSslContext() -> h
    void sslNegotiation() -> g
    javax.net.ssl.KeyManager getKeyManager() -> i
    void setKeyManager(javax.net.ssl.KeyManager) -> setKeyManager
    void setEnabledSessionCreation(boolean) -> setEnabledSessionCreation
    boolean getEnableSessionCreation() -> getEnableSessionCreation
    void setNeedClientAuth(boolean) -> setNeedClientAuth
    boolean getNeedClientAuth() -> getNeedClientAuth
    void setWantClientAuth(boolean) -> setWantClientAuth
    boolean getWantClientAuth() -> getWantClientAuth
    void setUseClientMode(boolean) -> setUseClientMode
    boolean getUseClientMode() -> getUseClientMode
    void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    void execPBSZ(long) -> execPBSZ
    long parsePBSZ(long) -> parsePBSZ
    void execPROT(java.lang.String) -> execPROT
    boolean checkPROTValue(java.lang.String) -> e
    int sendCommand(java.lang.String,java.lang.String) -> sendCommand
    java.net.Socket _openDataConnection_(java.lang.String,java.lang.String) -> c
    void _prepareDataSocket_(java.net.Socket) -> a
    javax.net.ssl.TrustManager getTrustManager() -> getTrustManager
    void setTrustManager(javax.net.ssl.TrustManager) -> setTrustManager
    void disconnect() -> disconnect
    int execAUTH(java.lang.String) -> execAUTH
    int execADAT(byte[]) -> execADAT
    int execCCC() -> execCCC
    int execMIC(byte[]) -> execMIC
    int execCONF(byte[]) -> execCONF
    int execENC(byte[]) -> execENC
    byte[] parseADATReply(java.lang.String) -> parseADATReply
    java.lang.String extractPrefixedData(java.lang.String,java.lang.String) -> e
org.apache.commons.net.ftp.FTPSCommand -> org.apache.commons.net.ftp.FTPSCommand:
    int AUTH -> AUTH
    int ADAT -> ADAT
    int PBSZ -> PBSZ
    int PROT -> PROT
    int CCC -> CCC
    int AUTHENTICATION_SECURITY_MECHANISM -> AUTHENTICATION_SECURITY_MECHANISM
    int AUTHENTICATION_SECURITY_DATA -> AUTHENTICATION_SECURITY_DATA
    int PROTECTION_BUFFER_SIZE -> PROTECTION_BUFFER_SIZE
    int DATA_CHANNEL_PROTECTION_LEVEL -> DATA_CHANNEL_PROTECTION_LEVEL
    int CLEAR_COMMAND_CHANNEL -> CLEAR_COMMAND_CHANNEL
    java.lang.String[] _commands -> a
    java.lang.String getCommand(int) -> getCommand
org.apache.commons.net.ftp.FTPSServerSocketFactory -> org.apache.commons.net.ftp.FTPSServerSocketFactory:
    javax.net.ssl.SSLContext context -> a
    java.net.ServerSocket createServerSocket() -> createServerSocket
    java.net.ServerSocket createServerSocket(int) -> createServerSocket
    java.net.ServerSocket createServerSocket(int,int) -> createServerSocket
    java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress) -> createServerSocket
    java.net.ServerSocket init(java.net.ServerSocket) -> init
org.apache.commons.net.ftp.FTPSSocketFactory -> org.apache.commons.net.ftp.FTPSSocketFactory:
    javax.net.ssl.SSLContext context -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.ServerSocket createServerSocket(int) -> createServerSocket
    java.net.ServerSocket createServerSocket(int,int) -> createServerSocket
    java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress) -> createServerSocket
    java.net.ServerSocket init(java.net.ServerSocket) -> init
org.apache.commons.net.ftp.FTPSTrustManager -> org.apache.commons.net.ftp.FTPSTrustManager:
    java.security.cert.X509Certificate[] EMPTY_X509CERTIFICATE_ARRAY -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
org.apache.commons.net.ftp.parser.CompositeFileEntryParser -> org.apache.commons.net.ftp.parser.CompositeFileEntryParser:
    org.apache.commons.net.ftp.FTPFileEntryParser[] ftpFileEntryParsers -> a
    org.apache.commons.net.ftp.FTPFileEntryParser cachedFtpFileEntryParser -> b
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
org.apache.commons.net.ftp.parser.ConfigurableFTPFileEntryParserImpl -> org.apache.commons.net.ftp.parser.ConfigurableFTPFileEntryParserImpl:
    org.apache.commons.net.ftp.parser.FTPTimestampParser timestampParser -> b
    java.util.Calendar parseTimestamp(java.lang.String) -> parseTimestamp
    void configure(org.apache.commons.net.ftp.FTPClientConfig) -> configure
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory -> org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory:
    java.util.regex.Pattern JAVA_QUALIFIED_NAME_PATTERN -> a
    org.apache.commons.net.ftp.FTPFileEntryParser createFileEntryParser(java.lang.String) -> createFileEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createFileEntryParser(java.lang.String,org.apache.commons.net.ftp.FTPClientConfig) -> a
    org.apache.commons.net.ftp.FTPFileEntryParser createFileEntryParser(org.apache.commons.net.ftp.FTPClientConfig) -> createFileEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createUnixFTPEntryParser() -> createUnixFTPEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createVMSVersioningFTPEntryParser() -> createVMSVersioningFTPEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createNetwareFTPEntryParser() -> createNetwareFTPEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createNTFTPEntryParser() -> createNTFTPEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createNTFTPEntryParser(org.apache.commons.net.ftp.FTPClientConfig) -> a
    org.apache.commons.net.ftp.FTPFileEntryParser createOS2FTPEntryParser() -> createOS2FTPEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createOS400FTPEntryParser() -> createOS400FTPEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createOS400FTPEntryParser(org.apache.commons.net.ftp.FTPClientConfig) -> b
    org.apache.commons.net.ftp.FTPFileEntryParser createMVSEntryParser() -> createMVSEntryParser
org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser -> org.apache.commons.net.ftp.parser.EnterpriseUnixFTPEntryParser:
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory -> org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory:
    org.apache.commons.net.ftp.FTPFileEntryParser createFileEntryParser(java.lang.String) -> createFileEntryParser
    org.apache.commons.net.ftp.FTPFileEntryParser createFileEntryParser(org.apache.commons.net.ftp.FTPClientConfig) -> createFileEntryParser
org.apache.commons.net.ftp.parser.FTPTimestampParser -> org.apache.commons.net.ftp.parser.FTPTimestampParser:
    java.lang.String DEFAULT_SDF -> DEFAULT_SDF
    java.lang.String DEFAULT_RECENT_SDF -> DEFAULT_RECENT_SDF
    java.util.Calendar parseTimestamp(java.lang.String) -> parseTimestamp
org.apache.commons.net.ftp.parser.FTPTimestampParserImpl -> org.apache.commons.net.ftp.parser.FTPTimestampParserImpl:
    java.text.SimpleDateFormat defaultDateFormat -> a
    java.text.SimpleDateFormat recentDateFormat -> b
    boolean lenientFutureDates -> c
    java.util.Calendar parseTimestamp(java.lang.String) -> parseTimestamp
    java.util.Calendar parseTimestamp(java.lang.String,java.util.Calendar) -> parseTimestamp
    java.text.SimpleDateFormat getDefaultDateFormat() -> getDefaultDateFormat
    java.lang.String getDefaultDateFormatString() -> getDefaultDateFormatString
    void setDefaultDateFormat(java.lang.String) -> a
    java.text.SimpleDateFormat getRecentDateFormat() -> getRecentDateFormat
    java.lang.String getRecentDateFormatString() -> getRecentDateFormatString
    void setRecentDateFormat(java.lang.String) -> b
    java.lang.String[] getShortMonths() -> getShortMonths
    java.util.TimeZone getServerTimeZone() -> getServerTimeZone
    void setServerTimeZone(java.lang.String) -> c
    void configure(org.apache.commons.net.ftp.FTPClientConfig) -> configure
org.apache.commons.net.ftp.parser.MLSxEntryParser -> org.apache.commons.net.ftp.parser.MLSxEntryParser:
    org.apache.commons.net.ftp.parser.MLSxEntryParser PARSER -> a
    java.util.HashMap TYPE_TO_INT -> b
    int[] UNIX_GROUPS -> c
    int[][] UNIX_PERMS -> d
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    void doUnixPerms(org.apache.commons.net.ftp.FTPFile,java.lang.String) -> a
    org.apache.commons.net.ftp.FTPFile parseEntry(java.lang.String) -> parseEntry
    org.apache.commons.net.ftp.parser.MLSxEntryParser getInstance() -> getInstance
org.apache.commons.net.ftp.parser.MVSFTPEntryParser -> org.apache.commons.net.ftp.parser.MVSFTPEntryParser:
    int isType -> b
    org.apache.commons.net.ftp.parser.UnixFTPEntryParser unixFTPEntryParser -> c
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    boolean parseFileList(org.apache.commons.net.ftp.FTPFile,java.lang.String) -> a
    boolean parseMemberList(org.apache.commons.net.ftp.FTPFile,java.lang.String) -> b
    boolean parseSimpleEntry(org.apache.commons.net.ftp.FTPFile,java.lang.String) -> c
    boolean parseUnixList(org.apache.commons.net.ftp.FTPFile,java.lang.String) -> d
    boolean parseJeslevel1List(org.apache.commons.net.ftp.FTPFile,java.lang.String) -> e
    boolean parseJeslevel2List(org.apache.commons.net.ftp.FTPFile,java.lang.String) -> f
    java.util.List preParse(java.util.List) -> preParse
    void setType(int) -> a
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.MacOsPeterFTPEntryParser -> org.apache.commons.net.ftp.parser.MacOsPeterFTPEntryParser:
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.NTFTPEntryParser -> org.apache.commons.net.ftp.parser.NTFTPEntryParser:
    org.apache.commons.net.ftp.parser.FTPTimestampParser timestampParser -> b
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.NetwareFTPEntryParser -> org.apache.commons.net.ftp.parser.NetwareFTPEntryParser:
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.OS2FTPEntryParser -> org.apache.commons.net.ftp.parser.OS2FTPEntryParser:
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.OS400FTPEntryParser -> org.apache.commons.net.ftp.parser.OS400FTPEntryParser:
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.ParserInitializationException -> org.apache.commons.net.ftp.parser.ParserInitializationException:
    java.lang.Throwable getRootCause() -> getRootCause
org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl -> org.apache.commons.net.ftp.parser.RegexFTPFileEntryParserImpl:
    java.util.regex.Pattern pattern -> b
    java.util.regex.MatchResult result -> c
    java.util.regex.Matcher _matcher_ -> a
    boolean matches(java.lang.String) -> matches
    int getGroupCnt() -> getGroupCnt
    java.lang.String group(int) -> group
    java.lang.String getGroupsAsString() -> getGroupsAsString
    boolean setRegex(java.lang.String) -> setRegex
org.apache.commons.net.ftp.parser.UnixFTPEntryParser -> org.apache.commons.net.ftp.parser.UnixFTPEntryParser:
    org.apache.commons.net.ftp.FTPClientConfig NUMERIC_DATE_CONFIG -> NUMERIC_DATE_CONFIG
    java.util.List preParse(java.util.List) -> preParse
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
org.apache.commons.net.ftp.parser.VMSFTPEntryParser -> org.apache.commons.net.ftp.parser.VMSFTPEntryParser:
    org.apache.commons.net.ftp.FTPFile parseFTPEntry(java.lang.String) -> parseFTPEntry
    java.lang.String readNextEntry(java.io.BufferedReader) -> readNextEntry
    boolean isVersioning() -> a
    org.apache.commons.net.ftp.FTPClientConfig getDefaultConfiguration() -> getDefaultConfiguration
    org.apache.commons.net.ftp.FTPFile[] parseFileList(java.io.InputStream) -> parseFileList
org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser -> org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser:
    java.util.regex.Pattern _preparse_pattern_ -> b
    java.util.List preParse(java.util.List) -> preParse
    boolean isVersioning() -> a
org.apache.commons.net.imap.AuthenticatingIMAPClient -> org.apache.commons.net.imap.AuthenticatingIMAPClient:
    boolean authenticate(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String) -> authenticate
    boolean auth(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String) -> auth
    java.lang.String _convertToHexString(byte[]) -> a
org.apache.commons.net.imap.AuthenticatingIMAPClient$1 -> org.apache.commons.net.imap.AuthenticatingIMAPClient$1:
    int[] $SwitchMap$org$apache$commons$net$imap$AuthenticatingIMAPClient$AUTH_METHOD -> a
org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD -> org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD:
    org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD PLAIN -> PLAIN
    org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD CRAM_MD5 -> CRAM_MD5
    org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD LOGIN -> LOGIN
    org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD XOAUTH -> XOAUTH
    java.lang.String authName -> a
    org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD[] $VALUES -> b
    org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD[] values() -> values
    org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD valueOf(java.lang.String) -> valueOf
    java.lang.String getAuthName() -> getAuthName
org.apache.commons.net.imap.IMAP -> org.apache.commons.net.imap.IMAP:
    int DEFAULT_PORT -> DEFAULT_PORT
    org.apache.commons.net.imap.IMAP$IMAPState __state -> k
    java.io.BufferedWriter __writer -> i
    java.io.BufferedReader _reader -> j
    int _replyCode -> l
    java.util.List _replyLines -> m
    char[] _initialID -> n
    void __getReply() -> e
    void __getReply(boolean) -> a
    void _connectAction_() -> a
    void setState(org.apache.commons.net.imap.IMAP$IMAPState) -> a
    org.apache.commons.net.imap.IMAP$IMAPState getState() -> getState
    void disconnect() -> disconnect
    int sendCommandWithID(java.lang.String,java.lang.String,java.lang.String) -> a
    int sendCommand(java.lang.String,java.lang.String) -> sendCommand
    int sendCommand(java.lang.String) -> sendCommand
    int sendCommand(org.apache.commons.net.imap.IMAPCommand,java.lang.String) -> sendCommand
    boolean doCommand(org.apache.commons.net.imap.IMAPCommand,java.lang.String) -> doCommand
    int sendCommand(org.apache.commons.net.imap.IMAPCommand) -> sendCommand
    boolean doCommand(org.apache.commons.net.imap.IMAPCommand) -> doCommand
    int sendData(java.lang.String) -> sendData
    java.lang.String[] getReplyStrings() -> getReplyStrings
    java.lang.String getReplyString() -> getReplyString
    java.lang.String generateCommandID() -> d
org.apache.commons.net.imap.IMAP$IMAPState -> org.apache.commons.net.imap.IMAP$IMAPState:
    org.apache.commons.net.imap.IMAP$IMAPState DISCONNECTED_STATE -> DISCONNECTED_STATE
    org.apache.commons.net.imap.IMAP$IMAPState NOT_AUTH_STATE -> NOT_AUTH_STATE
    org.apache.commons.net.imap.IMAP$IMAPState AUTH_STATE -> AUTH_STATE
    org.apache.commons.net.imap.IMAP$IMAPState LOGOUT_STATE -> LOGOUT_STATE
    org.apache.commons.net.imap.IMAP$IMAPState[] $VALUES -> a
    org.apache.commons.net.imap.IMAP$IMAPState[] values() -> values
    org.apache.commons.net.imap.IMAP$IMAPState valueOf(java.lang.String) -> valueOf
org.apache.commons.net.imap.IMAPClient -> org.apache.commons.net.imap.IMAPClient:
    boolean capability() -> capability
    boolean noop() -> noop
    boolean logout() -> logout
    boolean login(java.lang.String,java.lang.String) -> login
    boolean select(java.lang.String) -> select
    boolean examine(java.lang.String) -> examine
    boolean create(java.lang.String) -> create
    boolean delete(java.lang.String) -> delete
    boolean rename(java.lang.String,java.lang.String) -> rename
    boolean subscribe(java.lang.String) -> subscribe
    boolean unsubscribe(java.lang.String) -> unsubscribe
    boolean list(java.lang.String,java.lang.String) -> list
    boolean lsub(java.lang.String,java.lang.String) -> lsub
    boolean status(java.lang.String,java.lang.String[]) -> status
    boolean append(java.lang.String,java.lang.String,java.lang.String) -> append
    boolean append(java.lang.String) -> append
    boolean check() -> check
    boolean close() -> close
    boolean expunge() -> expunge
    boolean search(java.lang.String,java.lang.String) -> search
    boolean search(java.lang.String) -> search
    boolean fetch(java.lang.String,java.lang.String) -> fetch
    boolean store(java.lang.String,java.lang.String,java.lang.String) -> store
    boolean copy(java.lang.String,java.lang.String) -> copy
    boolean uid(java.lang.String,java.lang.String) -> uid
org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES -> org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES:
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES ALL -> ALL
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES FAST -> FAST
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES FULL -> FULL
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES BODY -> BODY
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES BODYSTRUCTURE -> BODYSTRUCTURE
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES ENVELOPE -> ENVELOPE
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES FLAGS -> FLAGS
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES INTERNALDATE -> INTERNALDATE
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES RFC822 -> RFC822
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES UID -> UID
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES[] $VALUES -> a
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES[] values() -> values
    org.apache.commons.net.imap.IMAPClient$FETCH_ITEM_NAMES valueOf(java.lang.String) -> valueOf
org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA -> org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA:
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA ALL -> ALL
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA ANSWERED -> ANSWERED
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA BCC -> BCC
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA BEFORE -> BEFORE
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA BODY -> BODY
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA CC -> CC
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA DELETED -> DELETED
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA DRAFT -> DRAFT
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA FLAGGED -> FLAGGED
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA FROM -> FROM
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA HEADER -> HEADER
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA KEYWORD -> KEYWORD
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA LARGER -> LARGER
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA NEW -> NEW
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA NOT -> NOT
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA OLD -> OLD
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA ON -> ON
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA OR -> OR
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA RECENT -> RECENT
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA SEEN -> SEEN
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA SENTBEFORE -> SENTBEFORE
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA SENTON -> SENTON
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA SENTSINCE -> SENTSINCE
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA SINCE -> SINCE
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA SMALLER -> SMALLER
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA SUBJECT -> SUBJECT
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA TEXT -> TEXT
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA TO -> TO
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA UID -> UID
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA UNANSWERED -> UNANSWERED
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA UNDELETED -> UNDELETED
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA UNDRAFT -> UNDRAFT
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA UNFLAGGED -> UNFLAGGED
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA UNKEYWORD -> UNKEYWORD
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA UNSEEN -> UNSEEN
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA[] $VALUES -> a
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA[] values() -> values
    org.apache.commons.net.imap.IMAPClient$SEARCH_CRITERIA valueOf(java.lang.String) -> valueOf
org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS -> org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS:
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS MESSAGES -> MESSAGES
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS RECENT -> RECENT
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS UIDNEXT -> UIDNEXT
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS UIDVALIDITY -> UIDVALIDITY
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS UNSEEN -> UNSEEN
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS[] $VALUES -> a
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS[] values() -> values
    org.apache.commons.net.imap.IMAPClient$STATUS_DATA_ITEMS valueOf(java.lang.String) -> valueOf
org.apache.commons.net.imap.IMAPCommand -> org.apache.commons.net.imap.IMAPCommand:
    org.apache.commons.net.imap.IMAPCommand CAPABILITY -> CAPABILITY
    org.apache.commons.net.imap.IMAPCommand NOOP -> NOOP
    org.apache.commons.net.imap.IMAPCommand LOGOUT -> LOGOUT
    org.apache.commons.net.imap.IMAPCommand STARTTLS -> STARTTLS
    org.apache.commons.net.imap.IMAPCommand AUTHENTICATE -> AUTHENTICATE
    org.apache.commons.net.imap.IMAPCommand LOGIN -> LOGIN
    org.apache.commons.net.imap.IMAPCommand XOAUTH -> XOAUTH
    org.apache.commons.net.imap.IMAPCommand SELECT -> SELECT
    org.apache.commons.net.imap.IMAPCommand EXAMINE -> EXAMINE
    org.apache.commons.net.imap.IMAPCommand CREATE -> CREATE
    org.apache.commons.net.imap.IMAPCommand DELETE -> DELETE
    org.apache.commons.net.imap.IMAPCommand RENAME -> RENAME
    org.apache.commons.net.imap.IMAPCommand SUBSCRIBE -> SUBSCRIBE
    org.apache.commons.net.imap.IMAPCommand UNSUBSCRIBE -> UNSUBSCRIBE
    org.apache.commons.net.imap.IMAPCommand LIST -> LIST
    org.apache.commons.net.imap.IMAPCommand LSUB -> LSUB
    org.apache.commons.net.imap.IMAPCommand STATUS -> STATUS
    org.apache.commons.net.imap.IMAPCommand APPEND -> APPEND
    org.apache.commons.net.imap.IMAPCommand CHECK -> CHECK
    org.apache.commons.net.imap.IMAPCommand CLOSE -> CLOSE
    org.apache.commons.net.imap.IMAPCommand EXPUNGE -> EXPUNGE
    org.apache.commons.net.imap.IMAPCommand SEARCH -> SEARCH
    org.apache.commons.net.imap.IMAPCommand FETCH -> FETCH
    org.apache.commons.net.imap.IMAPCommand STORE -> STORE
    org.apache.commons.net.imap.IMAPCommand COPY -> COPY
    org.apache.commons.net.imap.IMAPCommand UID -> UID
    java.lang.String imapCommand -> a
    int minParamCount -> b
    int maxParamCount -> c
    org.apache.commons.net.imap.IMAPCommand[] $VALUES -> d
    org.apache.commons.net.imap.IMAPCommand[] values() -> values
    org.apache.commons.net.imap.IMAPCommand valueOf(java.lang.String) -> valueOf
    java.lang.String getCommand(org.apache.commons.net.imap.IMAPCommand) -> getCommand
    java.lang.String getIMAPCommand() -> getIMAPCommand
org.apache.commons.net.imap.IMAPReply -> org.apache.commons.net.imap.IMAPReply:
    int OK -> OK
    int NO -> NO
    int BAD -> BAD
    int CONT -> CONT
    java.util.regex.Pattern TAGGED_PATTERN -> a
    java.util.regex.Pattern UNTAGGED_PATTERN -> b
    java.util.regex.Pattern LITERAL_PATTERN -> c
    boolean isUntagged(java.lang.String) -> isUntagged
    boolean isContinuation(java.lang.String) -> isContinuation
    int getReplyCode(java.lang.String) -> getReplyCode
    int literalCount(java.lang.String) -> literalCount
    int getUntaggedReplyCode(java.lang.String) -> getUntaggedReplyCode
    int getReplyCode(java.lang.String,java.util.regex.Pattern) -> a
    boolean isSuccess(int) -> isSuccess
    boolean isContinuation(int) -> isContinuation
org.apache.commons.net.imap.IMAPSClient -> org.apache.commons.net.imap.IMAPSClient:
    int DEFAULT_IMAPS_PORT -> DEFAULT_IMAPS_PORT
    java.lang.String DEFAULT_PROTOCOL -> DEFAULT_PROTOCOL
    boolean isImplicit -> k
    java.lang.String protocol -> l
    javax.net.ssl.SSLContext context -> m
    java.lang.String[] suites -> n
    java.lang.String[] protocols -> o
    javax.net.ssl.TrustManager trustManager -> p
    javax.net.ssl.KeyManager keyManager -> q
    void _connectAction_() -> a
    void initSSLContext() -> e
    void performSSLNegotiation() -> f
    javax.net.ssl.KeyManager getKeyManager() -> g
    void setKeyManager(javax.net.ssl.KeyManager) -> setKeyManager
    void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    boolean execTLS() -> execTLS
    javax.net.ssl.TrustManager getTrustManager() -> getTrustManager
    void setTrustManager(javax.net.ssl.TrustManager) -> setTrustManager
org.apache.commons.net.io.CRLFLineReader -> org.apache.commons.net.io.CRLFLineReader:
    java.lang.String readLine() -> readLine
org.apache.commons.net.io.CopyStreamAdapter -> org.apache.commons.net.io.CopyStreamAdapter:
    org.apache.commons.net.util.ListenerList internalListeners -> a
    void bytesTransferred(org.apache.commons.net.io.CopyStreamEvent) -> bytesTransferred
    void bytesTransferred(long,int,long) -> bytesTransferred
    void addCopyStreamListener(org.apache.commons.net.io.CopyStreamListener) -> addCopyStreamListener
    void removeCopyStreamListener(org.apache.commons.net.io.CopyStreamListener) -> removeCopyStreamListener
org.apache.commons.net.io.CopyStreamEvent -> org.apache.commons.net.io.CopyStreamEvent:
    long UNKNOWN_STREAM_SIZE -> UNKNOWN_STREAM_SIZE
    int bytesTransferred -> a
    long totalBytesTransferred -> b
    long streamSize -> c
    int getBytesTransferred() -> getBytesTransferred
    long getTotalBytesTransferred() -> getTotalBytesTransferred
    long getStreamSize() -> getStreamSize
    java.lang.String toString() -> toString
org.apache.commons.net.io.CopyStreamException -> org.apache.commons.net.io.CopyStreamException:
    long totalBytesTransferred -> a
    long getTotalBytesTransferred() -> getTotalBytesTransferred
    java.io.IOException getIOException() -> getIOException
org.apache.commons.net.io.CopyStreamListener -> org.apache.commons.net.io.CopyStreamListener:
    void bytesTransferred(org.apache.commons.net.io.CopyStreamEvent) -> bytesTransferred
    void bytesTransferred(long,int,long) -> bytesTransferred
org.apache.commons.net.io.DotTerminatedMessageReader -> org.apache.commons.net.io.DotTerminatedMessageReader:
    boolean atBeginning -> a
    boolean eof -> b
    boolean seenCR -> c
    int read() -> read
    int read(char[]) -> read
    int read(char[],int,int) -> read
    void close() -> close
    java.lang.String readLine() -> readLine
org.apache.commons.net.io.DotTerminatedMessageWriter -> org.apache.commons.net.io.DotTerminatedMessageWriter:
    int __state -> a
    java.io.Writer __output -> b
    void write(int) -> write
    void write(char[],int,int) -> write
    void write(char[]) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.net.io.FromNetASCIIInputStream -> org.apache.commons.net.io.FromNetASCIIInputStream:
    boolean _noConversionRequired -> a
    java.lang.String _lineSeparator -> b
    byte[] _lineSeparatorBytes -> c
    int __length -> d
    boolean isConversionRequired() -> isConversionRequired
    int __read() -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    int available() -> available
org.apache.commons.net.io.FromNetASCIIOutputStream -> org.apache.commons.net.io.FromNetASCIIOutputStream:
    boolean __lastWasCR -> a
    void __write(int) -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void close() -> close
org.apache.commons.net.io.SocketInputStream -> org.apache.commons.net.io.SocketInputStream:
    java.net.Socket __socket -> a
    void close() -> close
org.apache.commons.net.io.SocketOutputStream -> org.apache.commons.net.io.SocketOutputStream:
    java.net.Socket __socket -> a
    void write(byte[],int,int) -> write
    void close() -> close
org.apache.commons.net.io.ToNetASCIIInputStream -> org.apache.commons.net.io.ToNetASCIIInputStream:
    int __status -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
org.apache.commons.net.io.ToNetASCIIOutputStream -> org.apache.commons.net.io.ToNetASCIIOutputStream:
    boolean __lastWasCR -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
org.apache.commons.net.io.Util -> org.apache.commons.net.io.Util:
    int DEFAULT_COPY_BUFFER_SIZE -> DEFAULT_COPY_BUFFER_SIZE
    long copyStream(java.io.InputStream,java.io.OutputStream,int,long,org.apache.commons.net.io.CopyStreamListener,boolean) -> copyStream
    long copyStream(java.io.InputStream,java.io.OutputStream,int,long,org.apache.commons.net.io.CopyStreamListener) -> copyStream
    long copyStream(java.io.InputStream,java.io.OutputStream,int) -> copyStream
    long copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    long copyReader(java.io.Reader,java.io.Writer,int,long,org.apache.commons.net.io.CopyStreamListener) -> copyReader
    long copyReader(java.io.Reader,java.io.Writer,int) -> copyReader
    long copyReader(java.io.Reader,java.io.Writer) -> copyReader
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(java.net.Socket) -> closeQuietly
org.apache.commons.net.nntp.Article -> org.apache.commons.net.nntp.Article:
    long articleNumber -> a
    java.lang.String subject -> b
    java.lang.String date -> c
    java.lang.String articleId -> d
    java.lang.String simplifiedSubject -> e
    java.lang.String from -> f
    java.util.ArrayList references -> g
    boolean isReply -> h
    org.apache.commons.net.nntp.Article kid -> kid
    org.apache.commons.net.nntp.Article next -> next
    void addReference(java.lang.String) -> addReference
    java.lang.String[] getReferences() -> getReferences
    void simplifySubject() -> a
    void printThread(org.apache.commons.net.nntp.Article,int) -> printThread
    java.lang.String getArticleId() -> getArticleId
    long getArticleNumberLong() -> getArticleNumberLong
    java.lang.String getDate() -> getDate
    java.lang.String getFrom() -> getFrom
    java.lang.String getSubject() -> getSubject
    void setArticleId(java.lang.String) -> setArticleId
    void setArticleNumber(long) -> setArticleNumber
    void setDate(java.lang.String) -> setDate
    void setFrom(java.lang.String) -> setFrom
    void setSubject(java.lang.String) -> setSubject
    boolean isDummy() -> isDummy
    java.lang.String messageThreadId() -> messageThreadId
    java.lang.String[] messageThreadReferences() -> messageThreadReferences
    java.lang.String simplifiedSubject() -> simplifiedSubject
    boolean subjectIsReply() -> subjectIsReply
    void setChild(org.apache.commons.net.nntp.Threadable) -> setChild
    void flushSubjectCache() -> b
    void setNext(org.apache.commons.net.nntp.Threadable) -> setNext
    org.apache.commons.net.nntp.Threadable makeDummy() -> makeDummy
    java.lang.String toString() -> toString
    int getArticleNumber() -> getArticleNumber
    void setArticleNumber(int) -> setArticleNumber
    void addHeaderField(java.lang.String,java.lang.String) -> addHeaderField
org.apache.commons.net.nntp.ArticleInfo -> org.apache.commons.net.nntp.ArticleInfo:
    java.lang.String articleId -> articleId
    long articleNumber -> articleNumber
org.apache.commons.net.nntp.ArticleIterator -> org.apache.commons.net.nntp.ArticleIterator:
    java.util.Iterator stringIterator -> a
    boolean hasNext() -> hasNext
    org.apache.commons.net.nntp.Article next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
org.apache.commons.net.nntp.ArticlePointer -> org.apache.commons.net.nntp.ArticlePointer:
    int articleNumber -> articleNumber
    java.lang.String articleId -> articleId
org.apache.commons.net.nntp.NNTP -> org.apache.commons.net.nntp.NNTP:
    int DEFAULT_PORT -> DEFAULT_PORT
    boolean _isAllowedToPost -> i
    int _replyCode -> j
    java.lang.String _replyString -> k
    java.io.BufferedReader _reader_ -> l
    java.io.BufferedWriter _writer_ -> m
    org.apache.commons.net.ProtocolCommandSupport _commandSupport_ -> n
    void __getReply() -> d
    void _connectAction_() -> a
    void disconnect() -> disconnect
    boolean isAllowedToPost() -> isAllowedToPost
    int sendCommand(java.lang.String,java.lang.String) -> sendCommand
    int sendCommand(int,java.lang.String) -> sendCommand
    int sendCommand(java.lang.String) -> sendCommand
    int sendCommand(int) -> sendCommand
    int getReplyCode() -> getReplyCode
    int getReply() -> getReply
    java.lang.String getReplyString() -> getReplyString
    int article(java.lang.String) -> article
    int article(long) -> article
    int article() -> article
    int body(java.lang.String) -> body
    int body(long) -> body
    int body() -> body
    int head(java.lang.String) -> head
    int head(long) -> head
    int head() -> head
    int stat(java.lang.String) -> stat
    int stat(long) -> stat
    int stat() -> stat
    int group(java.lang.String) -> group
    int help() -> help
    int ihave(java.lang.String) -> ihave
    int last() -> last
    int list() -> list
    int next() -> next
    int newgroups(java.lang.String,java.lang.String,boolean,java.lang.String) -> newgroups
    int newnews(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> newnews
    int post() -> post
    int quit() -> quit
    int authinfoUser(java.lang.String) -> authinfoUser
    int authinfoPass(java.lang.String) -> authinfoPass
    int xover(java.lang.String) -> xover
    int xhdr(java.lang.String,java.lang.String) -> xhdr
    int listActive(java.lang.String) -> listActive
    int article(int) -> article
    int body(int) -> body
    int head(int) -> head
    int stat(int) -> stat
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> c
org.apache.commons.net.nntp.NNTPClient -> org.apache.commons.net.nntp.NNTPClient:
    void __parseArticlePointer(java.lang.String,org.apache.commons.net.nntp.ArticleInfo) -> a
    void __parseGroupReply(java.lang.String,org.apache.commons.net.nntp.NewsgroupInfo) -> a
    org.apache.commons.net.nntp.NewsgroupInfo __parseNewsgroupListEntry(java.lang.String) -> a
    org.apache.commons.net.nntp.Article __parseArticleEntry(java.lang.String) -> b
    org.apache.commons.net.nntp.NewsgroupInfo[] __readNewsgroupListing() -> d
    java.io.BufferedReader __retrieve(int,java.lang.String,org.apache.commons.net.nntp.ArticleInfo) -> a
    java.io.BufferedReader __retrieve(int,long,org.apache.commons.net.nntp.ArticleInfo) -> a
    java.io.BufferedReader retrieveArticle(java.lang.String,org.apache.commons.net.nntp.ArticleInfo) -> retrieveArticle
    java.io.Reader retrieveArticle(java.lang.String) -> retrieveArticle
    java.io.Reader retrieveArticle() -> retrieveArticle
    java.io.BufferedReader retrieveArticle(long,org.apache.commons.net.nntp.ArticleInfo) -> retrieveArticle
    java.io.BufferedReader retrieveArticle(long) -> retrieveArticle
    java.io.BufferedReader retrieveArticleHeader(java.lang.String,org.apache.commons.net.nntp.ArticleInfo) -> retrieveArticleHeader
    java.io.Reader retrieveArticleHeader(java.lang.String) -> retrieveArticleHeader
    java.io.Reader retrieveArticleHeader() -> retrieveArticleHeader
    java.io.BufferedReader retrieveArticleHeader(long,org.apache.commons.net.nntp.ArticleInfo) -> retrieveArticleHeader
    java.io.BufferedReader retrieveArticleHeader(long) -> retrieveArticleHeader
    java.io.BufferedReader retrieveArticleBody(java.lang.String,org.apache.commons.net.nntp.ArticleInfo) -> retrieveArticleBody
    java.io.Reader retrieveArticleBody(java.lang.String) -> retrieveArticleBody
    java.io.Reader retrieveArticleBody() -> retrieveArticleBody
    java.io.BufferedReader retrieveArticleBody(long,org.apache.commons.net.nntp.ArticleInfo) -> retrieveArticleBody
    java.io.BufferedReader retrieveArticleBody(long) -> retrieveArticleBody
    boolean selectNewsgroup(java.lang.String,org.apache.commons.net.nntp.NewsgroupInfo) -> selectNewsgroup
    boolean selectNewsgroup(java.lang.String) -> selectNewsgroup
    java.lang.String listHelp() -> listHelp
    java.lang.String[] listOverviewFmt() -> listOverviewFmt
    boolean selectArticle(java.lang.String,org.apache.commons.net.nntp.ArticleInfo) -> selectArticle
    boolean selectArticle(java.lang.String) -> selectArticle
    boolean selectArticle(org.apache.commons.net.nntp.ArticleInfo) -> selectArticle
    boolean selectArticle(long,org.apache.commons.net.nntp.ArticleInfo) -> selectArticle
    boolean selectArticle(long) -> selectArticle
    boolean selectPreviousArticle(org.apache.commons.net.nntp.ArticleInfo) -> selectPreviousArticle
    boolean selectPreviousArticle() -> selectPreviousArticle
    boolean selectNextArticle(org.apache.commons.net.nntp.ArticleInfo) -> selectNextArticle
    boolean selectNextArticle() -> selectNextArticle
    org.apache.commons.net.nntp.NewsgroupInfo[] listNewsgroups() -> listNewsgroups
    java.lang.Iterable iterateNewsgroupListing() -> iterateNewsgroupListing
    java.lang.Iterable iterateNewsgroups() -> iterateNewsgroups
    org.apache.commons.net.nntp.NewsgroupInfo[] listNewsgroups(java.lang.String) -> listNewsgroups
    java.lang.Iterable iterateNewsgroupListing(java.lang.String) -> iterateNewsgroupListing
    java.lang.Iterable iterateNewsgroups(java.lang.String) -> iterateNewsgroups
    org.apache.commons.net.nntp.NewsgroupInfo[] listNewNewsgroups(org.apache.commons.net.nntp.NewGroupsOrNewsQuery) -> listNewNewsgroups
    java.lang.Iterable iterateNewNewsgroupListing(org.apache.commons.net.nntp.NewGroupsOrNewsQuery) -> iterateNewNewsgroupListing
    java.lang.Iterable iterateNewNewsgroups(org.apache.commons.net.nntp.NewGroupsOrNewsQuery) -> iterateNewNewsgroups
    java.lang.String[] listNewNews(org.apache.commons.net.nntp.NewGroupsOrNewsQuery) -> listNewNews
    java.lang.Iterable iterateNewNews(org.apache.commons.net.nntp.NewGroupsOrNewsQuery) -> iterateNewNews
    boolean completePendingCommand() -> completePendingCommand
    java.io.Writer postArticle() -> postArticle
    java.io.Writer forwardArticle(java.lang.String) -> forwardArticle
    boolean logout() -> logout
    boolean authenticate(java.lang.String,java.lang.String) -> authenticate
    java.io.BufferedReader __retrieveArticleInfo(java.lang.String) -> c
    java.io.BufferedReader retrieveArticleInfo(long) -> retrieveArticleInfo
    java.io.BufferedReader retrieveArticleInfo(long,long) -> retrieveArticleInfo
    java.lang.Iterable iterateArticleInfo(long,long) -> iterateArticleInfo
    java.io.BufferedReader __retrieveHeader(java.lang.String,java.lang.String) -> b
    java.io.BufferedReader retrieveHeader(java.lang.String,long) -> retrieveHeader
    java.io.BufferedReader retrieveHeader(java.lang.String,long,long) -> retrieveHeader
    java.io.Reader retrieveHeader(java.lang.String,int,int) -> retrieveHeader
    java.io.Reader retrieveArticleInfo(int,int) -> retrieveArticleInfo
    java.io.Reader retrieveHeader(java.lang.String,int) -> retrieveHeader
    boolean selectArticle(int,org.apache.commons.net.nntp.ArticlePointer) -> selectArticle
    java.io.Reader retrieveArticleInfo(int) -> retrieveArticleInfo
    boolean selectArticle(int) -> selectArticle
    java.io.Reader retrieveArticleHeader(int) -> retrieveArticleHeader
    java.io.Reader retrieveArticleHeader(int,org.apache.commons.net.nntp.ArticlePointer) -> retrieveArticleHeader
    java.io.Reader retrieveArticleBody(int) -> retrieveArticleBody
    java.io.Reader retrieveArticle(int,org.apache.commons.net.nntp.ArticlePointer) -> retrieveArticle
    java.io.Reader retrieveArticle(int) -> retrieveArticle
    java.io.Reader retrieveArticleBody(int,org.apache.commons.net.nntp.ArticlePointer) -> retrieveArticleBody
    java.io.Reader retrieveArticle(java.lang.String,org.apache.commons.net.nntp.ArticlePointer) -> retrieveArticle
    java.io.Reader retrieveArticleBody(java.lang.String,org.apache.commons.net.nntp.ArticlePointer) -> retrieveArticleBody
    java.io.Reader retrieveArticleHeader(java.lang.String,org.apache.commons.net.nntp.ArticlePointer) -> retrieveArticleHeader
    boolean selectArticle(java.lang.String,org.apache.commons.net.nntp.ArticlePointer) -> selectArticle
    boolean selectArticle(org.apache.commons.net.nntp.ArticlePointer) -> selectArticle
    boolean selectNextArticle(org.apache.commons.net.nntp.ArticlePointer) -> selectNextArticle
    boolean selectPreviousArticle(org.apache.commons.net.nntp.ArticlePointer) -> selectPreviousArticle
    org.apache.commons.net.nntp.ArticleInfo __ap2ai(org.apache.commons.net.nntp.ArticlePointer) -> a
    void __ai2ap(org.apache.commons.net.nntp.ArticleInfo,org.apache.commons.net.nntp.ArticlePointer) -> a
org.apache.commons.net.nntp.NNTPCommand -> org.apache.commons.net.nntp.NNTPCommand:
    int ARTICLE -> ARTICLE
    int BODY -> BODY
    int GROUP -> GROUP
    int HEAD -> HEAD
    int HELP -> HELP
    int IHAVE -> IHAVE
    int LAST -> LAST
    int LIST -> LIST
    int NEWGROUPS -> NEWGROUPS
    int NEWNEWS -> NEWNEWS
    int NEXT -> NEXT
    int POST -> POST
    int QUIT -> QUIT
    int SLAVE -> SLAVE
    int STAT -> STAT
    int AUTHINFO -> AUTHINFO
    int XOVER -> XOVER
    int XHDR -> XHDR
    java.lang.String[] _commands -> a
    java.lang.String getCommand(int) -> getCommand
org.apache.commons.net.nntp.NNTPConnectionClosedException -> org.apache.commons.net.nntp.NNTPConnectionClosedException:
org.apache.commons.net.nntp.NNTPReply -> org.apache.commons.net.nntp.NNTPReply:
    int HELP_TEXT_FOLLOWS -> HELP_TEXT_FOLLOWS
    int DEBUG_OUTPUT -> DEBUG_OUTPUT
    int SERVER_READY_POSTING_ALLOWED -> SERVER_READY_POSTING_ALLOWED
    int SERVER_READY_POSTING_NOT_ALLOWED -> SERVER_READY_POSTING_NOT_ALLOWED
    int SLAVE_STATUS_NOTED -> SLAVE_STATUS_NOTED
    int CLOSING_CONNECTION -> CLOSING_CONNECTION
    int GROUP_SELECTED -> GROUP_SELECTED
    int ARTICLE_RETRIEVED_HEAD_AND_BODY_FOLLOW -> ARTICLE_RETRIEVED_HEAD_AND_BODY_FOLLOW
    int ARTICLE_RETRIEVED_HEAD_FOLLOWS -> ARTICLE_RETRIEVED_HEAD_FOLLOWS
    int ARTICLE_RETRIEVED_BODY_FOLLOWS -> ARTICLE_RETRIEVED_BODY_FOLLOWS
    int ARTICLE_RETRIEVED_REQUEST_TEXT_SEPARATELY -> ARTICLE_RETRIEVED_REQUEST_TEXT_SEPARATELY
    int ARTICLE_LIST_BY_MESSAGE_ID_FOLLOWS -> ARTICLE_LIST_BY_MESSAGE_ID_FOLLOWS
    int NEW_NEWSGROUP_LIST_FOLLOWS -> NEW_NEWSGROUP_LIST_FOLLOWS
    int ARTICLE_TRANSFERRED_OK -> ARTICLE_TRANSFERRED_OK
    int ARTICLE_POSTED_OK -> ARTICLE_POSTED_OK
    int AUTHENTICATION_ACCEPTED -> AUTHENTICATION_ACCEPTED
    int SEND_ARTICLE_TO_TRANSFER -> SEND_ARTICLE_TO_TRANSFER
    int SEND_ARTICLE_TO_POST -> SEND_ARTICLE_TO_POST
    int MORE_AUTH_INFO_REQUIRED -> MORE_AUTH_INFO_REQUIRED
    int SERVICE_DISCONTINUED -> SERVICE_DISCONTINUED
    int NO_SUCH_NEWSGROUP -> NO_SUCH_NEWSGROUP
    int NO_NEWSGROUP_SELECTED -> NO_NEWSGROUP_SELECTED
    int NO_CURRENT_ARTICLE_SELECTED -> NO_CURRENT_ARTICLE_SELECTED
    int NO_NEXT_ARTICLE -> NO_NEXT_ARTICLE
    int NO_PREVIOUS_ARTICLE -> NO_PREVIOUS_ARTICLE
    int NO_SUCH_ARTICLE_NUMBER -> NO_SUCH_ARTICLE_NUMBER
    int NO_SUCH_ARTICLE_FOUND -> NO_SUCH_ARTICLE_FOUND
    int ARTICLE_NOT_WANTED -> ARTICLE_NOT_WANTED
    int TRANSFER_FAILED -> TRANSFER_FAILED
    int ARTICLE_REJECTED -> ARTICLE_REJECTED
    int POSTING_NOT_ALLOWED -> POSTING_NOT_ALLOWED
    int POSTING_FAILED -> POSTING_FAILED
    int AUTHENTICATION_REQUIRED -> AUTHENTICATION_REQUIRED
    int AUTHENTICATION_REJECTED -> AUTHENTICATION_REJECTED
    int COMMAND_NOT_RECOGNIZED -> COMMAND_NOT_RECOGNIZED
    int COMMAND_SYNTAX_ERROR -> COMMAND_SYNTAX_ERROR
    int PERMISSION_DENIED -> PERMISSION_DENIED
    int PROGRAM_FAULT -> PROGRAM_FAULT
    boolean isInformational(int) -> isInformational
    boolean isPositiveCompletion(int) -> isPositiveCompletion
    boolean isPositiveIntermediate(int) -> isPositiveIntermediate
    boolean isNegativeTransient(int) -> isNegativeTransient
    boolean isNegativePermanent(int) -> isNegativePermanent
org.apache.commons.net.nntp.NewGroupsOrNewsQuery -> org.apache.commons.net.nntp.NewGroupsOrNewsQuery:
    java.lang.String __date -> a
    java.lang.String __time -> b
    java.lang.StringBuffer __distributions -> c
    java.lang.StringBuffer __newsgroups -> d
    boolean __isGMT -> e
    void addNewsgroup(java.lang.String) -> addNewsgroup
    void omitNewsgroup(java.lang.String) -> omitNewsgroup
    void addDistribution(java.lang.String) -> addDistribution
    java.lang.String getDate() -> getDate
    java.lang.String getTime() -> getTime
    boolean isGMT() -> isGMT
    java.lang.String getDistributions() -> getDistributions
    java.lang.String getNewsgroups() -> getNewsgroups
org.apache.commons.net.nntp.NewsgroupInfo -> org.apache.commons.net.nntp.NewsgroupInfo:
    int UNKNOWN_POSTING_PERMISSION -> UNKNOWN_POSTING_PERMISSION
    int MODERATED_POSTING_PERMISSION -> MODERATED_POSTING_PERMISSION
    int PERMITTED_POSTING_PERMISSION -> PERMITTED_POSTING_PERMISSION
    int PROHIBITED_POSTING_PERMISSION -> PROHIBITED_POSTING_PERMISSION
    java.lang.String __newsgroup -> a
    long __estimatedArticleCount -> b
    long __firstArticle -> c
    long __lastArticle -> d
    int __postingPermission -> e
    void _setNewsgroup(java.lang.String) -> a
    void _setArticleCount(long) -> a
    void _setFirstArticle(long) -> b
    void _setLastArticle(long) -> c
    void _setPostingPermission(int) -> a
    java.lang.String getNewsgroup() -> getNewsgroup
    long getArticleCountLong() -> getArticleCountLong
    long getFirstArticleLong() -> getFirstArticleLong
    long getLastArticleLong() -> getLastArticleLong
    int getPostingPermission() -> getPostingPermission
    int getArticleCount() -> getArticleCount
    int getFirstArticle() -> getFirstArticle
    int getLastArticle() -> getLastArticle
org.apache.commons.net.nntp.NewsgroupIterator -> org.apache.commons.net.nntp.NewsgroupIterator:
    java.util.Iterator stringIterator -> a
    boolean hasNext() -> hasNext
    org.apache.commons.net.nntp.NewsgroupInfo next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
org.apache.commons.net.nntp.ReplyIterator -> org.apache.commons.net.nntp.ReplyIterator:
    java.io.BufferedReader reader -> a
    java.lang.String line -> b
    java.lang.Exception savedException -> c
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
org.apache.commons.net.nntp.SimpleNNTPHeader -> org.apache.commons.net.nntp.SimpleNNTPHeader:
    java.lang.String __subject -> a
    java.lang.String __from -> b
    java.lang.StringBuilder __newsgroups -> c
    java.lang.StringBuilder __headerFields -> d
    int __newsgroupCount -> e
    void addNewsgroup(java.lang.String) -> addNewsgroup
    void addHeaderField(java.lang.String,java.lang.String) -> addHeaderField
    java.lang.String getFromAddress() -> getFromAddress
    java.lang.String getSubject() -> getSubject
    java.lang.String getNewsgroups() -> getNewsgroups
    java.lang.String toString() -> toString
org.apache.commons.net.nntp.ThreadContainer -> org.apache.commons.net.nntp.ThreadContainer:
    org.apache.commons.net.nntp.Threadable threadable -> a
    org.apache.commons.net.nntp.ThreadContainer parent -> b
    org.apache.commons.net.nntp.ThreadContainer next -> c
    org.apache.commons.net.nntp.ThreadContainer child -> d
    boolean findChild(org.apache.commons.net.nntp.ThreadContainer) -> a
    void flush() -> a
    void reverseChildren() -> b
org.apache.commons.net.nntp.Threadable -> org.apache.commons.net.nntp.Threadable:
    boolean isDummy() -> isDummy
    java.lang.String messageThreadId() -> messageThreadId
    java.lang.String[] messageThreadReferences() -> messageThreadReferences
    java.lang.String simplifiedSubject() -> simplifiedSubject
    boolean subjectIsReply() -> subjectIsReply
    void setChild(org.apache.commons.net.nntp.Threadable) -> setChild
    void setNext(org.apache.commons.net.nntp.Threadable) -> setNext
    org.apache.commons.net.nntp.Threadable makeDummy() -> makeDummy
org.apache.commons.net.nntp.Threader -> org.apache.commons.net.nntp.Threader:
    org.apache.commons.net.nntp.ThreadContainer root -> a
    java.util.HashMap idTable -> b
    int bogusIdCount -> c
    org.apache.commons.net.nntp.Threadable thread(java.util.List) -> thread
    org.apache.commons.net.nntp.Threadable thread(java.lang.Iterable) -> thread
    void buildContainer(org.apache.commons.net.nntp.Threadable) -> a
    org.apache.commons.net.nntp.ThreadContainer findRootSet() -> a
    void pruneEmptyContainers(org.apache.commons.net.nntp.ThreadContainer) -> a
    void gatherSubjects() -> b
    org.apache.commons.net.nntp.Threadable thread(org.apache.commons.net.nntp.Threadable[]) -> thread
org.apache.commons.net.ntp.NTPUDPClient -> org.apache.commons.net.ntp.NTPUDPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    int _version -> e
    org.apache.commons.net.ntp.TimeInfo getTime(java.net.InetAddress,int) -> getTime
    org.apache.commons.net.ntp.TimeInfo getTime(java.net.InetAddress) -> getTime
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
org.apache.commons.net.ntp.NtpUtils -> org.apache.commons.net.ntp.NtpUtils:
    java.lang.String getHostAddress(int) -> getHostAddress
    java.lang.String getRefAddress(org.apache.commons.net.ntp.NtpV3Packet) -> getRefAddress
    java.lang.String getReferenceClock(org.apache.commons.net.ntp.NtpV3Packet) -> getReferenceClock
    java.lang.String getModeName(int) -> getModeName
org.apache.commons.net.ntp.NtpV3Impl -> org.apache.commons.net.ntp.NtpV3Impl:
    byte[] buf -> a
    java.net.DatagramPacket dp -> b
    int getMode() -> getMode
    java.lang.String getModeName() -> getModeName
    void setMode(int) -> setMode
    int getLeapIndicator() -> getLeapIndicator
    void setLeapIndicator(int) -> setLeapIndicator
    int getPoll() -> getPoll
    void setPoll(int) -> setPoll
    int getPrecision() -> getPrecision
    void setPrecision(int) -> setPrecision
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    int getStratum() -> getStratum
    void setStratum(int) -> setStratum
    int getRootDelay() -> getRootDelay
    double getRootDelayInMillisDouble() -> getRootDelayInMillisDouble
    int getRootDispersion() -> getRootDispersion
    long getRootDispersionInMillis() -> getRootDispersionInMillis
    double getRootDispersionInMillisDouble() -> getRootDispersionInMillisDouble
    void setReferenceId(int) -> setReferenceId
    int getReferenceId() -> getReferenceId
    java.lang.String getReferenceIdString() -> getReferenceIdString
    java.lang.String idAsIPAddress() -> a
    java.lang.String idAsString() -> b
    java.lang.String idAsHex() -> c
    org.apache.commons.net.ntp.TimeStamp getTransmitTimeStamp() -> getTransmitTimeStamp
    void setTransmitTime(org.apache.commons.net.ntp.TimeStamp) -> setTransmitTime
    void setOriginateTimeStamp(org.apache.commons.net.ntp.TimeStamp) -> setOriginateTimeStamp
    org.apache.commons.net.ntp.TimeStamp getOriginateTimeStamp() -> getOriginateTimeStamp
    org.apache.commons.net.ntp.TimeStamp getReferenceTimeStamp() -> getReferenceTimeStamp
    void setReferenceTime(org.apache.commons.net.ntp.TimeStamp) -> setReferenceTime
    org.apache.commons.net.ntp.TimeStamp getReceiveTimeStamp() -> getReceiveTimeStamp
    void setReceiveTimeStamp(org.apache.commons.net.ntp.TimeStamp) -> setReceiveTimeStamp
    java.lang.String getType() -> getType
    int getInt(int) -> a
    org.apache.commons.net.ntp.TimeStamp getTimestamp(int) -> b
    long getLong(int) -> c
    void setTimestamp(int,org.apache.commons.net.ntp.TimeStamp) -> a
    java.net.DatagramPacket getDatagramPacket() -> getDatagramPacket
    void setDatagramPacket(java.net.DatagramPacket) -> setDatagramPacket
    int ui(byte) -> a
    long ul(byte) -> b
    java.lang.String toString() -> toString
org.apache.commons.net.ntp.NtpV3Packet -> org.apache.commons.net.ntp.NtpV3Packet:
    int NTP_PORT -> NTP_PORT
    int LI_NO_WARNING -> LI_NO_WARNING
    int LI_LAST_MINUTE_HAS_61_SECONDS -> LI_LAST_MINUTE_HAS_61_SECONDS
    int LI_LAST_MINUTE_HAS_59_SECONDS -> LI_LAST_MINUTE_HAS_59_SECONDS
    int LI_ALARM_CONDITION -> LI_ALARM_CONDITION
    int MODE_RESERVED -> MODE_RESERVED
    int MODE_SYMMETRIC_ACTIVE -> MODE_SYMMETRIC_ACTIVE
    int MODE_SYMMETRIC_PASSIVE -> MODE_SYMMETRIC_PASSIVE
    int MODE_CLIENT -> MODE_CLIENT
    int MODE_SERVER -> MODE_SERVER
    int MODE_BROADCAST -> MODE_BROADCAST
    int MODE_CONTROL_MESSAGE -> MODE_CONTROL_MESSAGE
    int MODE_PRIVATE -> MODE_PRIVATE
    int NTP_MINPOLL -> NTP_MINPOLL
    int NTP_MAXPOLL -> NTP_MAXPOLL
    int NTP_MINCLOCK -> NTP_MINCLOCK
    int NTP_MAXCLOCK -> NTP_MAXCLOCK
    int VERSION_3 -> VERSION_3
    int VERSION_4 -> VERSION_4
    java.lang.String TYPE_NTP -> TYPE_NTP
    java.lang.String TYPE_ICMP -> TYPE_ICMP
    java.lang.String TYPE_TIME -> TYPE_TIME
    java.lang.String TYPE_DAYTIME -> TYPE_DAYTIME
    java.net.DatagramPacket getDatagramPacket() -> getDatagramPacket
    void setDatagramPacket(java.net.DatagramPacket) -> setDatagramPacket
    int getLeapIndicator() -> getLeapIndicator
    void setLeapIndicator(int) -> setLeapIndicator
    int getMode() -> getMode
    java.lang.String getModeName() -> getModeName
    void setMode(int) -> setMode
    int getPoll() -> getPoll
    void setPoll(int) -> setPoll
    int getPrecision() -> getPrecision
    int getRootDelay() -> getRootDelay
    double getRootDelayInMillisDouble() -> getRootDelayInMillisDouble
    int getRootDispersion() -> getRootDispersion
    long getRootDispersionInMillis() -> getRootDispersionInMillis
    double getRootDispersionInMillisDouble() -> getRootDispersionInMillisDouble
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    int getStratum() -> getStratum
    void setStratum(int) -> setStratum
    java.lang.String getReferenceIdString() -> getReferenceIdString
    int getReferenceId() -> getReferenceId
    void setReferenceId(int) -> setReferenceId
    org.apache.commons.net.ntp.TimeStamp getTransmitTimeStamp() -> getTransmitTimeStamp
    org.apache.commons.net.ntp.TimeStamp getReferenceTimeStamp() -> getReferenceTimeStamp
    org.apache.commons.net.ntp.TimeStamp getOriginateTimeStamp() -> getOriginateTimeStamp
    org.apache.commons.net.ntp.TimeStamp getReceiveTimeStamp() -> getReceiveTimeStamp
    void setTransmitTime(org.apache.commons.net.ntp.TimeStamp) -> setTransmitTime
    void setReferenceTime(org.apache.commons.net.ntp.TimeStamp) -> setReferenceTime
    void setOriginateTimeStamp(org.apache.commons.net.ntp.TimeStamp) -> setOriginateTimeStamp
    void setReceiveTimeStamp(org.apache.commons.net.ntp.TimeStamp) -> setReceiveTimeStamp
    java.lang.String getType() -> getType
org.apache.commons.net.ntp.TimeInfo -> org.apache.commons.net.ntp.TimeInfo:
    org.apache.commons.net.ntp.NtpV3Packet _message -> a
    java.util.List _comments -> b
    java.lang.Long _delay -> c
    java.lang.Long _offset -> d
    long _returnTime -> e
    boolean _detailsComputed -> f
    void addComment(java.lang.String) -> addComment
    void computeDetails() -> computeDetails
    java.util.List getComments() -> getComments
    java.lang.Long getDelay() -> getDelay
    java.lang.Long getOffset() -> getOffset
    org.apache.commons.net.ntp.NtpV3Packet getMessage() -> getMessage
    long getReturnTime() -> getReturnTime
org.apache.commons.net.ntp.TimeStamp -> org.apache.commons.net.ntp.TimeStamp:
    java.lang.String NTP_DATE_FORMAT -> NTP_DATE_FORMAT
    long ntpTime -> a
    java.text.DateFormat simpleFormatter -> b
    java.text.DateFormat utcFormatter -> c
    long ntpValue() -> ntpValue
    long getSeconds() -> getSeconds
    long getFraction() -> getFraction
    long getTime() -> getTime
    java.util.Date getDate() -> getDate
    long getTime(long) -> getTime
    org.apache.commons.net.ntp.TimeStamp getNtpTime(long) -> getNtpTime
    org.apache.commons.net.ntp.TimeStamp getCurrentTime() -> getCurrentTime
    long decodeNtpHexString(java.lang.String) -> a
    org.apache.commons.net.ntp.TimeStamp parseNtpString(java.lang.String) -> parseNtpString
    long toNtpTime(long) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void appendHexString(java.lang.StringBuilder,long) -> a
    java.lang.String toString(long) -> toString
    java.lang.String toDateString() -> toDateString
    java.lang.String toUTCString() -> toUTCString
    int compareTo(org.apache.commons.net.ntp.TimeStamp) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.apache.commons.net.pop3.ExtendedPOP3Client -> org.apache.commons.net.pop3.ExtendedPOP3Client:
    boolean auth(org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD,java.lang.String,java.lang.String) -> auth
    java.lang.String _convertToHexString(byte[]) -> a
org.apache.commons.net.pop3.ExtendedPOP3Client$1 -> org.apache.commons.net.pop3.ExtendedPOP3Client$1:
    int[] $SwitchMap$org$apache$commons$net$pop3$ExtendedPOP3Client$AUTH_METHOD -> a
org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD -> org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD:
    org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD PLAIN -> PLAIN
    org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD CRAM_MD5 -> CRAM_MD5
    java.lang.String methodName -> a
    org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD[] $VALUES -> b
    org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD[] values() -> values
    org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD valueOf(java.lang.String) -> valueOf
    java.lang.String getAuthName() -> getAuthName
org.apache.commons.net.pop3.POP3 -> org.apache.commons.net.pop3.POP3:
    int DEFAULT_PORT -> DEFAULT_PORT
    int DISCONNECTED_STATE -> DISCONNECTED_STATE
    int AUTHORIZATION_STATE -> AUTHORIZATION_STATE
    int TRANSACTION_STATE -> TRANSACTION_STATE
    int UPDATE_STATE -> UPDATE_STATE
    int __popState -> o
    java.io.BufferedWriter _writer -> i
    java.io.BufferedReader _reader -> j
    int _replyCode -> k
    java.lang.String _lastReplyLine -> l
    java.util.List _replyLines -> m
    org.apache.commons.net.ProtocolCommandSupport _commandSupport_ -> n
    void __getReply() -> d
    void _connectAction_() -> a
    void setState(int) -> setState
    int getState() -> getState
    void getAdditionalReply() -> getAdditionalReply
    void disconnect() -> disconnect
    int sendCommand(java.lang.String,java.lang.String) -> sendCommand
    int sendCommand(java.lang.String) -> sendCommand
    int sendCommand(int,java.lang.String) -> sendCommand
    int sendCommand(int) -> sendCommand
    java.lang.String[] getReplyStrings() -> getReplyStrings
    java.lang.String getReplyString() -> getReplyString
    void removeProtocolCommandistener(org.apache.commons.net.ProtocolCommandListener) -> removeProtocolCommandistener
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> c
org.apache.commons.net.pop3.POP3Client -> org.apache.commons.net.pop3.POP3Client:
    org.apache.commons.net.pop3.POP3MessageInfo __parseStatus(java.lang.String) -> a
    org.apache.commons.net.pop3.POP3MessageInfo __parseUID(java.lang.String) -> b
    boolean capa() -> capa
    boolean login(java.lang.String,java.lang.String) -> login
    boolean login(java.lang.String,java.lang.String,java.lang.String) -> login
    boolean logout() -> logout
    boolean noop() -> noop
    boolean deleteMessage(int) -> deleteMessage
    boolean reset() -> reset
    org.apache.commons.net.pop3.POP3MessageInfo status() -> status
    org.apache.commons.net.pop3.POP3MessageInfo listMessage(int) -> listMessage
    org.apache.commons.net.pop3.POP3MessageInfo[] listMessages() -> listMessages
    org.apache.commons.net.pop3.POP3MessageInfo listUniqueIdentifier(int) -> listUniqueIdentifier
    org.apache.commons.net.pop3.POP3MessageInfo[] listUniqueIdentifiers() -> listUniqueIdentifiers
    java.io.Reader retrieveMessage(int) -> retrieveMessage
    java.io.Reader retrieveMessageTop(int,int) -> retrieveMessageTop
org.apache.commons.net.pop3.POP3Command -> org.apache.commons.net.pop3.POP3Command:
    int USER -> USER
    int PASS -> PASS
    int QUIT -> QUIT
    int STAT -> STAT
    int LIST -> LIST
    int RETR -> RETR
    int DELE -> DELE
    int NOOP -> NOOP
    int RSET -> RSET
    int APOP -> APOP
    int TOP -> TOP
    int UIDL -> UIDL
    int CAPA -> CAPA
    int AUTH -> AUTH
    java.lang.String[] _commands -> a
    java.lang.String getCommand(int) -> getCommand
org.apache.commons.net.pop3.POP3MessageInfo -> org.apache.commons.net.pop3.POP3MessageInfo:
    int number -> number
    int size -> size
    java.lang.String identifier -> identifier
org.apache.commons.net.pop3.POP3Reply -> org.apache.commons.net.pop3.POP3Reply:
    int OK -> OK
    int ERROR -> ERROR
    int OK_INT -> OK_INT
org.apache.commons.net.pop3.POP3SClient -> org.apache.commons.net.pop3.POP3SClient:
    boolean isImplicit -> o
    java.lang.String protocol -> p
    javax.net.ssl.SSLContext context -> q
    java.lang.String[] suites -> r
    java.lang.String[] protocols -> s
    javax.net.ssl.TrustManager trustManager -> t
    javax.net.ssl.KeyManager keyManager -> u
    void _connectAction_() -> a
    void initSSLContext() -> d
    void performSSLNegotiation() -> e
    javax.net.ssl.KeyManager getKeyManager() -> f
    void setKeyManager(javax.net.ssl.KeyManager) -> setKeyManager
    void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    boolean execTLS() -> execTLS
    javax.net.ssl.TrustManager getTrustManager() -> getTrustManager
    void setTrustManager(javax.net.ssl.TrustManager) -> setTrustManager
org.apache.commons.net.smtp.AuthenticatingSMTPClient -> org.apache.commons.net.smtp.AuthenticatingSMTPClient:
    int ehlo(java.lang.String) -> ehlo
    boolean elogin(java.lang.String) -> elogin
    boolean elogin() -> elogin
    int[] getEnhancedReplyCode() -> getEnhancedReplyCode
    boolean auth(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD,java.lang.String,java.lang.String) -> auth
    java.lang.String _convertToHexString(byte[]) -> a
org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD -> org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD:
    org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD PLAIN -> PLAIN
    org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD CRAM_MD5 -> CRAM_MD5
    org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD LOGIN -> LOGIN
    org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD XOAUTH -> XOAUTH
    org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD[] $VALUES -> a
    org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD[] values() -> values
    org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD valueOf(java.lang.String) -> valueOf
    java.lang.String getAuthName(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD) -> getAuthName
org.apache.commons.net.smtp.RelayPath -> org.apache.commons.net.smtp.RelayPath:
    java.util.Vector _path -> a
    java.lang.String _emailAddress -> b
    void addRelay(java.lang.String) -> addRelay
    java.lang.String toString() -> toString
org.apache.commons.net.smtp.SMTP -> org.apache.commons.net.smtp.SMTP:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.lang.String encoding -> i
    org.apache.commons.net.ProtocolCommandSupport _commandSupport_ -> j
    java.io.BufferedReader _reader -> k
    java.io.BufferedWriter _writer -> l
    int _replyCode -> m
    java.util.ArrayList _replyLines -> n
    boolean _newReplyString -> o
    java.lang.String _replyString -> p
    int __sendCommand(java.lang.String,java.lang.String,boolean) -> a
    int __sendCommand(int,java.lang.String,boolean) -> a
    void __getReply() -> d
    void _connectAction_() -> a
    void disconnect() -> disconnect
    int sendCommand(java.lang.String,java.lang.String) -> sendCommand
    int sendCommand(int,java.lang.String) -> sendCommand
    int sendCommand(java.lang.String) -> sendCommand
    int sendCommand(int) -> sendCommand
    int getReplyCode() -> getReplyCode
    int getReply() -> getReply
    java.lang.String[] getReplyStrings() -> getReplyStrings
    java.lang.String getReplyString() -> getReplyString
    int helo(java.lang.String) -> helo
    int mail(java.lang.String) -> mail
    int rcpt(java.lang.String) -> rcpt
    int data() -> data
    int send(java.lang.String) -> send
    int soml(java.lang.String) -> soml
    int saml(java.lang.String) -> saml
    int rset() -> rset
    int vrfy(java.lang.String) -> vrfy
    int expn(java.lang.String) -> expn
    int help() -> help
    int help(java.lang.String) -> help
    int noop() -> noop
    int turn() -> turn
    int quit() -> quit
    void removeProtocolCommandistener(org.apache.commons.net.ProtocolCommandListener) -> removeProtocolCommandistener
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> c
org.apache.commons.net.smtp.SMTPClient -> org.apache.commons.net.smtp.SMTPClient:
    boolean completePendingCommand() -> completePendingCommand
    boolean login(java.lang.String) -> login
    boolean login() -> login
    boolean setSender(org.apache.commons.net.smtp.RelayPath) -> setSender
    boolean setSender(java.lang.String) -> setSender
    boolean addRecipient(org.apache.commons.net.smtp.RelayPath) -> addRecipient
    boolean addRecipient(java.lang.String) -> addRecipient
    java.io.Writer sendMessageData() -> sendMessageData
    boolean sendShortMessageData(java.lang.String) -> sendShortMessageData
    boolean sendSimpleMessage(java.lang.String,java.lang.String,java.lang.String) -> sendSimpleMessage
    boolean sendSimpleMessage(java.lang.String,java.lang.String[],java.lang.String) -> sendSimpleMessage
    boolean logout() -> logout
    boolean reset() -> reset
    boolean verify(java.lang.String) -> verify
    java.lang.String listHelp() -> listHelp
    java.lang.String listHelp(java.lang.String) -> listHelp
    boolean sendNoOp() -> sendNoOp
org.apache.commons.net.smtp.SMTPCommand -> org.apache.commons.net.smtp.SMTPCommand:
    int HELO -> HELO
    int MAIL -> MAIL
    int RCPT -> RCPT
    int DATA -> DATA
    int SEND -> SEND
    int SOML -> SOML
    int SAML -> SAML
    int RSET -> RSET
    int VRFY -> VRFY
    int EXPN -> EXPN
    int HELP -> HELP
    int NOOP -> NOOP
    int TURN -> TURN
    int QUIT -> QUIT
    int AUTH -> AUTH
    int EHLO -> EHLO
    int HELLO -> HELLO
    int LOGIN -> LOGIN
    int MAIL_FROM -> MAIL_FROM
    int RECIPIENT -> RECIPIENT
    int SEND_MESSAGE_DATA -> SEND_MESSAGE_DATA
    int SEND_FROM -> SEND_FROM
    int SEND_OR_MAIL_FROM -> SEND_OR_MAIL_FROM
    int SEND_AND_MAIL_FROM -> SEND_AND_MAIL_FROM
    int RESET -> RESET
    int VERIFY -> VERIFY
    int EXPAND -> EXPAND
    int LOGOUT -> LOGOUT
    java.lang.String[] _commands -> a
    java.lang.String getCommand(int) -> getCommand
org.apache.commons.net.smtp.SMTPConnectionClosedException -> org.apache.commons.net.smtp.SMTPConnectionClosedException:
org.apache.commons.net.smtp.SMTPReply -> org.apache.commons.net.smtp.SMTPReply:
    int SYSTEM_STATUS -> SYSTEM_STATUS
    int HELP_MESSAGE -> HELP_MESSAGE
    int SERVICE_READY -> SERVICE_READY
    int SERVICE_CLOSING_TRANSMISSION_CHANNEL -> SERVICE_CLOSING_TRANSMISSION_CHANNEL
    int ACTION_OK -> ACTION_OK
    int USER_NOT_LOCAL_WILL_FORWARD -> USER_NOT_LOCAL_WILL_FORWARD
    int START_MAIL_INPUT -> START_MAIL_INPUT
    int SERVICE_NOT_AVAILABLE -> SERVICE_NOT_AVAILABLE
    int ACTION_NOT_TAKEN -> ACTION_NOT_TAKEN
    int ACTION_ABORTED -> ACTION_ABORTED
    int INSUFFICIENT_STORAGE -> INSUFFICIENT_STORAGE
    int UNRECOGNIZED_COMMAND -> UNRECOGNIZED_COMMAND
    int SYNTAX_ERROR_IN_ARGUMENTS -> SYNTAX_ERROR_IN_ARGUMENTS
    int COMMAND_NOT_IMPLEMENTED -> COMMAND_NOT_IMPLEMENTED
    int BAD_COMMAND_SEQUENCE -> BAD_COMMAND_SEQUENCE
    int COMMAND_NOT_IMPLEMENTED_FOR_PARAMETER -> COMMAND_NOT_IMPLEMENTED_FOR_PARAMETER
    int MAILBOX_UNAVAILABLE -> MAILBOX_UNAVAILABLE
    int USER_NOT_LOCAL -> USER_NOT_LOCAL
    int STORAGE_ALLOCATION_EXCEEDED -> STORAGE_ALLOCATION_EXCEEDED
    int MAILBOX_NAME_NOT_ALLOWED -> MAILBOX_NAME_NOT_ALLOWED
    int TRANSACTION_FAILED -> TRANSACTION_FAILED
    boolean isPositivePreliminary(int) -> isPositivePreliminary
    boolean isPositiveCompletion(int) -> isPositiveCompletion
    boolean isPositiveIntermediate(int) -> isPositiveIntermediate
    boolean isNegativeTransient(int) -> isNegativeTransient
    boolean isNegativePermanent(int) -> isNegativePermanent
org.apache.commons.net.smtp.SMTPSClient -> org.apache.commons.net.smtp.SMTPSClient:
    boolean isImplicit -> m
    java.lang.String protocol -> n
    javax.net.ssl.SSLContext context -> o
    java.lang.String[] suites -> p
    java.lang.String[] protocols -> q
    javax.net.ssl.TrustManager trustManager -> r
    javax.net.ssl.KeyManager keyManager -> s
    void _connectAction_() -> a
    void initSSLContext() -> d
    void performSSLNegotiation() -> e
    javax.net.ssl.KeyManager getKeyManager() -> getKeyManager
    void setKeyManager(javax.net.ssl.KeyManager) -> setKeyManager
    void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    boolean execTLS() -> execTLS
    javax.net.ssl.TrustManager getTrustManager() -> getTrustManager
    void setTrustManager(javax.net.ssl.TrustManager) -> setTrustManager
org.apache.commons.net.smtp.SimpleSMTPHeader -> org.apache.commons.net.smtp.SimpleSMTPHeader:
    java.lang.String __subject -> a
    java.lang.String __from -> b
    java.lang.String __to -> c
    java.lang.StringBuffer __headerFields -> d
    java.lang.StringBuffer __cc -> e
    void addHeaderField(java.lang.String,java.lang.String) -> addHeaderField
    void addCC(java.lang.String) -> addCC
    java.lang.String toString() -> toString
org.apache.commons.net.telnet.EchoOptionHandler -> org.apache.commons.net.telnet.EchoOptionHandler:
    int[] answerSubnegotiation(int[],int) -> answerSubnegotiation
    int[] startSubnegotiationLocal() -> startSubnegotiationLocal
    int[] startSubnegotiationRemote() -> startSubnegotiationRemote
org.apache.commons.net.telnet.InvalidTelnetOptionException -> org.apache.commons.net.telnet.InvalidTelnetOptionException:
    int optionCode -> a
    java.lang.String msg -> b
    java.lang.String getMessage() -> getMessage
org.apache.commons.net.telnet.SimpleOptionHandler -> org.apache.commons.net.telnet.SimpleOptionHandler:
    int[] answerSubnegotiation(int[],int) -> answerSubnegotiation
    int[] startSubnegotiationLocal() -> startSubnegotiationLocal
    int[] startSubnegotiationRemote() -> startSubnegotiationRemote
org.apache.commons.net.telnet.SuppressGAOptionHandler -> org.apache.commons.net.telnet.SuppressGAOptionHandler:
    int[] answerSubnegotiation(int[],int) -> answerSubnegotiation
    int[] startSubnegotiationLocal() -> startSubnegotiationLocal
    int[] startSubnegotiationRemote() -> startSubnegotiationRemote
org.apache.commons.net.telnet.Telnet -> org.apache.commons.net.telnet.Telnet:
    byte[] _COMMAND_DO -> i
    byte[] _COMMAND_DONT -> j
    byte[] _COMMAND_WILL -> k
    byte[] _COMMAND_WONT -> l
    byte[] _COMMAND_SB -> m
    byte[] _COMMAND_SE -> n
    int[] _doResponse -> o
    int[] _willResponse -> p
    int[] _options -> q
    byte[] _COMMAND_IS -> r
    java.lang.String terminalType -> t
    org.apache.commons.net.telnet.TelnetOptionHandler[] optionHandlers -> u
    byte[] _COMMAND_AYT -> s
    java.lang.Object aytMonitor -> v
    boolean aytFlag -> w
    java.io.OutputStream spyStream -> x
    org.apache.commons.net.telnet.TelnetNotificationHandler __notifhand -> y
    boolean _stateIsWill(int) -> a
    boolean _stateIsWont(int) -> b
    boolean _stateIsDo(int) -> c
    boolean _stateIsDont(int) -> d
    boolean _requestedWill(int) -> e
    boolean _requestedWont(int) -> f
    boolean _requestedDo(int) -> g
    boolean _requestedDont(int) -> h
    void _setWill(int) -> i
    void _setDo(int) -> j
    void _setWantWill(int) -> k
    void _setWantDo(int) -> l
    void _setWont(int) -> m
    void _setDont(int) -> n
    void _setWantWont(int) -> o
    void _setWantDont(int) -> p
    void _processCommand(int) -> q
    void _processDo(int) -> r
    void _processDont(int) -> s
    void _processWill(int) -> t
    void _processWont(int) -> u
    void _processSuboption(int[],int) -> a
    void _sendTerminalType() -> d
    void _sendSubnegotiation(int[]) -> a
    void _sendCommand(byte) -> a
    void _processAYTResponse() -> e
    void _connectAction_() -> a
    void _sendDo(int) -> v
    void _requestDo(int) -> w
    void _sendDont(int) -> x
    void _requestDont(int) -> y
    void _sendWill(int) -> z
    void _requestWill(int) -> A
    void _sendWont(int) -> B
    void _requestWont(int) -> C
    void _sendByte(int) -> D
    boolean _sendAYT(long) -> a
    void addOptionHandler(org.apache.commons.net.telnet.TelnetOptionHandler) -> addOptionHandler
    void deleteOptionHandler(int) -> deleteOptionHandler
    void _registerSpyStream(java.io.OutputStream) -> a
    void _stopSpyStream() -> f
    void _spyRead(int) -> E
    void _spyWrite(int) -> F
    void registerNotifHandler(org.apache.commons.net.telnet.TelnetNotificationHandler) -> registerNotifHandler
    void unregisterNotifHandler() -> unregisterNotifHandler
org.apache.commons.net.telnet.TelnetClient -> org.apache.commons.net.telnet.TelnetClient:
    java.io.InputStream __input -> u
    java.io.OutputStream __output -> v
    boolean readerThread -> t
    org.apache.commons.net.telnet.TelnetInputListener inputListener -> w
    void _flushOutputStream() -> g
    void _closeOutputStream() -> h
    void _connectAction_() -> a
    void disconnect() -> disconnect
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.io.InputStream getInputStream() -> getInputStream
    boolean getLocalOptionState(int) -> getLocalOptionState
    boolean getRemoteOptionState(int) -> getRemoteOptionState
    boolean sendAYT(long) -> sendAYT
    void sendSubnegotiation(int[]) -> sendSubnegotiation
    void sendCommand(byte) -> sendCommand
    void addOptionHandler(org.apache.commons.net.telnet.TelnetOptionHandler) -> addOptionHandler
    void deleteOptionHandler(int) -> deleteOptionHandler
    void registerSpyStream(java.io.OutputStream) -> registerSpyStream
    void stopSpyStream() -> stopSpyStream
    void registerNotifHandler(org.apache.commons.net.telnet.TelnetNotificationHandler) -> registerNotifHandler
    void unregisterNotifHandler() -> unregisterNotifHandler
    void setReaderThread(boolean) -> setReaderThread
    boolean getReaderThread() -> getReaderThread
    void registerInputListener(org.apache.commons.net.telnet.TelnetInputListener) -> registerInputListener
    void unregisterInputListener() -> unregisterInputListener
    void notifyInputListener() -> i
org.apache.commons.net.telnet.TelnetCommand -> org.apache.commons.net.telnet.TelnetCommand:
    int MAX_COMMAND_VALUE -> MAX_COMMAND_VALUE
    int IAC -> IAC
    int DONT -> DONT
    int DO -> DO
    int WONT -> WONT
    int WILL -> WILL
    int SB -> SB
    int GA -> GA
    int EL -> EL
    int EC -> EC
    int AYT -> AYT
    int AO -> AO
    int IP -> IP
    int BREAK -> BREAK
    int DM -> DM
    int NOP -> NOP
    int SE -> SE
    int EOR -> EOR
    int ABORT -> ABORT
    int SUSP -> SUSP
    int EOF -> EOF
    int SYNCH -> SYNCH
    java.lang.String[] __commandString -> a
    java.lang.String getCommand(int) -> getCommand
    boolean isValidCommand(int) -> isValidCommand
org.apache.commons.net.telnet.TelnetInputListener -> org.apache.commons.net.telnet.TelnetInputListener:
    void telnetInputAvailable() -> telnetInputAvailable
org.apache.commons.net.telnet.TelnetInputStream -> org.apache.commons.net.telnet.TelnetInputStream:
    boolean __hasReachedEOF -> a
    boolean __isClosed -> b
    boolean __readIsWaiting -> c
    int __receiveState -> d
    int __queueHead -> e
    int __queueTail -> f
    int __bytesAvailable -> g
    int[] __queue -> h
    org.apache.commons.net.telnet.TelnetClient __client -> i
    java.lang.Thread __thread -> j
    java.io.IOException __ioException -> k
    int[] __suboption -> l
    int __suboption_count -> m
    boolean __threaded -> n
    void _start() -> a
    int __read(boolean) -> a
    boolean __processChar(int) -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    boolean markSupported() -> markSupported
    int available() -> available
    void close() -> close
    void run() -> run
org.apache.commons.net.telnet.TelnetNotificationHandler -> org.apache.commons.net.telnet.TelnetNotificationHandler:
    int RECEIVED_DO -> RECEIVED_DO
    int RECEIVED_DONT -> RECEIVED_DONT
    int RECEIVED_WILL -> RECEIVED_WILL
    int RECEIVED_WONT -> RECEIVED_WONT
    int RECEIVED_COMMAND -> RECEIVED_COMMAND
    void receivedNegotiation(int,int) -> receivedNegotiation
org.apache.commons.net.telnet.TelnetOption -> org.apache.commons.net.telnet.TelnetOption:
    int MAX_OPTION_VALUE -> MAX_OPTION_VALUE
    int BINARY -> BINARY
    int ECHO -> ECHO
    int PREPARE_TO_RECONNECT -> PREPARE_TO_RECONNECT
    int SUPPRESS_GO_AHEAD -> SUPPRESS_GO_AHEAD
    int APPROXIMATE_MESSAGE_SIZE -> APPROXIMATE_MESSAGE_SIZE
    int STATUS -> STATUS
    int TIMING_MARK -> TIMING_MARK
    int REMOTE_CONTROLLED_TRANSMISSION -> REMOTE_CONTROLLED_TRANSMISSION
    int NEGOTIATE_OUTPUT_LINE_WIDTH -> NEGOTIATE_OUTPUT_LINE_WIDTH
    int NEGOTIATE_OUTPUT_PAGE_SIZE -> NEGOTIATE_OUTPUT_PAGE_SIZE
    int NEGOTIATE_CARRIAGE_RETURN -> NEGOTIATE_CARRIAGE_RETURN
    int NEGOTIATE_HORIZONTAL_TAB_STOP -> NEGOTIATE_HORIZONTAL_TAB_STOP
    int NEGOTIATE_HORIZONTAL_TAB -> NEGOTIATE_HORIZONTAL_TAB
    int NEGOTIATE_FORMFEED -> NEGOTIATE_FORMFEED
    int NEGOTIATE_VERTICAL_TAB_STOP -> NEGOTIATE_VERTICAL_TAB_STOP
    int NEGOTIATE_VERTICAL_TAB -> NEGOTIATE_VERTICAL_TAB
    int NEGOTIATE_LINEFEED -> NEGOTIATE_LINEFEED
    int EXTENDED_ASCII -> EXTENDED_ASCII
    int FORCE_LOGOUT -> FORCE_LOGOUT
    int BYTE_MACRO -> BYTE_MACRO
    int DATA_ENTRY_TERMINAL -> DATA_ENTRY_TERMINAL
    int SUPDUP -> SUPDUP
    int SUPDUP_OUTPUT -> SUPDUP_OUTPUT
    int SEND_LOCATION -> SEND_LOCATION
    int TERMINAL_TYPE -> TERMINAL_TYPE
    int END_OF_RECORD -> END_OF_RECORD
    int TACACS_USER_IDENTIFICATION -> TACACS_USER_IDENTIFICATION
    int OUTPUT_MARKING -> OUTPUT_MARKING
    int TERMINAL_LOCATION_NUMBER -> TERMINAL_LOCATION_NUMBER
    int REGIME_3270 -> REGIME_3270
    int X3_PAD -> X3_PAD
    int WINDOW_SIZE -> WINDOW_SIZE
    int TERMINAL_SPEED -> TERMINAL_SPEED
    int REMOTE_FLOW_CONTROL -> REMOTE_FLOW_CONTROL
    int LINEMODE -> LINEMODE
    int X_DISPLAY_LOCATION -> X_DISPLAY_LOCATION
    int OLD_ENVIRONMENT_VARIABLES -> OLD_ENVIRONMENT_VARIABLES
    int AUTHENTICATION -> AUTHENTICATION
    int ENCRYPTION -> ENCRYPTION
    int NEW_ENVIRONMENT_VARIABLES -> NEW_ENVIRONMENT_VARIABLES
    int EXTENDED_OPTIONS_LIST -> EXTENDED_OPTIONS_LIST
    java.lang.String[] __optionString -> a
    java.lang.String getOption(int) -> getOption
    boolean isValidOption(int) -> isValidOption
org.apache.commons.net.telnet.TelnetOptionHandler -> org.apache.commons.net.telnet.TelnetOptionHandler:
    int optionCode -> a
    boolean initialLocal -> b
    boolean initialRemote -> c
    boolean acceptLocal -> d
    boolean acceptRemote -> e
    boolean doFlag -> f
    boolean willFlag -> g
    int getOptionCode() -> getOptionCode
    boolean getAcceptLocal() -> getAcceptLocal
    boolean getAcceptRemote() -> getAcceptRemote
    void setAcceptLocal(boolean) -> setAcceptLocal
    void setAcceptRemote(boolean) -> setAcceptRemote
    boolean getInitLocal() -> getInitLocal
    boolean getInitRemote() -> getInitRemote
    void setInitLocal(boolean) -> setInitLocal
    void setInitRemote(boolean) -> setInitRemote
    int[] answerSubnegotiation(int[],int) -> answerSubnegotiation
    int[] startSubnegotiationLocal() -> startSubnegotiationLocal
    int[] startSubnegotiationRemote() -> startSubnegotiationRemote
    boolean getWill() -> a
    void setWill(boolean) -> a
    boolean getDo() -> b
    void setDo(boolean) -> b
org.apache.commons.net.telnet.TelnetOutputStream -> org.apache.commons.net.telnet.TelnetOutputStream:
    org.apache.commons.net.telnet.TelnetClient __client -> a
    boolean __convertCRtoCRLF -> b
    boolean __lastWasCR -> c
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.net.telnet.TerminalTypeOptionHandler -> org.apache.commons.net.telnet.TerminalTypeOptionHandler:
    java.lang.String termType -> a
    int[] answerSubnegotiation(int[],int) -> answerSubnegotiation
    int[] startSubnegotiationLocal() -> startSubnegotiationLocal
    int[] startSubnegotiationRemote() -> startSubnegotiationRemote
org.apache.commons.net.telnet.WindowSizeOptionHandler -> org.apache.commons.net.telnet.WindowSizeOptionHandler:
    int m_nWidth -> a
    int m_nHeight -> b
    int[] answerSubnegotiation(int[],int) -> answerSubnegotiation
    int[] startSubnegotiationLocal() -> startSubnegotiationLocal
    int[] startSubnegotiationRemote() -> startSubnegotiationRemote
org.apache.commons.net.tftp.TFTP -> org.apache.commons.net.tftp.TFTP:
    int ASCII_MODE -> ASCII_MODE
    int NETASCII_MODE -> NETASCII_MODE
    int BINARY_MODE -> BINARY_MODE
    int IMAGE_MODE -> IMAGE_MODE
    int OCTET_MODE -> OCTET_MODE
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    int DEFAULT_PORT -> DEFAULT_PORT
    byte[] __receiveBuffer -> f
    java.net.DatagramPacket __receiveDatagram -> g
    java.net.DatagramPacket __sendDatagram -> h
    byte[] _sendBuffer -> e
    java.lang.String getModeName(int) -> getModeName
    void discardPackets() -> discardPackets
    org.apache.commons.net.tftp.TFTPPacket bufferedReceive() -> bufferedReceive
    void bufferedSend(org.apache.commons.net.tftp.TFTPPacket) -> bufferedSend
    void beginBufferedOps() -> beginBufferedOps
    void endBufferedOps() -> endBufferedOps
    void send(org.apache.commons.net.tftp.TFTPPacket) -> send
    org.apache.commons.net.tftp.TFTPPacket receive() -> receive
org.apache.commons.net.tftp.TFTPAckPacket -> org.apache.commons.net.tftp.TFTPAckPacket:
    int _blockNumber -> a
    java.net.DatagramPacket _newDatagram(java.net.DatagramPacket,byte[]) -> a
    java.net.DatagramPacket newDatagram() -> newDatagram
    int getBlockNumber() -> getBlockNumber
    void setBlockNumber(int) -> setBlockNumber
org.apache.commons.net.tftp.TFTPClient -> org.apache.commons.net.tftp.TFTPClient:
    int DEFAULT_MAX_TIMEOUTS -> DEFAULT_MAX_TIMEOUTS
    int __maxTimeouts -> f
    void setMaxTimeouts(int) -> setMaxTimeouts
    int getMaxTimeouts() -> getMaxTimeouts
    int receiveFile(java.lang.String,int,java.io.OutputStream,java.net.InetAddress,int) -> receiveFile
    int receiveFile(java.lang.String,int,java.io.OutputStream,java.lang.String,int) -> receiveFile
    int receiveFile(java.lang.String,int,java.io.OutputStream,java.net.InetAddress) -> receiveFile
    int receiveFile(java.lang.String,int,java.io.OutputStream,java.lang.String) -> receiveFile
    void sendFile(java.lang.String,int,java.io.InputStream,java.net.InetAddress,int) -> sendFile
    void sendFile(java.lang.String,int,java.io.InputStream,java.lang.String,int) -> sendFile
    void sendFile(java.lang.String,int,java.io.InputStream,java.net.InetAddress) -> sendFile
    void sendFile(java.lang.String,int,java.io.InputStream,java.lang.String) -> sendFile
org.apache.commons.net.tftp.TFTPDataPacket -> org.apache.commons.net.tftp.TFTPDataPacket:
    int MAX_DATA_LENGTH -> MAX_DATA_LENGTH
    int MIN_DATA_LENGTH -> MIN_DATA_LENGTH
    int _blockNumber -> a
    int _length -> b
    int _offset -> c
    byte[] _data -> d
    java.net.DatagramPacket _newDatagram(java.net.DatagramPacket,byte[]) -> a
    java.net.DatagramPacket newDatagram() -> newDatagram
    int getBlockNumber() -> getBlockNumber
    void setBlockNumber(int) -> setBlockNumber
    void setData(byte[],int,int) -> setData
    int getDataLength() -> getDataLength
    int getDataOffset() -> getDataOffset
    byte[] getData() -> getData
org.apache.commons.net.tftp.TFTPErrorPacket -> org.apache.commons.net.tftp.TFTPErrorPacket:
    int UNDEFINED -> UNDEFINED
    int FILE_NOT_FOUND -> FILE_NOT_FOUND
    int ACCESS_VIOLATION -> ACCESS_VIOLATION
    int OUT_OF_SPACE -> OUT_OF_SPACE
    int ILLEGAL_OPERATION -> ILLEGAL_OPERATION
    int UNKNOWN_TID -> UNKNOWN_TID
    int FILE_EXISTS -> FILE_EXISTS
    int NO_SUCH_USER -> NO_SUCH_USER
    int _error -> a
    java.lang.String _message -> b
    java.net.DatagramPacket _newDatagram(java.net.DatagramPacket,byte[]) -> a
    java.net.DatagramPacket newDatagram() -> newDatagram
    int getError() -> getError
    java.lang.String getMessage() -> getMessage
org.apache.commons.net.tftp.TFTPPacket -> org.apache.commons.net.tftp.TFTPPacket:
    int READ_REQUEST -> READ_REQUEST
    int WRITE_REQUEST -> WRITE_REQUEST
    int DATA -> DATA
    int ACKNOWLEDGEMENT -> ACKNOWLEDGEMENT
    int ERROR -> ERROR
    int SEGMENT_SIZE -> SEGMENT_SIZE
    int _type -> e
    int _port -> f
    java.net.InetAddress _address -> g
    org.apache.commons.net.tftp.TFTPPacket newTFTPPacket(java.net.DatagramPacket) -> newTFTPPacket
    java.net.DatagramPacket _newDatagram(java.net.DatagramPacket,byte[]) -> a
    java.net.DatagramPacket newDatagram() -> newDatagram
    int getType() -> getType
    java.net.InetAddress getAddress() -> getAddress
    int getPort() -> getPort
    void setPort(int) -> setPort
    void setAddress(java.net.InetAddress) -> setAddress
org.apache.commons.net.tftp.TFTPPacketException -> org.apache.commons.net.tftp.TFTPPacketException:
org.apache.commons.net.tftp.TFTPReadRequestPacket -> org.apache.commons.net.tftp.TFTPReadRequestPacket:
org.apache.commons.net.tftp.TFTPRequestPacket -> org.apache.commons.net.tftp.TFTPRequestPacket:
    java.lang.String[] _modeStrings -> a
    byte[][] _modeBytes -> b
    int _mode -> c
    java.lang.String _filename -> d
    java.net.DatagramPacket _newDatagram(java.net.DatagramPacket,byte[]) -> a
    java.net.DatagramPacket newDatagram() -> newDatagram
    int getMode() -> getMode
    java.lang.String getFilename() -> getFilename
org.apache.commons.net.tftp.TFTPWriteRequestPacket -> org.apache.commons.net.tftp.TFTPWriteRequestPacket:
org.apache.commons.net.time.TimeTCPClient -> org.apache.commons.net.time.TimeTCPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    long SECONDS_1900_TO_1970 -> SECONDS_1900_TO_1970
    long getTime() -> getTime
    java.util.Date getDate() -> getDate
org.apache.commons.net.time.TimeUDPClient -> org.apache.commons.net.time.TimeUDPClient:
    int DEFAULT_PORT -> DEFAULT_PORT
    long SECONDS_1900_TO_1970 -> SECONDS_1900_TO_1970
    byte[] __dummyData -> e
    byte[] __timeData -> f
    long getTime(java.net.InetAddress,int) -> getTime
    long getTime(java.net.InetAddress) -> getTime
    java.util.Date getDate(java.net.InetAddress,int) -> getDate
    java.util.Date getDate(java.net.InetAddress) -> getDate
org.apache.commons.net.util.Base64 -> org.apache.commons.net.util.Base64:
    byte[] CHUNK_SEPARATOR -> a
    byte[] EMPTY_BYTE_ARRAY -> b
    byte[] STANDARD_ENCODE_TABLE -> c
    byte[] URL_SAFE_ENCODE_TABLE -> d
    byte[] DECODE_TABLE -> e
    byte[] encodeTable -> f
    int lineLength -> g
    byte[] lineSeparator -> h
    int decodeSize -> i
    int encodeSize -> j
    byte[] buffer -> k
    int pos -> l
    int readPos -> m
    int currentLinePos -> n
    int modulus -> o
    boolean eof -> p
    int x -> q
    boolean isUrlSafe() -> isUrlSafe
    int avail() -> a
    void resizeBuffer() -> b
    int readResults(byte[],int,int) -> a
    void setInitialBuffer(byte[],int,int) -> b
    void encode(byte[],int,int) -> c
    void decode(byte[],int,int) -> d
    boolean isBase64(byte) -> isBase64
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean containsBase64Byte(byte[]) -> a
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    java.lang.String encodeBase64StringUnChunked(byte[]) -> encodeBase64StringUnChunked
    java.lang.String encodeBase64String(byte[],boolean) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] decode(java.lang.String) -> decode
    byte[] getBytesUtf8(java.lang.String) -> a
    byte[] decode(byte[]) -> decode
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    boolean isWhiteSpace(byte) -> a
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.String newStringUtf8(byte[]) -> b
    byte[] encode(byte[]) -> encode
    long getEncodeLength(byte[],int,byte[]) -> a
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    byte[] toIntegerBytes(java.math.BigInteger) -> a
    void reset() -> c
org.apache.commons.net.util.Charsets -> org.apache.commons.net.util.Charsets:
    java.nio.charset.Charset toCharset(java.lang.String) -> toCharset
    java.nio.charset.Charset toCharset(java.lang.String,java.lang.String) -> toCharset
org.apache.commons.net.util.KeyManagerUtils -> org.apache.commons.net.util.KeyManagerUtils:
    java.lang.String DEFAULT_STORE_TYPE -> a
    javax.net.ssl.KeyManager createClientKeyManager(java.security.KeyStore,java.lang.String,java.lang.String) -> createClientKeyManager
    javax.net.ssl.KeyManager createClientKeyManager(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> createClientKeyManager
    javax.net.ssl.KeyManager createClientKeyManager(java.io.File,java.lang.String,java.lang.String) -> createClientKeyManager
    javax.net.ssl.KeyManager createClientKeyManager(java.io.File,java.lang.String) -> createClientKeyManager
    java.security.KeyStore loadStore(java.lang.String,java.io.File,java.lang.String) -> a
    java.lang.String findAlias(java.security.KeyStore) -> a
org.apache.commons.net.util.KeyManagerUtils$ClientKeyStore -> org.apache.commons.net.util.KeyManagerUtils$ClientKeyStore:
    java.security.cert.X509Certificate[] certChain -> a
    java.security.PrivateKey key -> b
    java.lang.String keyAlias -> c
    java.security.cert.X509Certificate[] getCertificateChain() -> a
    java.security.PrivateKey getPrivateKey() -> b
    java.lang.String getAlias() -> c
org.apache.commons.net.util.KeyManagerUtils$X509KeyManager -> org.apache.commons.net.util.KeyManagerUtils$X509KeyManager:
    org.apache.commons.net.util.KeyManagerUtils$ClientKeyStore keyStore -> a
    java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
    java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
    java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
org.apache.commons.net.util.ListenerList -> org.apache.commons.net.util.ListenerList:
    java.util.concurrent.CopyOnWriteArrayList __listeners -> a
    void addListener(java.util.EventListener) -> addListener
    void removeListener(java.util.EventListener) -> removeListener
    int getListenerCount() -> getListenerCount
    java.util.Iterator iterator() -> iterator
org.apache.commons.net.util.SSLContextUtils -> org.apache.commons.net.util.SSLContextUtils:
    javax.net.ssl.SSLContext createSSLContext(java.lang.String,javax.net.ssl.KeyManager,javax.net.ssl.TrustManager) -> createSSLContext
    javax.net.ssl.SSLContext createSSLContext(java.lang.String,javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[]) -> createSSLContext
org.apache.commons.net.util.SubnetUtils -> org.apache.commons.net.util.SubnetUtils:
    java.util.regex.Pattern addressPattern -> a
    java.util.regex.Pattern cidrPattern -> b
    int netmask -> c
    int address -> d
    int network -> e
    int broadcast -> f
    boolean inclusiveHostCount -> g
    boolean isInclusiveHostCount() -> isInclusiveHostCount
    void setInclusiveHostCount(boolean) -> setInclusiveHostCount
    org.apache.commons.net.util.SubnetUtils$SubnetInfo getInfo() -> getInfo
    void calculate(java.lang.String) -> a
    int toInteger(java.lang.String) -> b
    int matchAddress(java.util.regex.Matcher) -> a
    int[] toArray(int) -> b
    java.lang.String format(int[]) -> a
    int rangeCheck(int,int,int) -> a
    int pop(int) -> a
    java.lang.String toCidrNotation(java.lang.String,java.lang.String) -> a
    int access$000(org.apache.commons.net.util.SubnetUtils) -> a
    int access$100(org.apache.commons.net.util.SubnetUtils) -> b
    int access$200(org.apache.commons.net.util.SubnetUtils) -> c
    int access$300(org.apache.commons.net.util.SubnetUtils) -> d
    int access$400(org.apache.commons.net.util.SubnetUtils,java.lang.String) -> a
    int[] access$500(org.apache.commons.net.util.SubnetUtils,int) -> a
    java.lang.String access$600(org.apache.commons.net.util.SubnetUtils,int[]) -> a
    java.lang.String access$700(org.apache.commons.net.util.SubnetUtils,java.lang.String,java.lang.String) -> a
org.apache.commons.net.util.SubnetUtils$1 -> org.apache.commons.net.util.SubnetUtils$1:
org.apache.commons.net.util.SubnetUtils$SubnetInfo -> org.apache.commons.net.util.SubnetUtils$SubnetInfo:
    org.apache.commons.net.util.SubnetUtils this$0 -> a
    int netmask() -> a
    int network() -> b
    int address() -> c
    int broadcast() -> d
    int low() -> e
    int high() -> f
    boolean isInRange(java.lang.String) -> isInRange
    boolean isInRange(int) -> a
    java.lang.String getBroadcastAddress() -> getBroadcastAddress
    java.lang.String getNetworkAddress() -> getNetworkAddress
    java.lang.String getNetmask() -> getNetmask
    java.lang.String getAddress() -> getAddress
    java.lang.String getLowAddress() -> getLowAddress
    java.lang.String getHighAddress() -> getHighAddress
    int getAddressCount() -> getAddressCount
    int asInteger(java.lang.String) -> asInteger
    java.lang.String getCidrSignature() -> getCidrSignature
    java.lang.String[] getAllAddresses() -> getAllAddresses
    java.lang.String toString() -> toString
org.apache.commons.net.util.TrustManagerUtils -> org.apache.commons.net.util.TrustManagerUtils:
    java.security.cert.X509Certificate[] EMPTY_X509CERTIFICATE_ARRAY -> a
    javax.net.ssl.X509TrustManager ACCEPT_ALL -> b
    javax.net.ssl.X509TrustManager CHECK_SERVER_VALIDITY -> c
    javax.net.ssl.X509TrustManager getAcceptAllTrustManager() -> getAcceptAllTrustManager
    javax.net.ssl.X509TrustManager getValidateServerCertificateTrustManager() -> getValidateServerCertificateTrustManager
    javax.net.ssl.X509TrustManager getDefaultTrustManager(java.security.KeyStore) -> getDefaultTrustManager
    java.security.cert.X509Certificate[] access$000() -> a
org.apache.commons.net.util.TrustManagerUtils$TrustManager -> org.apache.commons.net.util.TrustManagerUtils$TrustManager:
    boolean checkServerValidity -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
org.apache.commons.net.whois.WhoisClient -> org.apache.commons.net.whois.WhoisClient:
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    int DEFAULT_PORT -> DEFAULT_PORT
    java.lang.String query(java.lang.String) -> query
    java.io.InputStream getInputStream(java.lang.String) -> getInputStream
org.json.simple.JSONArray -> org.a.a.a:
    java.lang.String toJSONString(java.util.List) -> a
    java.lang.String toJSONString() -> a
    java.lang.String toString() -> toString
org.json.simple.JSONAware -> org.a.a.b:
    java.lang.String toJSONString() -> a
org.json.simple.JSONObject -> org.a.a.c:
    java.lang.String toJSONString(java.util.Map) -> a
    java.lang.String toJSONString() -> a
    java.lang.String toJSONString(java.lang.String,java.lang.Object,java.lang.StringBuffer) -> a
    java.lang.String toString() -> toString
org.json.simple.JSONValue -> org.a.a.d:
    java.lang.Object parse(java.io.Reader) -> a
    java.lang.Object parse(java.lang.String) -> a
    java.lang.String toJSONString(java.lang.Object) -> a
    java.lang.String escape(java.lang.String) -> b
    void escape(java.lang.String,java.lang.StringBuffer) -> a
org.json.simple.parser.ContainerFactory -> org.a.a.a.a:
    java.util.Map createObjectContainer() -> a
    java.util.List creatArrayContainer() -> b
org.json.simple.parser.JSONParser -> org.a.a.a.b:
    java.util.LinkedList handlerStatusStack -> a
    org.json.simple.parser.Yylex lexer -> b
    org.json.simple.parser.Yytoken token -> c
    int status -> d
    int peekStatus(java.util.LinkedList) -> a
    void reset() -> a
    void reset(java.io.Reader) -> a
    int getPosition() -> b
    java.lang.Object parse(java.io.Reader) -> b
    java.lang.Object parse(java.io.Reader,org.json.simple.parser.ContainerFactory) -> a
    void nextToken() -> c
    java.util.Map createObjectContainer(org.json.simple.parser.ContainerFactory) -> a
    java.util.List createArrayContainer(org.json.simple.parser.ContainerFactory) -> b
org.json.simple.parser.ParseException -> org.a.a.a.c:
    int errorType -> a
    java.lang.Object unexpectedObject -> b
    int position -> c
    java.lang.String toString() -> toString
org.json.simple.parser.Yylex -> org.a.a.a.d:
    int[] ZZ_LEXSTATE -> a
    char[] ZZ_CMAP -> b
    int[] ZZ_ACTION -> c
    int[] ZZ_ROWMAP -> d
    int[] ZZ_TRANS -> e
    java.lang.String[] ZZ_ERROR_MSG -> f
    int[] ZZ_ATTRIBUTE -> g
    java.io.Reader zzReader -> h
    int zzState -> i
    int zzLexicalState -> j
    char[] zzBuffer -> k
    int zzMarkedPos -> l
    int zzCurrentPos -> m
    int zzStartRead -> n
    int zzEndRead -> o
    int yyline -> p
    int yychar -> q
    int yycolumn -> r
    boolean zzAtBOL -> s
    boolean zzAtEOF -> t
    java.lang.StringBuffer sb -> u
    int[] zzUnpackAction() -> d
    int zzUnpackAction(java.lang.String,int,int[]) -> a
    int[] zzUnpackRowMap() -> e
    int zzUnpackRowMap(java.lang.String,int,int[]) -> b
    int[] zzUnpackAttribute() -> f
    int zzUnpackAttribute(java.lang.String,int,int[]) -> c
    int getPosition() -> a
    char[] zzUnpackCMap(java.lang.String) -> a
    boolean zzRefill() -> g
    void yyreset(java.io.Reader) -> a
    void yybegin(int) -> a
    java.lang.String yytext() -> b
    char yycharat(int) -> b
    void zzScanError(int) -> c
    org.json.simple.parser.Yytoken yylex() -> c
org.json.simple.parser.Yytoken -> org.a.a.a.e:
    int type -> a
    java.lang.Object value -> b
    java.lang.String toString() -> toString
